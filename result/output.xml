<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.9.4 on win32)" generated="20210625 19:15:06.644" rpa="false" schemaversion="2">
<suite id="s1" name="SW2 WLAN 5GhzChannelID" source="D:\Personal\Automation\KPN\WiFi\Tests\SW2_WLAN_5GhzChannelID.robot">
<kw name="Fetch the Initial SSID" type="SETUP">
<kw name="Login to DUT" library="SW2CommonFunction">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210625 19:15:07.110" level="INFO">Opening browser 'firefox' to base url 'http://192.168.2.10/login.htm'.</msg>
<msg timestamp="20210625 19:15:07.121" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-64.log</msg>
<status status="PASS" starttime="20210625 19:15:07.110" endtime="20210625 19:15:55.226"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210625 19:15:55.226" endtime="20210625 19:15:55.233"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:15:57.248" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:15:55.233" endtime="20210625 19:15:57.248"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210625 19:15:57.249" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210625 19:15:57.557" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210625 19:15:57.248" endtime="20210625 19:15:57.594"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:15:59.603" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:15:57.594" endtime="20210625 19:15:59.603"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:15:59.604" level="INFO">Clicking element '//div[@id='btn_loginbtn']'.</msg>
<status status="PASS" starttime="20210625 19:15:59.603" endtime="20210625 19:15:59.859"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:01.868" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:15:59.860" endtime="20210625 19:16:01.868"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:16:01.869" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210625 19:16:01.868" endtime="20210625 19:16:01.877"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Status}</arg>
<arg>10s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210625 19:16:01.877" endtime="20210625 19:16:01.882"/>
</kw>
<status status="PASS" starttime="20210625 19:15:07.109" endtime="20210625 19:16:01.883"/>
</kw>
<kw name="Go to Settings Page" library="SW2SettingPage">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:16:01.883" endtime="20210625 19:16:01.887"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>name:topFrame</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:16:01.887" level="INFO">Selecting frame 'name:topFrame'.</msg>
<status status="PASS" starttime="20210625 19:16:01.887" endtime="20210625 19:16:01.895"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Settings_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:01.896" level="INFO">Clicking element '//div[@id='id_nav_1']'.</msg>
<status status="PASS" starttime="20210625 19:16:01.896" endtime="20210625 19:16:02.124"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:04.133" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:16:02.124" endtime="20210625 19:16:04.133"/>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:16:04.133" endtime="20210625 19:16:04.137"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:16:04.138" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210625 19:16:04.137" endtime="20210625 19:16:04.144"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Wireless Settings}</arg>
<arg>5s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210625 19:16:04.144" endtime="20210625 19:16:04.151"/>
</kw>
<status status="PASS" starttime="20210625 19:16:01.883" endtime="20210625 19:16:04.151"/>
</kw>
<kw name="Get the SSID name" library="SW2SettingPage">
<var>${Orginal_ssid}</var>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>Channel</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210625 19:16:04.159" level="INFO">Current frame contains text 'Channel'.</msg>
<status status="PASS" starttime="20210625 19:16:04.152" endtime="20210625 19:16:04.159"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${current_ssid}</var>
<arg>${ssid_name_2.4G}</arg>
<arg>value</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20210625 19:16:04.174" level="INFO">${current_ssid} = owl</msg>
<status status="PASS" starttime="20210625 19:16:04.159" endtime="20210625 19:16:04.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${current_ssid} is Current ssid</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:16:04.175" level="INFO">owl is Current ssid</msg>
<status status="PASS" starttime="20210625 19:16:04.175" endtime="20210625 19:16:04.175"/>
</kw>
<msg timestamp="20210625 19:16:04.176" level="INFO">${Orginal_ssid} = owl</msg>
<status status="PASS" starttime="20210625 19:16:04.151" endtime="20210625 19:16:04.176"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Orginal_ssid}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20210625 19:16:04.177" level="INFO">${Orginal_ssid} = owl</msg>
<status status="PASS" starttime="20210625 19:16:04.176" endtime="20210625 19:16:04.177"/>
</kw>
<kw name="Logout from DUT" library="SW2CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:16:04.178" endtime="20210625 19:16:04.182"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>name:topFrame</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:16:04.182" level="INFO">Selecting frame 'name:topFrame'.</msg>
<status status="PASS" starttime="20210625 19:16:04.182" endtime="20210625 19:16:04.188"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:04.189" level="INFO">Clicking element '//*[@id="u_login"]'.</msg>
<status status="PASS" starttime="20210625 19:16:04.189" endtime="20210625 19:16:04.421"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:06.428" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:16:04.421" endtime="20210625 19:16:06.428"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210625 19:16:06.428" endtime="20210625 19:16:07.611"/>
</kw>
<status status="PASS" starttime="20210625 19:16:04.178" endtime="20210625 19:16:07.611"/>
</kw>
<status status="PASS" starttime="20210625 19:15:07.109" endtime="20210625 19:16:07.611"/>
</kw>
<test id="s1-t1" name="Verify setting 5Ghz ChannelID 36 with Bandwith 20 MHz">
<kw name="Login to DUT" library="SW2CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210625 19:16:07.614" level="INFO">Opening browser 'firefox' to base url 'http://192.168.2.10/login.htm'.</msg>
<msg timestamp="20210625 19:16:07.624" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-65.log</msg>
<status status="PASS" starttime="20210625 19:16:07.614" endtime="20210625 19:16:18.221"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210625 19:16:18.221" endtime="20210625 19:16:18.225"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:20.229" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:16:18.226" endtime="20210625 19:16:20.229"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210625 19:16:20.230" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210625 19:16:20.529" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210625 19:16:20.229" endtime="20210625 19:16:20.556"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:22.569" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:16:20.557" endtime="20210625 19:16:22.569"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:22.570" level="INFO">Clicking element '//div[@id='btn_loginbtn']'.</msg>
<status status="PASS" starttime="20210625 19:16:22.569" endtime="20210625 19:16:22.812"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:24.819" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:16:22.812" endtime="20210625 19:16:24.819"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:16:24.820" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210625 19:16:24.819" endtime="20210625 19:16:24.830"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Status}</arg>
<arg>10s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210625 19:16:24.830" endtime="20210625 19:16:24.838"/>
</kw>
<status status="PASS" starttime="20210625 19:16:07.612" endtime="20210625 19:16:24.838"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>36</arg>
<arg>2</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>SW2</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith in SW2</doc>
<kw name="Go to Settings Page" library="SW2SettingPage">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:16:24.840" endtime="20210625 19:16:24.845"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>name:topFrame</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:16:24.845" level="INFO">Selecting frame 'name:topFrame'.</msg>
<status status="PASS" starttime="20210625 19:16:24.845" endtime="20210625 19:16:24.855"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Settings_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:24.856" level="INFO">Clicking element '//div[@id='id_nav_1']'.</msg>
<status status="PASS" starttime="20210625 19:16:24.856" endtime="20210625 19:16:25.076"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:27.084" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:16:25.077" endtime="20210625 19:16:27.084"/>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:16:27.084" endtime="20210625 19:16:27.090"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:16:27.091" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210625 19:16:27.091" endtime="20210625 19:16:27.103"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Wireless Settings}</arg>
<arg>5s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210625 19:16:27.103" endtime="20210625 19:16:27.111"/>
</kw>
<status status="PASS" starttime="20210625 19:16:24.840" endtime="20210625 19:16:27.112"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="SW2SettingPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:27.113" level="INFO">Clicking element '//tbody/tr[@id='wireless_5ghz']/td[@class='tdTextTa_20']/div[1]'.</msg>
<status status="PASS" starttime="20210625 19:16:27.113" endtime="20210625 19:16:27.357"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//tr[@id='wireless_5ghz']//li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:27.358" level="INFO">Clicking element '//tr[@id='wireless_5ghz']//li[2]/a'.</msg>
<status status="PASS" starttime="20210625 19:16:27.357" endtime="20210625 19:16:27.596"/>
</kw>
<status status="PASS" starttime="20210625 19:16:27.112" endtime="20210625 19:16:27.596"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="SW2SettingPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:27.598" level="INFO">Clicking element '//table[3]/tbody[1]/tr[4]/td[2]/div[1]'.</msg>
<status status="PASS" starttime="20210625 19:16:27.597" endtime="20210625 19:16:27.835"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//table[3]/tbody/tr[4]/td[2]/div/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:27.836" level="INFO">Clicking element '//table[3]/tbody/tr[4]/td[2]/div/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210625 19:16:27.835" endtime="20210625 19:16:28.093"/>
</kw>
<status status="PASS" starttime="20210625 19:16:27.597" endtime="20210625 19:16:28.093"/>
</kw>
<kw name="Save the WiFi setting" library="SW2SettingPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:28.094" level="INFO">Clicking element '//span[@class='ButtonMiddle tapurple']'.</msg>
<status status="PASS" starttime="20210625 19:16:28.094" endtime="20210625 19:16:28.331"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:30.342" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:16:28.332" endtime="20210625 19:16:30.342"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting_Popup}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:30.343" level="INFO">Clicking element '//body//div[@id='msgbox']//div//div//div[1]'.</msg>
<status status="PASS" starttime="20210625 19:16:30.342" endtime="20210625 19:16:30.599"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:45.612" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210625 19:16:30.599" endtime="20210625 19:16:45.612"/>
</kw>
<status status="PASS" starttime="20210625 19:16:28.093" endtime="20210625 19:16:45.613"/>
</kw>
<kw name="Logout from DUT" library="SW2CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:16:45.614" endtime="20210625 19:16:45.621"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>name:topFrame</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:16:45.622" level="INFO">Selecting frame 'name:topFrame'.</msg>
<status status="PASS" starttime="20210625 19:16:45.622" endtime="20210625 19:16:45.633"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:16:45.634" level="INFO">Clicking element '//*[@id="u_login"]'.</msg>
<status status="PASS" starttime="20210625 19:16:45.633" endtime="20210625 19:16:45.854"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:16:47.862" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:16:45.854" endtime="20210625 19:16:47.862"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210625 19:16:47.862" endtime="20210625 19:16:49.484"/>
</kw>
<status status="PASS" starttime="20210625 19:16:45.613" endtime="20210625 19:16:49.485"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:17:49.487" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210625 19:16:49.485" endtime="20210625 19:17:49.487"/>
</kw>
<status status="PASS" starttime="20210625 19:16:49.485" endtime="20210625 19:17:49.487"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>180s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210625 19:17:49.487" endtime="20210625 19:17:49.488"/>
</kw>
<status status="NOT RUN" starttime="20210625 19:17:49.487" endtime="20210625 19:17:49.488"/>
</branch>
<status status="PASS" starttime="20210625 19:16:49.485" endtime="20210625 19:17:49.488"/>
</if>
<for flavor="IN RANGE">
<var>${VAR}</var>
<value>14</value>
<iter>
<var name="${VAR}">0</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<arg>${Orginal_ssid}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${cmd}</var>
<arg>netsh wlan show network mode=bssid | Select-String -Pattern "${SSID}" -Context 1,16</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210625 19:17:49.489" level="INFO">${cmd} = netsh wlan show network mode=bssid | Select-String -Pattern "owl" -Context 1,16</msg>
<status status="PASS" starttime="20210625 19:17:49.488" endtime="20210625 19:17:49.489"/>
</kw>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:17:49.489" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"owl\" -Context 1,16"</msg>
<msg timestamp="20210625 19:17:49.498" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:17:50.428" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210625 19:17:49.489" endtime="20210625 19:17:50.429"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:17:50.430" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"owl\" -Context 1,16"</msg>
<msg timestamp="20210625 19:17:50.433" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:17:51.000" level="INFO">Process completed.</msg>
<msg timestamp="20210625 19:17:51.001" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210625 19:17:50.429" endtime="20210625 19:17:51.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:17:51.002" level="INFO">
  
&gt; SSID 3 : owl
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 62:19:b5:6e:3f:39
           Signal             : 85%  
           Radio type         : 802.11ac
           Channel            : 36 
           Basic rates (Mbps) : 24 58.5
           Other rates (Mbps) : 12 18 36 48 54 526.5
      BSSID 2                 : 92:19:b5:6e:3f:38
           Signal             : 63%  
           Radio type         : 802.11n
           Channel            : 6 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210625 19:17:51.001" endtime="20210625 19:17:51.002"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210625 19:17:51.003" level="INFO">${Analyser_ChannelID_5Ghz} = ['36', '6']</msg>
<status status="PASS" starttime="20210625 19:17:51.002" endtime="20210625 19:17:51.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:17:51.004" level="INFO">Analyser Channel IDs are ['36', '6']</msg>
<status status="PASS" starttime="20210625 19:17:51.004" endtime="20210625 19:17:51.004"/>
</kw>
<msg timestamp="20210625 19:17:51.004" level="INFO">${5Ghz_ChannelID_Analyser} = ['36', '6']</msg>
<status status="PASS" starttime="20210625 19:17:49.488" endtime="20210625 19:17:51.004"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210625 19:17:51.005" level="INFO">Length is 2</msg>
<msg timestamp="20210625 19:17:51.005" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210625 19:17:51.004" endtime="20210625 19:17:51.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${5Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:17:51.005" level="INFO">ChannelIDs are ['36', '6'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210625 19:17:51.005" endtime="20210625 19:17:51.005"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>list Should contain value</arg>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210625 19:17:51.006" endtime="20210625 19:17:51.006"/>
</kw>
<msg timestamp="20210625 19:17:51.006" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20210625 19:17:51.005" endtime="20210625 19:17:51.006"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${status}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210625 19:17:51.006" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210625 19:17:51.006" endtime="20210625 19:17:51.006"/>
</kw>
<status status="PASS" starttime="20210625 19:17:49.488" endtime="20210625 19:17:51.006"/>
</iter>
<status status="PASS" starttime="20210625 19:17:49.488" endtime="20210625 19:17:51.006"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210625 19:17:51.007" endtime="20210625 19:17:51.008"/>
</kw>
<kw name="Connect to SSID" library="CommonWindowsFunction">
<var>${Connection_status}</var>
<arg>${Orginal_ssid}</arg>
<kw name="Add WiFi Profile" library="CommonWindowsFunction">
<arg>${SSID}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${profile_name}</var>
<arg>Wi-Fi-${SSID}.xml</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210625 19:17:51.009" level="INFO">${profile_name} = Wi-Fi-owl.xml</msg>
<status status="PASS" starttime="20210625 19:17:51.009" endtime="20210625 19:17:51.009"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${add_profile_cmd}</var>
<arg>netsh wlan add profile filename=\"WiFiProfile\\${profile_name}"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210625 19:17:51.010" level="INFO">${add_profile_cmd} = netsh wlan add profile filename="WiFiProfile\Wi-Fi-owl.xml"</msg>
<status status="PASS" starttime="20210625 19:17:51.009" endtime="20210625 19:17:51.010"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${add_profile_cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:17:51.010" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan add profile filename=\"WiFiProfile\Wi-Fi-owl.xml\""</msg>
<msg timestamp="20210625 19:17:51.014" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:17:51.521" level="INFO">Process completed.</msg>
<msg timestamp="20210625 19:17:51.521" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210625 19:17:51.010" endtime="20210625 19:17:51.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:17:51.523" level="INFO">Profile owl is added on interface Wi-Fi.</msg>
<status status="PASS" starttime="20210625 19:17:51.522" endtime="20210625 19:17:51.523"/>
</kw>
<status status="PASS" starttime="20210625 19:17:51.008" endtime="20210625 19:17:51.523"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Connect_SSID}</var>
<arg>netsh wlan connect name="${SSID}" ssid="${SSID}" interface="Wi-Fi"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210625 19:17:51.524" level="INFO">${Connect_SSID} = netsh wlan connect name="owl" ssid="owl" interface="Wi-Fi"</msg>
<status status="PASS" starttime="20210625 19:17:51.524" endtime="20210625 19:17:51.524"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${Connect_SSID}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:17:51.524" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan connect name=\"owl\" ssid=\"owl\" interface=\"Wi-Fi\""</msg>
<msg timestamp="20210625 19:17:51.528" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:17:52.560" level="INFO">Process completed.</msg>
<msg timestamp="20210625 19:17:52.560" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210625 19:17:51.524" endtime="20210625 19:17:52.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:17:52.564" level="INFO">Connection request was completed successfully.</msg>
<status status="PASS" starttime="20210625 19:17:52.561" endtime="20210625 19:17:52.564"/>
</kw>
<msg timestamp="20210625 19:17:52.568" level="INFO">${Connection_status} = Connection request was completed successfully.</msg>
<status status="PASS" starttime="20210625 19:17:51.008" endtime="20210625 19:17:52.568"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>"Connection request was completed successfully" in """${Connection_status}"""</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210625 19:17:52.569" endtime="20210625 19:17:52.570"/>
</kw>
<kw name="Ping to Gateway" library="CommonWindowsFunction">
<var>${Ping_Status}</var>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${ping_gateway}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:17:52.572" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "ping 192.168.2.254"</msg>
<msg timestamp="20210625 19:17:52.598" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:17:57.632" level="INFO">Process completed.</msg>
<msg timestamp="20210625 19:17:57.633" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210625 19:17:52.571" endtime="20210625 19:17:57.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:17:57.635" level="INFO">
Pinging 192.168.2.254 with 32 bytes of data:
Reply from 192.168.2.254: bytes=32 time=1ms TTL=64
Reply from 192.168.2.254: bytes=32 time=1ms TTL=64
Reply from 192.168.2.254: bytes=32 time=1ms TTL=64
Reply from 192.168.2.254: bytes=32 time=4ms TTL=64

Ping statistics for 192.168.2.254:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 1ms, Maximum = 4ms, Average = 1ms</msg>
<status status="PASS" starttime="20210625 19:17:57.633" endtime="20210625 19:17:57.635"/>
</kw>
<msg timestamp="20210625 19:17:57.637" level="INFO">${Ping_Status} = 
Pinging 192.168.2.254 with 32 bytes of data:
Reply from 192.168.2.254: bytes=32 time=1ms TTL=64
Reply from 192.168.2.254: bytes=32 time=1ms TTL=64
Reply from 192.168.2.254: bytes=32 time=1ms TTL=64
R...</msg>
<status status="PASS" starttime="20210625 19:17:52.570" endtime="20210625 19:17:57.637"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>"Reply from.*bytes=32 time&lt;1ms TTL=64"</arg>
<arg>"${Ping_Status}"</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210625 19:17:57.637" endtime="20210625 19:17:57.638"/>
</kw>
<status status="PASS" starttime="20210625 19:16:24.839" endtime="20210625 19:17:57.638"/>
</kw>
<status status="PASS" starttime="20210625 19:16:07.611" endtime="20210625 19:17:57.640"/>
</test>
<test id="s1-t2" name="Verify setting 5Ghz ChannelID 40 with Bandwith 20 MHz">
<kw name="Login to DUT" library="SW2CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210625 19:17:57.649" level="INFO">Opening browser 'firefox' to base url 'http://192.168.2.10/login.htm'.</msg>
<msg timestamp="20210625 19:17:57.663" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-66.log</msg>
<status status="PASS" starttime="20210625 19:17:57.648" endtime="20210625 19:18:07.203"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210625 19:18:07.203" endtime="20210625 19:18:07.207"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:18:09.221" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:18:07.207" endtime="20210625 19:18:09.221"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210625 19:18:09.223" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210625 19:18:09.519" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210625 19:18:09.222" endtime="20210625 19:18:09.545"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:18:11.561" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:18:09.545" endtime="20210625 19:18:11.561"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:18:11.562" level="INFO">Clicking element '//div[@id='btn_loginbtn']'.</msg>
<status status="PASS" starttime="20210625 19:18:11.561" endtime="20210625 19:18:11.803"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:18:13.811" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:18:11.803" endtime="20210625 19:18:13.811"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:18:13.812" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210625 19:18:13.811" endtime="20210625 19:18:13.823"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Status}</arg>
<arg>10s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210625 19:18:13.823" endtime="20210625 19:18:13.831"/>
</kw>
<status status="PASS" starttime="20210625 19:17:57.647" endtime="20210625 19:18:13.832"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>40</arg>
<arg>3</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>SW2</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith in SW2</doc>
<kw name="Go to Settings Page" library="SW2SettingPage">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:18:13.834" endtime="20210625 19:18:13.838"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>name:topFrame</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:18:13.839" level="INFO">Selecting frame 'name:topFrame'.</msg>
<status status="PASS" starttime="20210625 19:18:13.838" endtime="20210625 19:18:13.851"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Settings_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:18:13.852" level="INFO">Clicking element '//div[@id='id_nav_1']'.</msg>
<status status="PASS" starttime="20210625 19:18:13.852" endtime="20210625 19:18:14.084"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:18:16.091" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:18:14.084" endtime="20210625 19:18:16.091"/>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:18:16.091" endtime="20210625 19:18:16.095"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:18:16.096" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210625 19:18:16.095" endtime="20210625 19:18:16.104"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Wireless Settings}</arg>
<arg>5s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210625 19:18:16.104" endtime="20210625 19:18:16.112"/>
</kw>
<status status="PASS" starttime="20210625 19:18:13.833" endtime="20210625 19:18:16.112"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="SW2SettingPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:18:16.113" level="INFO">Clicking element '//tbody/tr[@id='wireless_5ghz']/td[@class='tdTextTa_20']/div[1]'.</msg>
<status status="PASS" starttime="20210625 19:18:16.113" endtime="20210625 19:18:16.333"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//tr[@id='wireless_5ghz']//li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:18:16.334" level="INFO">Clicking element '//tr[@id='wireless_5ghz']//li[3]/a'.</msg>
<status status="PASS" starttime="20210625 19:18:16.334" endtime="20210625 19:18:16.557"/>
</kw>
<status status="PASS" starttime="20210625 19:18:16.112" endtime="20210625 19:18:16.558"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="SW2SettingPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:18:16.559" level="INFO">Clicking element '//table[3]/tbody[1]/tr[4]/td[2]/div[1]'.</msg>
<status status="PASS" starttime="20210625 19:18:16.558" endtime="20210625 19:18:16.783"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//table[3]/tbody/tr[4]/td[2]/div/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:18:16.784" level="INFO">Clicking element '//table[3]/tbody/tr[4]/td[2]/div/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210625 19:18:16.783" endtime="20210625 19:18:17.008"/>
</kw>
<status status="PASS" starttime="20210625 19:18:16.558" endtime="20210625 19:18:17.008"/>
</kw>
<kw name="Save the WiFi setting" library="SW2SettingPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:18:17.009" level="INFO">Clicking element '//span[@class='ButtonMiddle tapurple']'.</msg>
<status status="PASS" starttime="20210625 19:18:17.009" endtime="20210625 19:18:17.247"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:18:19.256" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:18:17.248" endtime="20210625 19:18:19.256"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting_Popup}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:18:19.257" level="INFO">Clicking element '//body//div[@id='msgbox']//div//div//div[1]'.</msg>
<status status="PASS" starttime="20210625 19:18:19.256" endtime="20210625 19:18:19.515"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:18:34.526" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210625 19:18:19.516" endtime="20210625 19:18:34.527"/>
</kw>
<status status="PASS" starttime="20210625 19:18:17.008" endtime="20210625 19:18:34.527"/>
</kw>
<kw name="Logout from DUT" library="SW2CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:18:34.528" endtime="20210625 19:18:34.532"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>name:topFrame</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:18:34.532" level="INFO">Selecting frame 'name:topFrame'.</msg>
<status status="PASS" starttime="20210625 19:18:34.532" endtime="20210625 19:18:34.540"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:18:34.541" level="INFO">Clicking element '//*[@id="u_login"]'.</msg>
<status status="PASS" starttime="20210625 19:18:34.540" endtime="20210625 19:18:34.767"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:18:36.776" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:18:34.768" endtime="20210625 19:18:36.776"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210625 19:18:36.776" endtime="20210625 19:18:38.084"/>
</kw>
<status status="PASS" starttime="20210625 19:18:34.527" endtime="20210625 19:18:38.085"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:19:38.087" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210625 19:18:38.085" endtime="20210625 19:19:38.087"/>
</kw>
<status status="PASS" starttime="20210625 19:18:38.085" endtime="20210625 19:19:38.087"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>180s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210625 19:19:38.088" endtime="20210625 19:19:38.088"/>
</kw>
<status status="NOT RUN" starttime="20210625 19:19:38.088" endtime="20210625 19:19:38.088"/>
</branch>
<status status="PASS" starttime="20210625 19:18:38.085" endtime="20210625 19:19:38.088"/>
</if>
<for flavor="IN RANGE">
<var>${VAR}</var>
<value>14</value>
<iter>
<var name="${VAR}">0</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<arg>${Orginal_ssid}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${cmd}</var>
<arg>netsh wlan show network mode=bssid | Select-String -Pattern "${SSID}" -Context 1,16</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210625 19:19:38.090" level="INFO">${cmd} = netsh wlan show network mode=bssid | Select-String -Pattern "owl" -Context 1,16</msg>
<status status="PASS" starttime="20210625 19:19:38.089" endtime="20210625 19:19:38.090"/>
</kw>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:19:38.090" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"owl\" -Context 1,16"</msg>
<msg timestamp="20210625 19:19:38.095" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:19:38.761" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210625 19:19:38.090" endtime="20210625 19:19:38.761"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:19:38.762" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"owl\" -Context 1,16"</msg>
<msg timestamp="20210625 19:19:38.766" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:19:39.333" level="INFO">Process completed.</msg>
<msg timestamp="20210625 19:19:39.333" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210625 19:19:38.762" endtime="20210625 19:19:39.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:19:39.335" level="INFO">
  
&gt; SSID 2 : owl
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 92:19:b5:6e:3f:38
           Signal             : 66%  
           Radio type         : 802.11n
           Channel            : 1 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 3 : Ziggo
      Network type            : Infrastructure
      Authentication          : WPA2-Enterprise
      Encryption              : CCMP 
      BSSID 1                 : 6a:02:98:86:8e:25
           Signal             : 41%  

</msg>
<status status="PASS" starttime="20210625 19:19:39.334" endtime="20210625 19:19:39.335"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210625 19:19:39.336" level="INFO">${Analyser_ChannelID_5Ghz} = ['1']</msg>
<status status="PASS" starttime="20210625 19:19:39.335" endtime="20210625 19:19:39.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:19:39.337" level="INFO">Analyser Channel IDs are ['1']</msg>
<status status="PASS" starttime="20210625 19:19:39.336" endtime="20210625 19:19:39.337"/>
</kw>
<msg timestamp="20210625 19:19:39.337" level="INFO">${5Ghz_ChannelID_Analyser} = ['1']</msg>
<status status="PASS" starttime="20210625 19:19:38.089" endtime="20210625 19:19:39.337"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210625 19:19:39.337" level="INFO">Length is 1</msg>
<msg timestamp="20210625 19:19:39.337" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 1</msg>
<status status="PASS" starttime="20210625 19:19:39.337" endtime="20210625 19:19:39.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${5Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:19:39.338" level="INFO">ChannelIDs are ['1'] and Length of ChannelIDs is 1</msg>
<status status="PASS" starttime="20210625 19:19:39.337" endtime="20210625 19:19:39.338"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>list Should contain value</arg>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<msg timestamp="20210625 19:19:39.339" level="FAIL">[ 1 ] does not contain value '40'.</msg>
<status status="FAIL" starttime="20210625 19:19:39.338" endtime="20210625 19:19:39.339"/>
</kw>
<msg timestamp="20210625 19:19:39.339" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20210625 19:19:39.338" endtime="20210625 19:19:39.339"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${status}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20210625 19:19:39.339" endtime="20210625 19:19:39.339"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>30s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:20:09.347" level="INFO">Slept 30 seconds</msg>
<status status="PASS" starttime="20210625 19:19:39.340" endtime="20210625 19:20:09.347"/>
</kw>
<status status="PASS" starttime="20210625 19:19:38.088" endtime="20210625 19:20:09.348"/>
</iter>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<arg>${Orginal_ssid}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${cmd}</var>
<arg>netsh wlan show network mode=bssid | Select-String -Pattern "${SSID}" -Context 1,16</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210625 19:20:09.349" level="INFO">${cmd} = netsh wlan show network mode=bssid | Select-String -Pattern "owl" -Context 1,16</msg>
<status status="PASS" starttime="20210625 19:20:09.349" endtime="20210625 19:20:09.349"/>
</kw>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:20:09.350" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"owl\" -Context 1,16"</msg>
<msg timestamp="20210625 19:20:09.354" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:20:09.933" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210625 19:20:09.349" endtime="20210625 19:20:09.934"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:20:09.934" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"owl\" -Context 1,16"</msg>
<msg timestamp="20210625 19:20:09.938" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:20:10.537" level="INFO">Process completed.</msg>
<msg timestamp="20210625 19:20:10.537" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210625 19:20:09.934" endtime="20210625 19:20:10.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:20:10.538" level="INFO">
  
&gt; SSID 1 : owl
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 62:19:b5:6e:3f:39
           Signal             : 86%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 24 58.5
           Other rates (Mbps) : 12 18 36 48 54 526.5
      BSSID 2                 : 92:19:b5:6e:3f:38
           Signal             : 71%  
           Radio type         : 802.11n
           Channel            : 1 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210625 19:20:10.537" endtime="20210625 19:20:10.538"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210625 19:20:10.540" level="INFO">${Analyser_ChannelID_5Ghz} = ['40', '1']</msg>
<status status="PASS" starttime="20210625 19:20:10.539" endtime="20210625 19:20:10.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:20:10.540" level="INFO">Analyser Channel IDs are ['40', '1']</msg>
<status status="PASS" starttime="20210625 19:20:10.540" endtime="20210625 19:20:10.540"/>
</kw>
<msg timestamp="20210625 19:20:10.541" level="INFO">${5Ghz_ChannelID_Analyser} = ['40', '1']</msg>
<status status="PASS" starttime="20210625 19:20:09.348" endtime="20210625 19:20:10.541"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210625 19:20:10.541" level="INFO">Length is 2</msg>
<msg timestamp="20210625 19:20:10.541" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210625 19:20:10.541" endtime="20210625 19:20:10.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${5Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:20:10.542" level="INFO">ChannelIDs are ['40', '1'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210625 19:20:10.541" endtime="20210625 19:20:10.542"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>list Should contain value</arg>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210625 19:20:10.542" endtime="20210625 19:20:10.542"/>
</kw>
<msg timestamp="20210625 19:20:10.543" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20210625 19:20:10.542" endtime="20210625 19:20:10.543"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${status}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210625 19:20:10.543" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210625 19:20:10.543" endtime="20210625 19:20:10.543"/>
</kw>
<status status="PASS" starttime="20210625 19:20:09.348" endtime="20210625 19:20:10.543"/>
</iter>
<status status="PASS" starttime="20210625 19:19:38.088" endtime="20210625 19:20:10.543"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210625 19:20:10.543" endtime="20210625 19:20:10.543"/>
</kw>
<kw name="Connect to SSID" library="CommonWindowsFunction">
<var>${Connection_status}</var>
<arg>${Orginal_ssid}</arg>
<kw name="Add WiFi Profile" library="CommonWindowsFunction">
<arg>${SSID}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${profile_name}</var>
<arg>Wi-Fi-${SSID}.xml</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210625 19:20:10.545" level="INFO">${profile_name} = Wi-Fi-owl.xml</msg>
<status status="PASS" starttime="20210625 19:20:10.544" endtime="20210625 19:20:10.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${add_profile_cmd}</var>
<arg>netsh wlan add profile filename=\"WiFiProfile\\${profile_name}"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210625 19:20:10.545" level="INFO">${add_profile_cmd} = netsh wlan add profile filename="WiFiProfile\Wi-Fi-owl.xml"</msg>
<status status="PASS" starttime="20210625 19:20:10.545" endtime="20210625 19:20:10.545"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${add_profile_cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:20:10.546" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan add profile filename=\"WiFiProfile\Wi-Fi-owl.xml\""</msg>
<msg timestamp="20210625 19:20:10.550" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:20:11.035" level="INFO">Process completed.</msg>
<msg timestamp="20210625 19:20:11.035" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210625 19:20:10.545" endtime="20210625 19:20:11.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:20:11.038" level="INFO">Profile owl is added on interface Wi-Fi.</msg>
<status status="PASS" starttime="20210625 19:20:11.036" endtime="20210625 19:20:11.038"/>
</kw>
<status status="PASS" starttime="20210625 19:20:10.544" endtime="20210625 19:20:11.038"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Connect_SSID}</var>
<arg>netsh wlan connect name="${SSID}" ssid="${SSID}" interface="Wi-Fi"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210625 19:20:11.039" level="INFO">${Connect_SSID} = netsh wlan connect name="owl" ssid="owl" interface="Wi-Fi"</msg>
<status status="PASS" starttime="20210625 19:20:11.039" endtime="20210625 19:20:11.039"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${Connect_SSID}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:20:11.040" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan connect name=\"owl\" ssid=\"owl\" interface=\"Wi-Fi\""</msg>
<msg timestamp="20210625 19:20:11.044" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:20:11.851" level="INFO">Process completed.</msg>
<msg timestamp="20210625 19:20:11.852" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210625 19:20:11.040" endtime="20210625 19:20:11.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:20:11.855" level="INFO">Connection request was completed successfully.</msg>
<status status="PASS" starttime="20210625 19:20:11.853" endtime="20210625 19:20:11.856"/>
</kw>
<msg timestamp="20210625 19:20:11.858" level="INFO">${Connection_status} = Connection request was completed successfully.</msg>
<status status="PASS" starttime="20210625 19:20:10.544" endtime="20210625 19:20:11.858"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>"Connection request was completed successfully" in """${Connection_status}"""</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210625 19:20:11.858" endtime="20210625 19:20:11.859"/>
</kw>
<kw name="Ping to Gateway" library="CommonWindowsFunction">
<var>${Ping_Status}</var>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${ping_gateway}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210625 19:20:11.860" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "ping 192.168.2.254"</msg>
<msg timestamp="20210625 19:20:11.873" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210625 19:20:17.528" level="INFO">Process completed.</msg>
<msg timestamp="20210625 19:20:17.529" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210625 19:20:11.860" endtime="20210625 19:20:17.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210625 19:20:17.531" level="INFO">
Pinging 192.168.2.254 with 32 bytes of data:
Reply from 192.168.2.254: bytes=32 time=6ms TTL=64
Reply from 192.168.2.254: bytes=32 time&lt;1ms TTL=64
Reply from 192.168.2.254: bytes=32 time&lt;1ms TTL=64
Reply from 192.168.2.254: bytes=32 time&lt;1ms TTL=64

Ping statistics for 192.168.2.254:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 6ms, Average = 1ms</msg>
<status status="PASS" starttime="20210625 19:20:17.529" endtime="20210625 19:20:17.531"/>
</kw>
<msg timestamp="20210625 19:20:17.533" level="INFO">${Ping_Status} = 
Pinging 192.168.2.254 with 32 bytes of data:
Reply from 192.168.2.254: bytes=32 time=6ms TTL=64
Reply from 192.168.2.254: bytes=32 time&lt;1ms TTL=64
Reply from 192.168.2.254: bytes=32 time&lt;1ms TTL=64
R...</msg>
<status status="PASS" starttime="20210625 19:20:11.859" endtime="20210625 19:20:17.533"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>"Reply from.*bytes=32 time&lt;1ms TTL=64"</arg>
<arg>"${Ping_Status}"</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210625 19:20:17.534" endtime="20210625 19:20:17.535"/>
</kw>
<status status="PASS" starttime="20210625 19:18:13.832" endtime="20210625 19:20:17.535"/>
</kw>
<status status="PASS" starttime="20210625 19:17:57.642" endtime="20210625 19:20:17.581"/>
</test>
<test id="s1-t3" name="Verify setting 5Ghz ChannelID 44 with Bandwith 20 MHz">
<kw name="Login to DUT" library="SW2CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210625 19:20:17.798" level="INFO">Opening browser 'firefox' to base url 'http://192.168.2.10/login.htm'.</msg>
<msg timestamp="20210625 19:20:17.815" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-67.log</msg>
<status status="PASS" starttime="20210625 19:20:17.797" endtime="20210625 19:20:30.193"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210625 19:20:30.194" endtime="20210625 19:20:30.221"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:20:32.224" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:20:30.221" endtime="20210625 19:20:32.224"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210625 19:20:32.226" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210625 19:20:32.540" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210625 19:20:32.225" endtime="20210625 19:20:32.584"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:20:34.594" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:20:32.584" endtime="20210625 19:20:34.594"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:20:34.595" level="INFO">Clicking element '//div[@id='btn_loginbtn']'.</msg>
<status status="PASS" starttime="20210625 19:20:34.594" endtime="20210625 19:20:34.878"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:20:36.889" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:20:34.879" endtime="20210625 19:20:36.889"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:20:36.890" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210625 19:20:36.889" endtime="20210625 19:20:36.898"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Status}</arg>
<arg>10s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210625 19:20:36.898" endtime="20210625 19:20:36.903"/>
</kw>
<status status="PASS" starttime="20210625 19:20:17.796" endtime="20210625 19:20:36.903"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>44</arg>
<arg>4</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>SW2</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith in SW2</doc>
<kw name="Go to Settings Page" library="SW2SettingPage">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:20:36.906" endtime="20210625 19:20:36.909"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>name:topFrame</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:20:36.910" level="INFO">Selecting frame 'name:topFrame'.</msg>
<status status="PASS" starttime="20210625 19:20:36.910" endtime="20210625 19:20:36.917"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Settings_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:20:36.918" level="INFO">Clicking element '//div[@id='id_nav_1']'.</msg>
<status status="PASS" starttime="20210625 19:20:36.917" endtime="20210625 19:20:37.146"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:20:39.154" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:20:37.146" endtime="20210625 19:20:39.154"/>
</kw>
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:20:39.154" endtime="20210625 19:20:39.158"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:20:39.159" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210625 19:20:39.158" endtime="20210625 19:20:39.166"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Wireless Settings}</arg>
<arg>5s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210625 19:20:39.167" endtime="20210625 19:20:39.174"/>
</kw>
<status status="PASS" starttime="20210625 19:20:36.905" endtime="20210625 19:20:39.174"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="SW2SettingPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:20:39.175" level="INFO">Clicking element '//tbody/tr[@id='wireless_5ghz']/td[@class='tdTextTa_20']/div[1]'.</msg>
<status status="PASS" starttime="20210625 19:20:39.175" endtime="20210625 19:20:39.411"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//tr[@id='wireless_5ghz']//li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:20:39.412" level="INFO">Clicking element '//tr[@id='wireless_5ghz']//li[4]/a'.</msg>
<status status="PASS" starttime="20210625 19:20:39.411" endtime="20210625 19:20:39.636"/>
</kw>
<status status="PASS" starttime="20210625 19:20:39.175" endtime="20210625 19:20:39.637"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="SW2SettingPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:20:39.638" level="INFO">Clicking element '//table[3]/tbody[1]/tr[4]/td[2]/div[1]'.</msg>
<status status="PASS" starttime="20210625 19:20:39.637" endtime="20210625 19:20:39.861"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//table[3]/tbody/tr[4]/td[2]/div/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:20:39.862" level="INFO">Clicking element '//table[3]/tbody/tr[4]/td[2]/div/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210625 19:20:39.861" endtime="20210625 19:20:40.086"/>
</kw>
<status status="PASS" starttime="20210625 19:20:39.637" endtime="20210625 19:20:40.086"/>
</kw>
<kw name="Save the WiFi setting" library="SW2SettingPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:20:40.087" level="INFO">Clicking element '//span[@class='ButtonMiddle tapurple']'.</msg>
<status status="PASS" starttime="20210625 19:20:40.087" endtime="20210625 19:20:40.326"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:20:42.334" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:20:40.326" endtime="20210625 19:20:42.334"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting_Popup}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:20:42.335" level="INFO">Clicking element '//body//div[@id='msgbox']//div//div//div[1]'.</msg>
<status status="PASS" starttime="20210625 19:20:42.334" endtime="20210625 19:20:42.606"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="FAIL" starttime="20210625 19:20:42.606" endtime="20210625 19:20:44.167"/>
</kw>
<status status="FAIL" starttime="20210625 19:20:40.086" endtime="20210625 19:20:44.168"/>
</kw>
<kw name="Logout from DUT" library="SW2CommonFunction">
<status status="NOT RUN" starttime="20210625 19:20:44.168" endtime="20210625 19:20:44.168"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.169" endtime="20210625 19:20:44.169"/>
</kw>
<status status="NOT RUN" starttime="20210625 19:20:44.169" endtime="20210625 19:20:44.169"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>180s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.169" endtime="20210625 19:20:44.169"/>
</kw>
<status status="NOT RUN" starttime="20210625 19:20:44.169" endtime="20210625 19:20:44.169"/>
</branch>
<status status="NOT RUN" starttime="20210625 19:20:44.168" endtime="20210625 19:20:44.169"/>
</if>
<for flavor="IN RANGE">
<var>${VAR}</var>
<value>14</value>
<iter>
<var name="${VAR}">${VAR}</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<arg>${Orginal_ssid}</arg>
<status status="NOT RUN" starttime="20210625 19:20:44.170" endtime="20210625 19:20:44.170"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.171" endtime="20210625 19:20:44.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${5Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.171" endtime="20210625 19:20:44.171"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>list Should contain value</arg>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.171" endtime="20210625 19:20:44.172"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${status}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.172" endtime="20210625 19:20:44.172"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>30s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.172" endtime="20210625 19:20:44.172"/>
</kw>
<status status="NOT RUN" starttime="20210625 19:20:44.170" endtime="20210625 19:20:44.172"/>
</iter>
<status status="NOT RUN" starttime="20210625 19:20:44.170" endtime="20210625 19:20:44.172"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.173" endtime="20210625 19:20:44.173"/>
</kw>
<kw name="Connect to SSID" library="CommonWindowsFunction">
<var>${Connection_status}</var>
<arg>${Orginal_ssid}</arg>
<status status="NOT RUN" starttime="20210625 19:20:44.173" endtime="20210625 19:20:44.173"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>"Connection request was completed successfully" in """${Connection_status}"""</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.173" endtime="20210625 19:20:44.174"/>
</kw>
<kw name="Ping to Gateway" library="CommonWindowsFunction">
<var>${Ping_Status}</var>
<status status="NOT RUN" starttime="20210625 19:20:44.174" endtime="20210625 19:20:44.174"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>"Reply from.*bytes=32 time&lt;1ms TTL=64"</arg>
<arg>"${Ping_Status}"</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20210625 19:20:44.174" endtime="20210625 19:20:44.174"/>
</kw>
<status status="FAIL" starttime="20210625 19:20:36.905" endtime="20210625 19:20:44.175"/>
</kw>
<status status="FAIL" starttime="20210625 19:20:17.779" endtime="20210625 19:20:44.181">Execution terminated by signal</status>
</test>
<test id="s1-t4" name="Verify setting 5Ghz ChannelID 48 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.183" endtime="20210625 19:20:44.184">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t5" name="Verify setting 5Ghz ChannelID 52 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.186" endtime="20210625 19:20:44.187">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t6" name="Verify setting 5Ghz ChannelID 56 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.189" endtime="20210625 19:20:44.190">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t7" name="Verify setting 5Ghz ChannelID 60 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.192" endtime="20210625 19:20:44.194">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t8" name="Verify setting 5Ghz ChannelID 64 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.197" endtime="20210625 19:20:44.198">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t9" name="Verify setting 5Ghz ChannelID 100 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.200" endtime="20210625 19:20:44.201">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t10" name="Verify setting 5Ghz ChannelID 104 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.203" endtime="20210625 19:20:44.204">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t11" name="Verify setting 5Ghz ChannelID 108 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.206" endtime="20210625 19:20:44.210">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t12" name="Verify setting 5Ghz ChannelID 112 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.214" endtime="20210625 19:20:44.215">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t13" name="Verify setting 5Ghz ChannelID 116 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.217" endtime="20210625 19:20:44.219">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t14" name="Verify setting 5Ghz ChannelID 36 with Bandwith 20/40 MHz ">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.221" endtime="20210625 19:20:44.222">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t15" name="Verify setting 5Ghz ChannelID 40 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.231" endtime="20210625 19:20:44.232">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t16" name="Verify setting 5Ghz ChannelID 44 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.234" endtime="20210625 19:20:44.235">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t17" name="Verify setting 5Ghz ChannelID 48 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.245" endtime="20210625 19:20:44.247">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t18" name="Verify setting 5Ghz ChannelID 52 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.249" endtime="20210625 19:20:44.250">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t19" name="Verify setting 5Ghz ChannelID 56 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.252" endtime="20210625 19:20:44.255">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t20" name="Verify setting 5Ghz ChannelID 60 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.263" endtime="20210625 19:20:44.264">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t21" name="Verify setting 5Ghz ChannelID 64 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.266" endtime="20210625 19:20:44.267">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t22" name="Verify setting 5Ghz ChannelID 100 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.271" endtime="20210625 19:20:44.278">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t23" name="Verify setting 5Ghz ChannelID 104 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.295" endtime="20210625 19:20:44.296">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t24" name="Verify setting 5Ghz ChannelID 108 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.298" endtime="20210625 19:20:44.302">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t25" name="Verify setting 5Ghz ChannelID 112 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.318" endtime="20210625 19:20:44.319">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t26" name="Verify setting 5Ghz ChannelID 116 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.321" endtime="20210625 19:20:44.324">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t27" name="Verify setting 5Ghz ChannelID 36 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.327" endtime="20210625 19:20:44.329">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t28" name="Verify setting 5Ghz ChannelID 40 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.335" endtime="20210625 19:20:44.335">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t29" name="Verify setting 5Ghz ChannelID 44 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.341" endtime="20210625 19:20:44.347">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t30" name="Verify setting 5Ghz ChannelID 48 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.349" endtime="20210625 19:20:44.349">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t31" name="Verify setting 5Ghz ChannelID 52 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.351" endtime="20210625 19:20:44.352">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t32" name="Verify setting 5Ghz ChannelID 56 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.358" endtime="20210625 19:20:44.362">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t33" name="Verify setting 5Ghz ChannelID 60 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.364" endtime="20210625 19:20:44.365">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t34" name="Verify setting 5Ghz ChannelID 64 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.367" endtime="20210625 19:20:44.368">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t35" name="Verify setting 5Ghz ChannelID 100 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.370" endtime="20210625 19:20:44.377">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t36" name="Verify setting 5Ghz ChannelID 104 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.380" endtime="20210625 19:20:44.381">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t37" name="Verify setting 5Ghz ChannelID 108 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.383" endtime="20210625 19:20:44.384">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t38" name="Verify setting 5Ghz ChannelID 112 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.387" endtime="20210625 19:20:44.393">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t39" name="Verify setting 5Ghz ChannelID 116 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.396" endtime="20210625 19:20:44.397">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t40" name="Verify setting 5Ghz ChannelID 120 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.399" endtime="20210625 19:20:44.400">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t41" name="Verify setting 5Ghz ChannelID 124 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.402" endtime="20210625 19:20:44.403">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t42" name="Verify setting 5Ghz ChannelID 128 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.411" endtime="20210625 19:20:44.411">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t43" name="Verify setting 5Ghz ChannelID 132 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.413" endtime="20210625 19:20:44.414">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t44" name="Verify setting 5Ghz ChannelID 136 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.416" endtime="20210625 19:20:44.417">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t45" name="Verify setting 5Ghz ChannelID 140 with Bandwith 20 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.421" endtime="20210625 19:20:44.427">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t46" name="Verify setting 5Ghz ChannelID 120 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.429" endtime="20210625 19:20:44.430">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t47" name="Verify setting 5Ghz ChannelID 124 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.432" endtime="20210625 19:20:44.433">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t48" name="Verify setting 5Ghz ChannelID 128 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.436" endtime="20210625 19:20:44.440">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t49" name="Verify setting 5Ghz ChannelID 132 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.444" endtime="20210625 19:20:44.444">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t50" name="Verify setting 5Ghz ChannelID 136 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.446" endtime="20210625 19:20:44.447">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t51" name="Verify setting 5Ghz ChannelID 140 with Bandwith 20/40 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.450" endtime="20210625 19:20:44.452">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t52" name="Verify setting 5Ghz ChannelID 120 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.460" endtime="20210625 19:20:44.462">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t53" name="Verify setting 5Ghz ChannelID 124 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.464" endtime="20210625 19:20:44.465">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t54" name="Verify setting 5Ghz ChannelID 128 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.467" endtime="20210625 19:20:44.468">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t55" name="Verify setting 5Ghz ChannelID 132 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.473" endtime="20210625 19:20:44.474">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t56" name="Verify setting 5Ghz ChannelID 136 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.476" endtime="20210625 19:20:44.477">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t57" name="Verify setting 5Ghz ChannelID 140 with Bandwith 20/40/80 MHz">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20210625 19:20:44.480" endtime="20210625 19:20:44.483">Test execution stopped due to a fatal error.</status>
</test>
<kw name="Set 5Ghz Channel ID to Auto" library="SW2SettingPage" type="TEARDOWN">
<kw name="Login to DUT" library="SW2CommonFunction">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210625 19:20:44.487" level="INFO">Opening browser 'firefox' to base url 'http://192.168.2.10/login.htm'.</msg>
<msg timestamp="20210625 19:20:44.503" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-68.log</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210625 19:21:21.998" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210625 19:21:21.853" endtime="20210625 19:21:21.998"/>
</kw>
<msg timestamp="20210625 19:21:22.009" level="FAIL">WebDriverException: Message: Reached error page: about:neterror?e=netTimeout&amp;u=http%3A//192.168.2.10/login.htm&amp;c=UTF-8&amp;d=The%20server%20at%20192.168.2.10%20is%20taking%20too%20long%20to%20respond.
</msg>
<status status="FAIL" starttime="20210625 19:20:44.487" endtime="20210625 19:21:22.009"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210625 19:21:22.010" endtime="20210625 19:21:22.014"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:21:24.023" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:21:22.015" endtime="20210625 19:21:24.023"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210625 19:21:24.025" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210625 19:21:24.096" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210625 19:21:24.032" endtime="20210625 19:21:24.097"/>
</kw>
<msg timestamp="20210625 19:21:24.261" level="FAIL">Element with locator '//input[@name='ui_pws']' not found.</msg>
<status status="FAIL" starttime="20210625 19:21:24.024" endtime="20210625 19:21:24.261"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:21:26.273" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:21:24.261" endtime="20210625 19:21:26.273"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:21:26.274" level="INFO">Clicking element '//div[@id='btn_loginbtn']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210625 19:21:26.320" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210625 19:21:26.279" endtime="20210625 19:21:26.321"/>
</kw>
<msg timestamp="20210625 19:21:26.322" level="FAIL">Element with locator '//div[@id='btn_loginbtn']' not found.</msg>
<status status="FAIL" starttime="20210625 19:21:26.274" endtime="20210625 19:21:26.322"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:21:28.328" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:21:26.323" endtime="20210625 19:21:28.328"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:21:28.329" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210625 19:21:28.387" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210625 19:21:28.334" endtime="20210625 19:21:28.387"/>
</kw>
<msg timestamp="20210625 19:21:28.405" level="FAIL">Element with locator 'id:frm_main2' not found.</msg>
<status status="FAIL" starttime="20210625 19:21:28.329" endtime="20210625 19:21:28.405"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Status}</arg>
<arg>10s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210625 19:21:38.563" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210625 19:21:38.476" endtime="20210625 19:21:38.563"/>
</kw>
<msg timestamp="20210625 19:21:38.566" level="FAIL">Text 'Status' did not appear in 10 seconds.</msg>
<status status="FAIL" starttime="20210625 19:21:28.405" endtime="20210625 19:21:38.566"/>
</kw>
<status status="FAIL" starttime="20210625 19:20:44.487" endtime="20210625 19:21:38.567"/>
</kw>
<kw name="Go to WLAN Page">
<msg timestamp="20210625 19:21:38.577" level="FAIL">No keyword with name 'Go to WLAN Page' found.</msg>
<status status="FAIL" starttime="20210625 19:21:38.577" endtime="20210625 19:21:38.578"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:21:38.578" level="INFO">Clicking element '//tbody/tr[@id='wireless_5ghz']/td[@class='tdTextTa_20']/div[1]'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210625 19:21:38.714" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210625 19:21:38.625" endtime="20210625 19:21:38.714"/>
</kw>
<msg timestamp="20210625 19:21:38.716" level="FAIL">Element with locator '//tbody/tr[@id='wireless_5ghz']/td[@class='tdTextTa_20']/div[1]' not found.</msg>
<status status="FAIL" starttime="20210625 19:21:38.578" endtime="20210625 19:21:38.716"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//tr[@id='wireless_5ghz']//li[1]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:21:38.717" level="INFO">Clicking element '//tr[@id='wireless_5ghz']//li[1]/a'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210625 19:21:38.806" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-8.png"&gt;&lt;img src="selenium-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210625 19:21:38.723" endtime="20210625 19:21:38.806"/>
</kw>
<msg timestamp="20210625 19:21:38.808" level="FAIL">Element with locator '//tr[@id='wireless_5ghz']//li[1]/a' not found.</msg>
<status status="FAIL" starttime="20210625 19:21:38.717" endtime="20210625 19:21:38.808"/>
</kw>
<kw name="Save the WiFi setting" library="SW2SettingPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:21:38.809" level="INFO">Clicking element '//span[@class='ButtonMiddle tapurple']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210625 19:21:38.897" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-9.png"&gt;&lt;img src="selenium-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210625 19:21:38.815" endtime="20210625 19:21:38.898"/>
</kw>
<msg timestamp="20210625 19:21:38.899" level="FAIL">Element with locator '//span[@class='ButtonMiddle tapurple']' not found.</msg>
<status status="FAIL" starttime="20210625 19:21:38.809" endtime="20210625 19:21:38.899"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:21:40.908" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:21:38.899" endtime="20210625 19:21:40.908"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting_Popup}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:21:40.909" level="INFO">Clicking element '//body//div[@id='msgbox']//div//div//div[1]'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210625 19:21:41.002" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-10.png"&gt;&lt;img src="selenium-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210625 19:21:40.914" endtime="20210625 19:21:41.003"/>
</kw>
<msg timestamp="20210625 19:21:41.004" level="FAIL">Element with locator '//body//div[@id='msgbox']//div//div//div[1]' not found.</msg>
<status status="FAIL" starttime="20210625 19:21:40.908" endtime="20210625 19:21:41.004"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:21:56.015" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210625 19:21:41.005" endtime="20210625 19:21:56.015"/>
</kw>
<status status="FAIL" starttime="20210625 19:21:38.808" endtime="20210625 19:21:56.015"/>
</kw>
<kw name="Logout from DUT" library="SW2CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210625 19:21:56.016" endtime="20210625 19:21:56.020"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>name:topFrame</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210625 19:21:56.021" level="INFO">Selecting frame 'name:topFrame'.</msg>
<status status="PASS" starttime="20210625 19:21:56.021" endtime="20210625 19:21:56.032"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210625 19:21:56.033" level="INFO">Clicking element '//*[@id="u_login"]'.</msg>
<status status="PASS" starttime="20210625 19:21:56.032" endtime="20210625 19:21:56.256"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210625 19:21:58.265" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210625 19:21:56.257" endtime="20210625 19:21:58.265"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<msg timestamp="20210625 19:22:00.310" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x000002D356B9C190&gt;: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /session/83ed65a1-7bc5-49f1-85ed-0f52e0ca41bc</msg>
<msg timestamp="20210625 19:22:02.345" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x000002D356BBBFD0&gt;: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /session/83ed65a1-7bc5-49f1-85ed-0f52e0ca41bc</msg>
<msg timestamp="20210625 19:22:04.385" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x000002D356BC73A0&gt;: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /session/83ed65a1-7bc5-49f1-85ed-0f52e0ca41bc</msg>
<status status="PASS" starttime="20210625 19:21:58.265" endtime="20210625 19:22:07.649"/>
</kw>
<status status="PASS" starttime="20210625 19:21:56.015" endtime="20210625 19:22:07.649"/>
</kw>
<status status="FAIL" starttime="20210625 19:20:44.486" endtime="20210625 19:22:07.650">Several failures occurred:

1) WebDriverException: Message: Reached error page: about:neterror?e=netTimeout&amp;u=http%3A//192.168.2.10/login.htm&amp;c=UTF-8&amp;d=The%20server%20at%20192.168.2.10%20is%20taking%20too%20long%20to%20respond.


2) Element with locator '//input[@name='ui_pws']' not found.

3) Element with locator '//div[@id='btn_loginbtn']' not found.

4) Element with locator 'id:frm_main2' not found.

5) Text 'Status' did not appear in 10 seconds.

6) No keyword with name 'Go to WLAN Page' found.

7) Element with locator '//tbody/tr[@id='wireless_5ghz']/td[@class='tdTextTa_20']/div[1]' not found.

8) Element with locator '//tr[@id='wireless_5ghz']//li[1]/a' not found.

9) Element with locator '//span[@class='ButtonMiddle tapurple']' not found.

10) Element with locator '//body//div[@id='msgbox']//div//div//div[1]' not found.</status>
</kw>
<status status="FAIL" starttime="20210625 19:15:06.649" endtime="20210625 19:22:07.650">Suite teardown failed:
Several failures occurred:

1) WebDriverException: Message: Reached error page: about:neterror?e=netTimeout&amp;u=http%3A//192.168.2.10/login.htm&amp;c=UTF-8&amp;d=The%20server%20at%20192.168.2.10%20is%20taking%20too%20long%20to%20respond.


2) Element with locator '//input[@name='ui_pws']' not found.

3) Element with locator '//div[@id='btn_loginbtn']' not found.

4) Element with locator 'id:frm_main2' not found.

5) Text 'Status' did not appear in 10 seconds.

6) No keyword with name 'Go to WLAN Page' found.

7) Element with locator '//tbody/tr[@id='wireless_5ghz']/td[@class='tdTextTa_20']/div[1]' not found.

8) Element with locator '//tr[@id='wireless_5ghz']//li[1]/a' not found.

9) Element with locator '//span[@class='ButtonMiddle tapurple']' not found.

10) Element with locator '//body//div[@id='msgbox']//div//div//div[1]' not found.</status>
</suite>
<statistics>
<total>
<stat pass="0" fail="57" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="3" skip="0" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="0" fail="54" skip="0">robot:exit</stat>
</tag>
<suite>
<stat pass="0" fail="57" skip="0" id="s1" name="SW2 WLAN 5GhzChannelID">SW2 WLAN 5GhzChannelID</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210625 19:22:00.310" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x000002D356B9C190&gt;: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /session/83ed65a1-7bc5-49f1-85ed-0f52e0ca41bc</msg>
<msg timestamp="20210625 19:22:02.345" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x000002D356BBBFD0&gt;: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /session/83ed65a1-7bc5-49f1-85ed-0f52e0ca41bc</msg>
<msg timestamp="20210625 19:22:04.385" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x000002D356BC73A0&gt;: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it')': /session/83ed65a1-7bc5-49f1-85ed-0f52e0ca41bc</msg>
</errors>
</robot>
