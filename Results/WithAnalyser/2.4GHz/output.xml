<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.9.4 on win32)" generated="20210621 12:03:44.133" rpa="false" schemaversion="2">
<suite id="s1" name="WLAN 2.4GHzChannelID" source="D:\Personal\Automation\KPN\WiFi\Tests\WLAN_2.4GHzChannelID.robot">
<test id="s1-t1" name="Verify setting 2.4Ghz ChannelID 1 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:03:44.535" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:03:44.568" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-261.log</msg>
<status status="PASS" starttime="20210621 12:03:44.533" endtime="20210621 12:03:56.433"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:03:56.433" endtime="20210621 12:03:56.448"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:03:58.461" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:03:56.448" endtime="20210621 12:03:58.461"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:03:58.462" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:03:58.774" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:03:58.461" endtime="20210621 12:03:58.794"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:04:00.808" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:03:58.794" endtime="20210621 12:04:00.808"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:04:00.809" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:04:00.808" endtime="20210621 12:04:02.783"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:04:07.789" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:04:02.784" endtime="20210621 12:04:07.789"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:04:07.789" endtime="20210621 12:04:07.797"/>
</kw>
<status status="PASS" starttime="20210621 12:03:44.532" endtime="20210621 12:04:07.797"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>1</arg>
<arg>2</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:04:07.799" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:04:07.799" endtime="20210621 12:04:07.845"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:04:12.859" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:04:07.845" endtime="20210621 12:04:12.859"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:04:12.859" endtime="20210621 12:04:12.866"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:04:12.866" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:04:12.866" endtime="20210621 12:04:12.874"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:04:12.881" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:04:12.874" endtime="20210621 12:04:12.881"/>
</kw>
<status status="PASS" starttime="20210621 12:04:07.799" endtime="20210621 12:04:12.881"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:04:12.882" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:04:12.882" endtime="20210621 12:04:13.105"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:04:13.106" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:04:13.105" endtime="20210621 12:04:13.332"/>
</kw>
<status status="PASS" starttime="20210621 12:04:12.881" endtime="20210621 12:04:13.332"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:04:13.333" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:04:13.333" endtime="20210621 12:04:13.559"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:04:13.560" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:04:13.560" endtime="20210621 12:04:13.810"/>
</kw>
<status status="PASS" starttime="20210621 12:04:13.333" endtime="20210621 12:04:13.811"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:04:13.812" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:04:13.812" endtime="20210621 12:04:14.086"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:04:14.191" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%201%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%201%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:04:14.087" endtime="20210621 12:04:14.192"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:04:29.204" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:04:14.192" endtime="20210621 12:04:29.204"/>
</kw>
<status status="PASS" starttime="20210621 12:04:13.811" endtime="20210621 12:04:29.205"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:04:29.206" endtime="20210621 12:04:29.210"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:04:29.211" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:04:29.210" endtime="20210621 12:04:29.576"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:04:31.580" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:04:29.576" endtime="20210621 12:04:31.580"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:04:31.580" endtime="20210621 12:04:32.761"/>
</kw>
<status status="PASS" starttime="20210621 12:04:29.205" endtime="20210621 12:04:32.761"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:04:32.763" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:04:32.762" endtime="20210621 12:04:32.764"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:04:32.904" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:25:39 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:04:32.764" endtime="20210621 12:04:32.904"/>
</kw>
<status status="PASS" starttime="20210621 12:04:32.762" endtime="20210621 12:04:32.905"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:04:32.908" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:04:33.010" level="INFO">ARC_WLAN_24G_Channel=1
#</msg>
<msg timestamp="20210621 12:04:33.010" level="INFO">${out} = ARC_WLAN_24G_Channel=1
#</msg>
<status status="PASS" starttime="20210621 12:04:32.905" endtime="20210621 12:04:33.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:04:33.011" level="INFO">ARC_WLAN_24G_Channel=1
#</msg>
<status status="PASS" starttime="20210621 12:04:33.011" endtime="20210621 12:04:33.011"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:04:33.012" level="INFO">${result} = ['1']</msg>
<status status="PASS" starttime="20210621 12:04:33.011" endtime="20210621 12:04:33.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:04:33.013" level="INFO">2.4Ghz Channel ID from console is 1</msg>
<status status="PASS" starttime="20210621 12:04:33.012" endtime="20210621 12:04:33.013"/>
</kw>
<msg timestamp="20210621 12:04:33.014" level="INFO">${2.4Ghz_ChannelID_Console} = 1</msg>
<status status="PASS" starttime="20210621 12:04:32.905" endtime="20210621 12:04:33.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:04:33.014" level="INFO">Channel ID from Console is 1</msg>
<status status="PASS" starttime="20210621 12:04:33.014" endtime="20210621 12:04:33.014"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:04:33.015" endtime="20210621 12:04:33.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:04:33.015" endtime="20210621 12:04:33.015"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:06:03.029" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:04:33.015" endtime="20210621 12:06:03.029"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:06:03.030" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:06:03.034" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:06:03.611" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:06:03.030" endtime="20210621 12:06:03.611"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:06:03.612" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:06:03.616" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:06:04.151" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:06:04.152" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:06:03.612" endtime="20210621 12:06:04.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:06:04.153" level="INFO">
  
&gt; SSID 9 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 1 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210621 12:06:04.152" endtime="20210621 12:06:04.153"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:06:04.155" level="INFO">${Analyser_ChannelID_5Ghz} = ['40', '1']</msg>
<status status="PASS" starttime="20210621 12:06:04.154" endtime="20210621 12:06:04.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:06:04.157" level="INFO">Analyser Channel IDs are 40 and 1</msg>
<status status="PASS" starttime="20210621 12:06:04.155" endtime="20210621 12:06:04.157"/>
</kw>
<msg timestamp="20210621 12:06:04.159" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['40', '1']</msg>
<status status="PASS" starttime="20210621 12:06:03.030" endtime="20210621 12:06:04.159"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:06:04.160" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:06:04.160" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:06:04.159" endtime="20210621 12:06:04.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:06:04.161" level="INFO">ChannelIDs are ['40', '1'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:06:04.160" endtime="20210621 12:06:04.161"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:06:04.161" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:06:04.161" endtime="20210621 12:06:04.161"/>
</kw>
<status status="PASS" starttime="20210621 12:06:03.030" endtime="20210621 12:06:04.161"/>
</iter>
<status status="PASS" starttime="20210621 12:06:03.029" endtime="20210621 12:06:04.161"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:06:04.162" endtime="20210621 12:06:04.162"/>
</kw>
<status status="PASS" starttime="20210621 12:04:07.798" endtime="20210621 12:06:04.162"/>
</kw>
<status status="PASS" starttime="20210621 12:03:44.532" endtime="20210621 12:06:04.163"/>
</test>
<test id="s1-t2" name="Verify setting 2.4Ghz ChannelID 2 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:06:04.166" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:06:04.197" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-262.log</msg>
<status status="PASS" starttime="20210621 12:06:04.166" endtime="20210621 12:06:14.164"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:06:14.164" endtime="20210621 12:06:14.179"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:06:16.186" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:06:14.180" endtime="20210621 12:06:16.186"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:06:16.187" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:06:16.481" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:06:16.186" endtime="20210621 12:06:16.497"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:06:18.507" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:06:16.497" endtime="20210621 12:06:18.507"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:06:18.508" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:06:18.507" endtime="20210621 12:06:20.340"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:06:25.341" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:06:20.340" endtime="20210621 12:06:25.341"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:06:25.342" endtime="20210621 12:06:25.349"/>
</kw>
<status status="PASS" starttime="20210621 12:06:04.165" endtime="20210621 12:06:25.349"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>2</arg>
<arg>3</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:06:25.351" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:06:25.351" endtime="20210621 12:06:25.393"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:06:30.403" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:06:25.394" endtime="20210621 12:06:30.403"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:06:30.403" endtime="20210621 12:06:30.410"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:06:30.411" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:06:30.410" endtime="20210621 12:06:30.418"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:06:30.424" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:06:30.418" endtime="20210621 12:06:30.425"/>
</kw>
<status status="PASS" starttime="20210621 12:06:25.350" endtime="20210621 12:06:30.425"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:06:30.426" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:06:30.425" endtime="20210621 12:06:30.647"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:06:30.648" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210621 12:06:30.648" endtime="20210621 12:06:30.862"/>
</kw>
<status status="PASS" starttime="20210621 12:06:30.425" endtime="20210621 12:06:30.862"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:06:30.864" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:06:30.863" endtime="20210621 12:06:31.090"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:06:31.092" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:06:31.090" endtime="20210621 12:06:31.317"/>
</kw>
<status status="PASS" starttime="20210621 12:06:30.863" endtime="20210621 12:06:31.318"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:06:31.318" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:06:31.318" endtime="20210621 12:06:31.560"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:06:31.625" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%202%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%202%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:06:31.561" endtime="20210621 12:06:31.626"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:06:46.629" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:06:31.626" endtime="20210621 12:06:46.629"/>
</kw>
<status status="PASS" starttime="20210621 12:06:31.318" endtime="20210621 12:06:46.631"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:06:46.632" endtime="20210621 12:06:46.637"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:06:46.638" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:06:46.637" endtime="20210621 12:06:46.883"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:06:48.884" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:06:46.883" endtime="20210621 12:06:48.884"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:06:48.884" endtime="20210621 12:06:50.349"/>
</kw>
<status status="PASS" starttime="20210621 12:06:46.631" endtime="20210621 12:06:50.349"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:06:50.350" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:06:50.350" endtime="20210621 12:06:50.351"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:06:50.497" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:27:57 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:06:50.352" endtime="20210621 12:06:50.497"/>
</kw>
<status status="PASS" starttime="20210621 12:06:50.350" endtime="20210621 12:06:50.497"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:06:50.500" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:06:50.602" level="INFO">ARC_WLAN_24G_Channel=2
#</msg>
<msg timestamp="20210621 12:06:50.602" level="INFO">${out} = ARC_WLAN_24G_Channel=2
#</msg>
<status status="PASS" starttime="20210621 12:06:50.498" endtime="20210621 12:06:50.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:06:50.603" level="INFO">ARC_WLAN_24G_Channel=2
#</msg>
<status status="PASS" starttime="20210621 12:06:50.602" endtime="20210621 12:06:50.603"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:06:50.603" level="INFO">${result} = ['2']</msg>
<status status="PASS" starttime="20210621 12:06:50.603" endtime="20210621 12:06:50.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:06:50.605" level="INFO">2.4Ghz Channel ID from console is 2</msg>
<status status="PASS" starttime="20210621 12:06:50.603" endtime="20210621 12:06:50.605"/>
</kw>
<msg timestamp="20210621 12:06:50.606" level="INFO">${2.4Ghz_ChannelID_Console} = 2</msg>
<status status="PASS" starttime="20210621 12:06:50.497" endtime="20210621 12:06:50.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:06:50.606" level="INFO">Channel ID from Console is 2</msg>
<status status="PASS" starttime="20210621 12:06:50.606" endtime="20210621 12:06:50.607"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:06:50.607" endtime="20210621 12:06:50.607"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:06:50.607" endtime="20210621 12:06:50.607"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:08:20.610" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:06:50.608" endtime="20210621 12:08:20.610"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:08:20.613" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:08:20.618" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:08:21.421" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:08:20.612" endtime="20210621 12:08:21.422"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:08:21.423" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:08:21.428" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:08:22.020" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:08:22.020" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:08:21.422" endtime="20210621 12:08:22.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:08:22.022" level="INFO">
  
&gt; SSID 2 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 2 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210621 12:08:22.021" endtime="20210621 12:08:22.022"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:08:22.023" level="INFO">${Analyser_ChannelID_5Ghz} = ['40', '2']</msg>
<status status="PASS" starttime="20210621 12:08:22.022" endtime="20210621 12:08:22.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:08:22.026" level="INFO">Analyser Channel IDs are 40 and 2</msg>
<status status="PASS" starttime="20210621 12:08:22.024" endtime="20210621 12:08:22.026"/>
</kw>
<msg timestamp="20210621 12:08:22.028" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['40', '2']</msg>
<status status="PASS" starttime="20210621 12:08:20.611" endtime="20210621 12:08:22.028"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:08:22.028" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:08:22.029" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:08:22.028" endtime="20210621 12:08:22.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:08:22.030" level="INFO">ChannelIDs are ['40', '2'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:08:22.029" endtime="20210621 12:08:22.030"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:08:22.030" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:08:22.030" endtime="20210621 12:08:22.030"/>
</kw>
<status status="PASS" starttime="20210621 12:08:20.611" endtime="20210621 12:08:22.030"/>
</iter>
<status status="PASS" starttime="20210621 12:08:20.610" endtime="20210621 12:08:22.030"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:08:22.031" endtime="20210621 12:08:22.031"/>
</kw>
<status status="PASS" starttime="20210621 12:06:25.350" endtime="20210621 12:08:22.031"/>
</kw>
<status status="PASS" starttime="20210621 12:06:04.164" endtime="20210621 12:08:22.032"/>
</test>
<test id="s1-t3" name="Verify setting 2.4Ghz ChannelID 3 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:08:22.036" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:08:22.071" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-263.log</msg>
<status status="PASS" starttime="20210621 12:08:22.036" endtime="20210621 12:08:32.865"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:08:32.865" endtime="20210621 12:08:32.882"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:08:34.890" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:08:32.883" endtime="20210621 12:08:34.890"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:08:34.891" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:08:35.186" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:08:34.890" endtime="20210621 12:08:35.202"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:08:37.204" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:08:35.203" endtime="20210621 12:08:37.204"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:08:37.205" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:08:37.204" endtime="20210621 12:08:38.987"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:08:44.000" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:08:38.987" endtime="20210621 12:08:44.000"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:08:44.000" endtime="20210621 12:08:44.007"/>
</kw>
<status status="PASS" starttime="20210621 12:08:22.035" endtime="20210621 12:08:44.007"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>3</arg>
<arg>4</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:08:44.009" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:08:44.009" endtime="20210621 12:08:44.053"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:08:49.060" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:08:44.053" endtime="20210621 12:08:49.060"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:08:49.061" endtime="20210621 12:08:49.068"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:08:49.069" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:08:49.069" endtime="20210621 12:08:49.082"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:08:49.088" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:08:49.082" endtime="20210621 12:08:49.088"/>
</kw>
<status status="PASS" starttime="20210621 12:08:44.009" endtime="20210621 12:08:49.088"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:08:49.089" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:08:49.089" endtime="20210621 12:08:49.318"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:08:49.319" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[4]/a'.</msg>
<status status="PASS" starttime="20210621 12:08:49.319" endtime="20210621 12:08:49.545"/>
</kw>
<status status="PASS" starttime="20210621 12:08:49.088" endtime="20210621 12:08:49.546"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:08:49.547" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:08:49.546" endtime="20210621 12:08:49.772"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:08:49.772" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:08:49.772" endtime="20210621 12:08:49.999"/>
</kw>
<status status="PASS" starttime="20210621 12:08:49.546" endtime="20210621 12:08:50.000"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:08:50.000" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:08:50.000" endtime="20210621 12:08:50.241"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:08:50.315" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%203%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%203%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:08:50.241" endtime="20210621 12:08:50.315"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:09:05.326" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:08:50.316" endtime="20210621 12:09:05.326"/>
</kw>
<status status="PASS" starttime="20210621 12:08:50.000" endtime="20210621 12:09:05.327"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:09:05.327" endtime="20210621 12:09:05.333"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:09:05.334" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:09:05.333" endtime="20210621 12:09:05.728"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:09:07.736" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:09:05.728" endtime="20210621 12:09:07.736"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:09:07.736" endtime="20210621 12:09:08.965"/>
</kw>
<status status="PASS" starttime="20210621 12:09:05.327" endtime="20210621 12:09:08.966"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:09:08.966" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:09:08.966" endtime="20210621 12:09:08.967"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:09:09.109" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:30:16 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:09:08.967" endtime="20210621 12:09:09.109"/>
</kw>
<status status="PASS" starttime="20210621 12:09:08.966" endtime="20210621 12:09:09.110"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:09:09.112" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:09:09.215" level="INFO">ARC_WLAN_24G_Channel=3
#</msg>
<msg timestamp="20210621 12:09:09.215" level="INFO">${out} = ARC_WLAN_24G_Channel=3
#</msg>
<status status="PASS" starttime="20210621 12:09:09.110" endtime="20210621 12:09:09.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:09:09.216" level="INFO">ARC_WLAN_24G_Channel=3
#</msg>
<status status="PASS" starttime="20210621 12:09:09.215" endtime="20210621 12:09:09.216"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:09:09.216" level="INFO">${result} = ['3']</msg>
<status status="PASS" starttime="20210621 12:09:09.216" endtime="20210621 12:09:09.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:09:09.217" level="INFO">2.4Ghz Channel ID from console is 3</msg>
<status status="PASS" starttime="20210621 12:09:09.216" endtime="20210621 12:09:09.217"/>
</kw>
<msg timestamp="20210621 12:09:09.219" level="INFO">${2.4Ghz_ChannelID_Console} = 3</msg>
<status status="PASS" starttime="20210621 12:09:09.110" endtime="20210621 12:09:09.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:09:09.219" level="INFO">Channel ID from Console is 3</msg>
<status status="PASS" starttime="20210621 12:09:09.219" endtime="20210621 12:09:09.219"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:09:09.219" endtime="20210621 12:09:09.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:09:09.220" endtime="20210621 12:09:09.220"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:10:39.229" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:09:09.220" endtime="20210621 12:10:39.231"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:10:39.233" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:10:39.238" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:10:40.169" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:10:39.233" endtime="20210621 12:10:40.170"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:10:40.172" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:10:40.180" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:10:40.830" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:10:40.830" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:10:40.170" endtime="20210621 12:10:40.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:10:40.831" level="INFO">
  
&gt; SSID 10 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 3 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:10:40.830" endtime="20210621 12:10:40.832"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:10:40.833" level="INFO">${Analyser_ChannelID_5Ghz} = ['3', '40']</msg>
<status status="PASS" starttime="20210621 12:10:40.832" endtime="20210621 12:10:40.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:10:40.836" level="INFO">Analyser Channel IDs are 3 and 40</msg>
<status status="PASS" starttime="20210621 12:10:40.833" endtime="20210621 12:10:40.836"/>
</kw>
<msg timestamp="20210621 12:10:40.840" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['3', '40']</msg>
<status status="PASS" starttime="20210621 12:10:39.232" endtime="20210621 12:10:40.840"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:10:40.841" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:10:40.842" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:10:40.840" endtime="20210621 12:10:40.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:10:40.842" level="INFO">ChannelIDs are ['3', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:10:40.842" endtime="20210621 12:10:40.842"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:10:40.843" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:10:40.842" endtime="20210621 12:10:40.843"/>
</kw>
<status status="PASS" starttime="20210621 12:10:39.232" endtime="20210621 12:10:40.843"/>
</iter>
<status status="PASS" starttime="20210621 12:10:39.231" endtime="20210621 12:10:40.843"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:10:40.843" endtime="20210621 12:10:40.844"/>
</kw>
<status status="PASS" starttime="20210621 12:08:44.008" endtime="20210621 12:10:40.844"/>
</kw>
<status status="PASS" starttime="20210621 12:08:22.033" endtime="20210621 12:10:40.844"/>
</test>
<test id="s1-t4" name="Verify setting 2.4Ghz ChannelID 4 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:10:40.848" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:10:40.894" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-264.log</msg>
<status status="PASS" starttime="20210621 12:10:40.847" endtime="20210621 12:10:51.765"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:10:51.766" endtime="20210621 12:10:51.804"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:10:53.816" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:10:51.805" endtime="20210621 12:10:53.816"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:10:53.817" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:10:54.133" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:10:53.816" endtime="20210621 12:10:54.170"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:10:56.175" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:10:54.171" endtime="20210621 12:10:56.176"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:10:56.178" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:10:56.177" endtime="20210621 12:10:58.382"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:11:03.393" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:10:58.382" endtime="20210621 12:11:03.393"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:11:03.393" endtime="20210621 12:11:03.403"/>
</kw>
<status status="PASS" starttime="20210621 12:10:40.847" endtime="20210621 12:11:03.404"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>4</arg>
<arg>5</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:11:03.406" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:11:03.405" endtime="20210621 12:11:03.446"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:11:08.447" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:11:03.446" endtime="20210621 12:11:08.447"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:11:08.448" endtime="20210621 12:11:08.454"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:11:08.454" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:11:08.454" endtime="20210621 12:11:08.462"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:11:08.468" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:11:08.462" endtime="20210621 12:11:08.469"/>
</kw>
<status status="PASS" starttime="20210621 12:11:03.405" endtime="20210621 12:11:08.469"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:11:08.470" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:11:08.470" endtime="20210621 12:11:08.692"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:11:08.692" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[5]/a'.</msg>
<status status="PASS" starttime="20210621 12:11:08.692" endtime="20210621 12:11:08.917"/>
</kw>
<status status="PASS" starttime="20210621 12:11:08.469" endtime="20210621 12:11:08.917"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:11:08.919" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:11:08.919" endtime="20210621 12:11:09.146"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:11:09.147" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:11:09.146" endtime="20210621 12:11:09.376"/>
</kw>
<status status="PASS" starttime="20210621 12:11:08.918" endtime="20210621 12:11:09.376"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:11:09.377" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:11:09.377" endtime="20210621 12:11:09.646"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:11:09.732" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%204%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%204%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:11:09.646" endtime="20210621 12:11:09.732"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:11:24.739" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:11:09.732" endtime="20210621 12:11:24.739"/>
</kw>
<status status="PASS" starttime="20210621 12:11:09.376" endtime="20210621 12:11:24.740"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:11:24.741" endtime="20210621 12:11:24.747"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:11:24.748" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:11:24.748" endtime="20210621 12:11:25.025"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:11:27.027" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:11:25.025" endtime="20210621 12:11:27.027"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:11:27.027" endtime="20210621 12:11:29.210"/>
</kw>
<status status="PASS" starttime="20210621 12:11:24.740" endtime="20210621 12:11:29.212"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:11:29.216" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:11:29.215" endtime="20210621 12:11:29.237"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:11:29.427" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:32:36 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:11:29.237" endtime="20210621 12:11:29.427"/>
</kw>
<status status="PASS" starttime="20210621 12:11:29.213" endtime="20210621 12:11:29.428"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:11:29.433" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:11:29.485" level="INFO">ARC_WLAN_24G_Channel=4
#</msg>
<msg timestamp="20210621 12:11:29.486" level="INFO">${out} = ARC_WLAN_24G_Channel=4
#</msg>
<status status="PASS" starttime="20210621 12:11:29.429" endtime="20210621 12:11:29.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:11:29.487" level="INFO">ARC_WLAN_24G_Channel=4
#</msg>
<status status="PASS" starttime="20210621 12:11:29.486" endtime="20210621 12:11:29.487"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:11:29.488" level="INFO">${result} = ['4']</msg>
<status status="PASS" starttime="20210621 12:11:29.487" endtime="20210621 12:11:29.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:11:29.490" level="INFO">2.4Ghz Channel ID from console is 4</msg>
<status status="PASS" starttime="20210621 12:11:29.488" endtime="20210621 12:11:29.491"/>
</kw>
<msg timestamp="20210621 12:11:29.494" level="INFO">${2.4Ghz_ChannelID_Console} = 4</msg>
<status status="PASS" starttime="20210621 12:11:29.428" endtime="20210621 12:11:29.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:11:29.496" level="INFO">Channel ID from Console is 4</msg>
<status status="PASS" starttime="20210621 12:11:29.495" endtime="20210621 12:11:29.496"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:11:29.496" endtime="20210621 12:11:29.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:11:29.497" endtime="20210621 12:11:29.498"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:12:59.508" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:11:29.499" endtime="20210621 12:12:59.508"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:12:59.510" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:12:59.516" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:13:00.243" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:12:59.510" endtime="20210621 12:13:00.244"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:13:00.245" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:13:00.248" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:13:00.847" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:13:00.848" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:13:00.244" endtime="20210621 12:13:00.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:13:00.850" level="INFO">
  
&gt; SSID 4 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:13:00.848" endtime="20210621 12:13:00.851"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:13:00.853" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '40']</msg>
<status status="PASS" starttime="20210621 12:13:00.851" endtime="20210621 12:13:00.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:13:00.855" level="INFO">Analyser Channel IDs are 4 and 40</msg>
<status status="PASS" starttime="20210621 12:13:00.853" endtime="20210621 12:13:00.855"/>
</kw>
<msg timestamp="20210621 12:13:00.858" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['4', '40']</msg>
<status status="PASS" starttime="20210621 12:12:59.509" endtime="20210621 12:13:00.858"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:13:00.859" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:13:00.860" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:13:00.859" endtime="20210621 12:13:00.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:13:00.860" level="INFO">ChannelIDs are ['4', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:13:00.860" endtime="20210621 12:13:00.860"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:13:00.861" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:13:00.860" endtime="20210621 12:13:00.861"/>
</kw>
<status status="PASS" starttime="20210621 12:12:59.509" endtime="20210621 12:13:00.861"/>
</iter>
<status status="PASS" starttime="20210621 12:12:59.509" endtime="20210621 12:13:00.861"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:13:00.861" endtime="20210621 12:13:00.861"/>
</kw>
<status status="PASS" starttime="20210621 12:11:03.404" endtime="20210621 12:13:00.861"/>
</kw>
<status status="PASS" starttime="20210621 12:10:40.846" endtime="20210621 12:13:00.862"/>
</test>
<test id="s1-t5" name="Verify setting 2.4Ghz ChannelID 5 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:13:00.865" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:13:00.902" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-265.log</msg>
<status status="PASS" starttime="20210621 12:13:00.865" endtime="20210621 12:13:11.034"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:13:11.035" endtime="20210621 12:13:11.065"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:13:13.065" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:13:11.065" endtime="20210621 12:13:13.065"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:13:13.067" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:13:13.365" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:13:13.066" endtime="20210621 12:13:13.386"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:13:15.394" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:13:13.387" endtime="20210621 12:13:15.394"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:13:15.395" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:13:15.394" endtime="20210621 12:13:17.624"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:13:22.636" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:13:17.624" endtime="20210621 12:13:22.636"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:13:22.637" endtime="20210621 12:13:22.646"/>
</kw>
<status status="PASS" starttime="20210621 12:13:00.864" endtime="20210621 12:13:22.646"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>5</arg>
<arg>6</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:13:22.651" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:13:22.650" endtime="20210621 12:13:22.712"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:13:27.727" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:13:22.712" endtime="20210621 12:13:27.729"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:13:27.729" endtime="20210621 12:13:27.802"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:13:27.803" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:13:27.802" endtime="20210621 12:13:27.852"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:13:27.870" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:13:27.853" endtime="20210621 12:13:27.871"/>
</kw>
<status status="PASS" starttime="20210621 12:13:22.650" endtime="20210621 12:13:27.871"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:13:27.873" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:13:27.872" endtime="20210621 12:13:28.119"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:13:28.119" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[6]/a'.</msg>
<status status="PASS" starttime="20210621 12:13:28.119" endtime="20210621 12:13:28.351"/>
</kw>
<status status="PASS" starttime="20210621 12:13:27.871" endtime="20210621 12:13:28.351"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:13:28.353" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:13:28.352" endtime="20210621 12:13:28.589"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:13:28.590" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:13:28.589" endtime="20210621 12:13:28.815"/>
</kw>
<status status="PASS" starttime="20210621 12:13:28.352" endtime="20210621 12:13:28.815"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:13:28.816" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:13:28.816" endtime="20210621 12:13:29.077"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:13:29.152" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%205%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%205%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:13:29.078" endtime="20210621 12:13:29.152"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:13:44.154" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:13:29.153" endtime="20210621 12:13:44.154"/>
</kw>
<status status="PASS" starttime="20210621 12:13:28.816" endtime="20210621 12:13:44.155"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:13:44.156" endtime="20210621 12:13:44.160"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:13:44.161" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:13:44.160" endtime="20210621 12:13:44.397"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:13:46.406" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:13:44.397" endtime="20210621 12:13:46.406"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:13:46.406" endtime="20210621 12:13:47.773"/>
</kw>
<status status="PASS" starttime="20210621 12:13:44.155" endtime="20210621 12:13:47.773"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:13:47.775" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:13:47.774" endtime="20210621 12:13:47.776"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:13:47.927" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:34:54 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:13:47.776" endtime="20210621 12:13:47.927"/>
</kw>
<status status="PASS" starttime="20210621 12:13:47.774" endtime="20210621 12:13:47.928"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:13:47.931" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:13:48.032" level="INFO">ARC_WLAN_24G_Channel=5
#</msg>
<msg timestamp="20210621 12:13:48.033" level="INFO">${out} = ARC_WLAN_24G_Channel=5
#</msg>
<status status="PASS" starttime="20210621 12:13:47.928" endtime="20210621 12:13:48.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:13:48.033" level="INFO">ARC_WLAN_24G_Channel=5
#</msg>
<status status="PASS" starttime="20210621 12:13:48.033" endtime="20210621 12:13:48.033"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:13:48.034" level="INFO">${result} = ['5']</msg>
<status status="PASS" starttime="20210621 12:13:48.033" endtime="20210621 12:13:48.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:13:48.035" level="INFO">2.4Ghz Channel ID from console is 5</msg>
<status status="PASS" starttime="20210621 12:13:48.034" endtime="20210621 12:13:48.035"/>
</kw>
<msg timestamp="20210621 12:13:48.037" level="INFO">${2.4Ghz_ChannelID_Console} = 5</msg>
<status status="PASS" starttime="20210621 12:13:47.928" endtime="20210621 12:13:48.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:13:48.037" level="INFO">Channel ID from Console is 5</msg>
<status status="PASS" starttime="20210621 12:13:48.037" endtime="20210621 12:13:48.037"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:13:48.037" endtime="20210621 12:13:48.038"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:13:48.038" endtime="20210621 12:13:48.038"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:15:18.049" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:13:48.038" endtime="20210621 12:15:18.049"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:15:18.050" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:15:18.054" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:15:18.648" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:15:18.050" endtime="20210621 12:15:18.649"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:15:18.650" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:15:18.653" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:15:19.204" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:15:19.204" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:15:18.649" endtime="20210621 12:15:19.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:15:19.206" level="INFO">
  
&gt; SSID 10 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 5 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:15:19.204" endtime="20210621 12:15:19.206"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:15:19.207" level="INFO">${Analyser_ChannelID_5Ghz} = ['5', '40']</msg>
<status status="PASS" starttime="20210621 12:15:19.206" endtime="20210621 12:15:19.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:15:19.209" level="INFO">Analyser Channel IDs are 5 and 40</msg>
<status status="PASS" starttime="20210621 12:15:19.207" endtime="20210621 12:15:19.209"/>
</kw>
<msg timestamp="20210621 12:15:19.211" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['5', '40']</msg>
<status status="PASS" starttime="20210621 12:15:18.050" endtime="20210621 12:15:19.211"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:15:19.211" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:15:19.212" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:15:19.211" endtime="20210621 12:15:19.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:15:19.212" level="INFO">ChannelIDs are ['5', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:15:19.212" endtime="20210621 12:15:19.212"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:15:19.213" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:15:19.212" endtime="20210621 12:15:19.213"/>
</kw>
<status status="PASS" starttime="20210621 12:15:18.049" endtime="20210621 12:15:19.213"/>
</iter>
<status status="PASS" starttime="20210621 12:15:18.049" endtime="20210621 12:15:19.213"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:15:19.213" endtime="20210621 12:15:19.213"/>
</kw>
<status status="PASS" starttime="20210621 12:13:22.649" endtime="20210621 12:15:19.214"/>
</kw>
<status status="PASS" starttime="20210621 12:13:00.864" endtime="20210621 12:15:19.214"/>
</test>
<test id="s1-t6" name="Verify setting 2.4Ghz ChannelID 6 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:15:19.221" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:15:19.267" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-266.log</msg>
<status status="PASS" starttime="20210621 12:15:19.219" endtime="20210621 12:15:31.471"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:15:31.472" endtime="20210621 12:15:31.487"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:15:33.498" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:15:31.487" endtime="20210621 12:15:33.498"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:15:33.499" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:15:33.795" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:15:33.498" endtime="20210621 12:15:33.814"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:15:35.817" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:15:33.814" endtime="20210621 12:15:35.817"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:15:35.817" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:15:35.817" endtime="20210621 12:15:37.597"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:15:42.603" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:15:37.597" endtime="20210621 12:15:42.603"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:15:42.603" endtime="20210621 12:15:42.615"/>
</kw>
<status status="PASS" starttime="20210621 12:15:19.218" endtime="20210621 12:15:42.615"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>6</arg>
<arg>7</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:15:42.618" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:15:42.618" endtime="20210621 12:15:42.679"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:15:47.685" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:15:42.681" endtime="20210621 12:15:47.685"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:15:47.685" endtime="20210621 12:15:47.699"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:15:47.700" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:15:47.700" endtime="20210621 12:15:47.716"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:15:47.730" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:15:47.716" endtime="20210621 12:15:47.730"/>
</kw>
<status status="PASS" starttime="20210621 12:15:42.617" endtime="20210621 12:15:47.731"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:15:47.733" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:15:47.732" endtime="20210621 12:15:47.988"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:15:47.989" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[7]/a'.</msg>
<status status="PASS" starttime="20210621 12:15:47.988" endtime="20210621 12:15:48.230"/>
</kw>
<status status="PASS" starttime="20210621 12:15:47.731" endtime="20210621 12:15:48.230"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:15:48.232" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:15:48.231" endtime="20210621 12:15:48.469"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:15:48.470" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:15:48.470" endtime="20210621 12:15:48.710"/>
</kw>
<status status="PASS" starttime="20210621 12:15:48.231" endtime="20210621 12:15:48.710"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:15:48.711" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:15:48.711" endtime="20210621 12:15:48.982"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:15:49.070" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%206%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%206%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:15:48.982" endtime="20210621 12:15:49.070"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:16:04.077" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:15:49.071" endtime="20210621 12:16:04.078"/>
</kw>
<status status="PASS" starttime="20210621 12:15:48.711" endtime="20210621 12:16:04.078"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:16:04.079" endtime="20210621 12:16:04.084"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:16:04.084" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:16:04.084" endtime="20210621 12:16:04.319"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:16:06.328" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:16:04.320" endtime="20210621 12:16:06.328"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:16:06.328" endtime="20210621 12:16:09.066"/>
</kw>
<status status="PASS" starttime="20210621 12:16:04.079" endtime="20210621 12:16:09.066"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:16:09.068" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:16:09.067" endtime="20210621 12:16:09.070"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:16:09.220" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:37:16 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:16:09.070" endtime="20210621 12:16:09.220"/>
</kw>
<status status="PASS" starttime="20210621 12:16:09.066" endtime="20210621 12:16:09.221"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:16:09.224" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:16:09.326" level="INFO">ARC_WLAN_24G_Channel=6
#</msg>
<msg timestamp="20210621 12:16:09.326" level="INFO">${out} = ARC_WLAN_24G_Channel=6
#</msg>
<status status="PASS" starttime="20210621 12:16:09.221" endtime="20210621 12:16:09.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:16:09.327" level="INFO">ARC_WLAN_24G_Channel=6
#</msg>
<status status="PASS" starttime="20210621 12:16:09.327" endtime="20210621 12:16:09.327"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:16:09.328" level="INFO">${result} = ['6']</msg>
<status status="PASS" starttime="20210621 12:16:09.327" endtime="20210621 12:16:09.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:16:09.329" level="INFO">2.4Ghz Channel ID from console is 6</msg>
<status status="PASS" starttime="20210621 12:16:09.328" endtime="20210621 12:16:09.329"/>
</kw>
<msg timestamp="20210621 12:16:09.330" level="INFO">${2.4Ghz_ChannelID_Console} = 6</msg>
<status status="PASS" starttime="20210621 12:16:09.221" endtime="20210621 12:16:09.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:16:09.331" level="INFO">Channel ID from Console is 6</msg>
<status status="PASS" starttime="20210621 12:16:09.330" endtime="20210621 12:16:09.331"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:16:09.331" endtime="20210621 12:16:09.331"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:16:09.331" endtime="20210621 12:16:09.332"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:17:39.334" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:16:09.332" endtime="20210621 12:17:39.335"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:17:39.353" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:17:39.368" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:17:40.412" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:17:39.350" endtime="20210621 12:17:40.413"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:17:40.415" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:17:40.419" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:17:41.395" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:17:41.396" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:17:40.414" endtime="20210621 12:17:41.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:17:41.397" level="INFO">
  
&gt; SSID 3 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 6 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210621 12:17:41.396" endtime="20210621 12:17:41.398"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:17:41.400" level="INFO">${Analyser_ChannelID_5Ghz} = ['40', '6']</msg>
<status status="PASS" starttime="20210621 12:17:41.399" endtime="20210621 12:17:41.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:17:41.403" level="INFO">Analyser Channel IDs are 40 and 6</msg>
<status status="PASS" starttime="20210621 12:17:41.400" endtime="20210621 12:17:41.403"/>
</kw>
<msg timestamp="20210621 12:17:41.407" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['40', '6']</msg>
<status status="PASS" starttime="20210621 12:17:39.339" endtime="20210621 12:17:41.408"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:17:41.408" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:17:41.410" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:17:41.408" endtime="20210621 12:17:41.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:17:41.410" level="INFO">ChannelIDs are ['40', '6'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:17:41.410" endtime="20210621 12:17:41.411"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:17:41.411" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:17:41.411" endtime="20210621 12:17:41.412"/>
</kw>
<status status="PASS" starttime="20210621 12:17:39.337" endtime="20210621 12:17:41.412"/>
</iter>
<status status="PASS" starttime="20210621 12:17:39.336" endtime="20210621 12:17:41.412"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:17:41.412" endtime="20210621 12:17:41.414"/>
</kw>
<status status="PASS" starttime="20210621 12:15:42.616" endtime="20210621 12:17:41.414"/>
</kw>
<status status="PASS" starttime="20210621 12:15:19.217" endtime="20210621 12:17:41.415"/>
</test>
<test id="s1-t7" name="Verify setting 2.4Ghz ChannelID 7 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:17:41.419" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:17:41.496" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-267.log</msg>
<status status="PASS" starttime="20210621 12:17:41.419" endtime="20210621 12:17:55.200"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:17:55.201" endtime="20210621 12:17:55.206"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:17:57.218" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:17:55.206" endtime="20210621 12:17:57.218"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:17:57.220" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:17:57.552" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:17:57.219" endtime="20210621 12:17:57.603"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:17:59.607" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:17:57.604" endtime="20210621 12:17:59.607"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:17:59.610" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:17:59.608" endtime="20210621 12:18:02.355"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:18:07.371" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:18:02.356" endtime="20210621 12:18:07.372"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:18:07.372" endtime="20210621 12:18:07.404"/>
</kw>
<status status="PASS" starttime="20210621 12:17:41.418" endtime="20210621 12:18:07.404"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>7</arg>
<arg>8</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:18:07.421" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:18:07.420" endtime="20210621 12:18:07.517"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:18:12.519" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:18:07.517" endtime="20210621 12:18:12.519"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:18:12.520" endtime="20210621 12:18:12.534"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:18:12.535" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:18:12.534" endtime="20210621 12:18:12.554"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:18:12.715" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-53.png"&gt;&lt;img src="selenium-screenshot-53.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:18:12.574" endtime="20210621 12:18:12.715"/>
</kw>
<msg timestamp="20210621 12:18:12.721" level="FAIL">Frame should have contained text 'Restore WiFi Defaults' but did not.</msg>
<status status="FAIL" starttime="20210621 12:18:12.555" endtime="20210621 12:18:12.721"/>
</kw>
<status status="FAIL" starttime="20210621 12:18:07.420" endtime="20210621 12:18:12.721"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<status status="NOT RUN" starttime="20210621 12:18:12.722" endtime="20210621 12:18:12.722"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<status status="NOT RUN" starttime="20210621 12:18:12.722" endtime="20210621 12:18:12.722"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<status status="NOT RUN" starttime="20210621 12:18:12.723" endtime="20210621 12:18:12.723"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<status status="NOT RUN" starttime="20210621 12:18:12.723" endtime="20210621 12:18:12.723"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<status status="NOT RUN" starttime="20210621 12:18:12.723" endtime="20210621 12:18:12.723"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<status status="NOT RUN" starttime="20210621 12:18:12.724" endtime="20210621 12:18:12.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210621 12:18:12.724" endtime="20210621 12:18:12.724"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="NOT RUN" starttime="20210621 12:18:12.724" endtime="20210621 12:18:12.725"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210621 12:18:12.725" endtime="20210621 12:18:12.725"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:18:12.725" endtime="20210621 12:18:12.725"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">${VAR}</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<status status="NOT RUN" starttime="20210621 12:18:12.726" endtime="20210621 12:18:12.726"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210621 12:18:12.726" endtime="20210621 12:18:12.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210621 12:18:12.727" endtime="20210621 12:18:12.727"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210621 12:18:12.727" endtime="20210621 12:18:12.728"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>30s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:18:12.728" endtime="20210621 12:18:12.728"/>
</kw>
<status status="NOT RUN" starttime="20210621 12:18:12.726" endtime="20210621 12:18:12.728"/>
</iter>
<status status="NOT RUN" starttime="20210621 12:18:12.725" endtime="20210621 12:18:12.728"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210621 12:18:12.728" endtime="20210621 12:18:12.728"/>
</kw>
<status status="FAIL" starttime="20210621 12:18:07.419" endtime="20210621 12:18:12.729"/>
</kw>
<status status="FAIL" starttime="20210621 12:17:41.417" endtime="20210621 12:18:12.733">Frame should have contained text 'Restore WiFi Defaults' but did not.</status>
</test>
<test id="s1-t8" name="Verify setting 2.4Ghz ChannelID 8 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:18:12.739" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:18:12.810" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-268.log</msg>
<status status="PASS" starttime="20210621 12:18:12.738" endtime="20210621 12:18:25.319"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:18:25.320" endtime="20210621 12:18:25.346"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:18:27.349" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:18:25.347" endtime="20210621 12:18:27.350"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:18:27.352" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:18:27.701" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:18:27.350" endtime="20210621 12:18:27.745"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:18:29.749" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:18:27.745" endtime="20210621 12:18:29.749"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:18:29.750" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:18:29.750" endtime="20210621 12:18:30.664"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:18:35.679" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:18:30.665" endtime="20210621 12:18:35.680"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:18:50.872" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-54.png"&gt;&lt;img src="selenium-screenshot-54.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:18:50.765" endtime="20210621 12:18:50.872"/>
</kw>
<msg timestamp="20210621 12:18:50.933" level="FAIL">Text 'Topology Overview' did not appear in 15 seconds.</msg>
<status status="FAIL" starttime="20210621 12:18:35.680" endtime="20210621 12:18:50.933"/>
</kw>
<status status="FAIL" starttime="20210621 12:18:12.737" endtime="20210621 12:18:50.933"/>
</kw>
<status status="FAIL" starttime="20210621 12:18:12.735" endtime="20210621 12:18:50.935">Setup failed:
Text 'Topology Overview' did not appear in 15 seconds.</status>
</test>
<test id="s1-t9" name="Verify setting 2.4Ghz ChannelID 9 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:18:50.944" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:18:51.046" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-269.log</msg>
<status status="PASS" starttime="20210621 12:18:50.943" endtime="20210621 12:19:04.683"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:19:04.684" endtime="20210621 12:19:04.701"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:19:06.711" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:19:04.702" endtime="20210621 12:19:06.711"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:19:06.712" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:19:07.061" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:19:06.711" endtime="20210621 12:19:07.104"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:19:09.113" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:19:07.105" endtime="20210621 12:19:09.113"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:19:09.114" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:19:09.113" endtime="20210621 12:19:09.938"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:19:14.941" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:19:09.938" endtime="20210621 12:19:14.941"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:19:30.214" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-55.png"&gt;&lt;img src="selenium-screenshot-55.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:19:30.094" endtime="20210621 12:19:30.214"/>
</kw>
<msg timestamp="20210621 12:19:30.216" level="FAIL">Text 'Topology Overview' did not appear in 15 seconds.</msg>
<status status="FAIL" starttime="20210621 12:19:14.942" endtime="20210621 12:19:30.216"/>
</kw>
<status status="FAIL" starttime="20210621 12:18:50.942" endtime="20210621 12:19:30.217"/>
</kw>
<status status="FAIL" starttime="20210621 12:18:50.941" endtime="20210621 12:19:30.225">Setup failed:
Text 'Topology Overview' did not appear in 15 seconds.</status>
</test>
<test id="s1-t10" name="Verify setting 2.4Ghz ChannelID 10 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:19:30.278" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:19:30.425" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-270.log</msg>
<status status="PASS" starttime="20210621 12:19:30.277" endtime="20210621 12:19:44.331"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:19:44.331" endtime="20210621 12:19:44.348"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:19:46.350" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:19:44.348" endtime="20210621 12:19:46.350"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:19:46.351" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:19:46.668" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:19:46.350" endtime="20210621 12:19:46.711"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:19:48.720" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:19:46.711" endtime="20210621 12:19:48.720"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:19:48.721" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:19:48.721" endtime="20210621 12:19:50.632"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:19:55.636" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:19:50.633" endtime="20210621 12:19:55.636"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:19:55.637" endtime="20210621 12:19:55.651"/>
</kw>
<status status="PASS" starttime="20210621 12:19:30.275" endtime="20210621 12:19:55.652"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>10</arg>
<arg>11</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:19:55.655" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:19:55.655" endtime="20210621 12:19:55.726"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:20:00.737" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:19:55.727" endtime="20210621 12:20:00.737"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:20:00.738" endtime="20210621 12:20:00.749"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:20:00.750" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:20:00.749" endtime="20210621 12:20:00.763"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:20:00.779" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:20:00.764" endtime="20210621 12:20:00.779"/>
</kw>
<status status="PASS" starttime="20210621 12:19:55.654" endtime="20210621 12:20:00.779"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:20:00.781" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:20:00.781" endtime="20210621 12:20:01.024"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:20:01.026" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[11]/a'.</msg>
<status status="PASS" starttime="20210621 12:20:01.025" endtime="20210621 12:20:01.264"/>
</kw>
<status status="PASS" starttime="20210621 12:20:00.780" endtime="20210621 12:20:01.264"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:20:01.266" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:20:01.266" endtime="20210621 12:20:01.504"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:20:01.505" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:20:01.504" endtime="20210621 12:20:01.744"/>
</kw>
<status status="PASS" starttime="20210621 12:20:01.265" endtime="20210621 12:20:01.745"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:20:01.746" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:20:01.746" endtime="20210621 12:20:02.036"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:20:02.141" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%2010%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%2010%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:20:02.037" endtime="20210621 12:20:02.141"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:20:17.153" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:20:02.141" endtime="20210621 12:20:17.153"/>
</kw>
<status status="PASS" starttime="20210621 12:20:01.745" endtime="20210621 12:20:17.154"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:20:17.155" endtime="20210621 12:20:17.162"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:20:17.163" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:20:17.163" endtime="20210621 12:20:17.441"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:20:19.449" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:20:17.441" endtime="20210621 12:20:19.449"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:20:19.449" endtime="20210621 12:20:29.925"/>
</kw>
<status status="PASS" starttime="20210621 12:20:17.154" endtime="20210621 12:20:29.925"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:20:29.927" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:20:29.927" endtime="20210621 12:20:29.928"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:20:30.353" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:41:37 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:20:29.929" endtime="20210621 12:20:30.354"/>
</kw>
<status status="PASS" starttime="20210621 12:20:29.926" endtime="20210621 12:20:30.354"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:20:30.359" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:20:30.458" level="INFO">ARC_WLAN_24G_Channel=10
#</msg>
<msg timestamp="20210621 12:20:30.458" level="INFO">${out} = ARC_WLAN_24G_Channel=10
#</msg>
<status status="PASS" starttime="20210621 12:20:30.356" endtime="20210621 12:20:30.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:20:30.460" level="INFO">ARC_WLAN_24G_Channel=10
#</msg>
<status status="PASS" starttime="20210621 12:20:30.459" endtime="20210621 12:20:30.460"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:20:30.461" level="INFO">${result} = ['10']</msg>
<status status="PASS" starttime="20210621 12:20:30.460" endtime="20210621 12:20:30.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:20:30.464" level="INFO">2.4Ghz Channel ID from console is 10</msg>
<status status="PASS" starttime="20210621 12:20:30.461" endtime="20210621 12:20:30.464"/>
</kw>
<msg timestamp="20210621 12:20:30.468" level="INFO">${2.4Ghz_ChannelID_Console} = 10</msg>
<status status="PASS" starttime="20210621 12:20:30.355" endtime="20210621 12:20:30.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:20:30.469" level="INFO">Channel ID from Console is 10</msg>
<status status="PASS" starttime="20210621 12:20:30.469" endtime="20210621 12:20:30.470"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:20:30.470" endtime="20210621 12:20:30.471"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:20:30.471" endtime="20210621 12:20:30.472"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:22:00.477" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:20:30.472" endtime="20210621 12:22:00.480"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:22:00.484" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:22:00.505" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:22:02.472" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:22:00.483" endtime="20210621 12:22:02.472"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:22:02.474" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:22:02.479" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:22:03.683" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:22:03.685" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:22:02.473" endtime="20210621 12:22:03.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:22:03.692" level="INFO">
  
&gt; SSID 13 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 10 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210621 12:22:03.687" endtime="20210621 12:22:03.692"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:22:03.696" level="INFO">${Analyser_ChannelID_5Ghz} = ['40', '10']</msg>
<status status="PASS" starttime="20210621 12:22:03.693" endtime="20210621 12:22:03.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:22:03.704" level="INFO">Analyser Channel IDs are 40 and 10</msg>
<status status="PASS" starttime="20210621 12:22:03.696" endtime="20210621 12:22:03.704"/>
</kw>
<msg timestamp="20210621 12:22:03.715" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['40', '10']</msg>
<status status="PASS" starttime="20210621 12:22:00.482" endtime="20210621 12:22:03.715"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:22:03.717" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:22:03.723" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:22:03.716" endtime="20210621 12:22:03.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:22:03.725" level="INFO">ChannelIDs are ['40', '10'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:22:03.724" endtime="20210621 12:22:03.725"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:22:03.728" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:22:03.726" endtime="20210621 12:22:03.728"/>
</kw>
<status status="PASS" starttime="20210621 12:22:00.481" endtime="20210621 12:22:03.728"/>
</iter>
<status status="PASS" starttime="20210621 12:22:00.480" endtime="20210621 12:22:03.728"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:22:03.729" endtime="20210621 12:22:03.733"/>
</kw>
<status status="PASS" starttime="20210621 12:19:55.653" endtime="20210621 12:22:03.735"/>
</kw>
<status status="PASS" starttime="20210621 12:19:30.274" endtime="20210621 12:22:03.737"/>
</test>
<test id="s1-t11" name="Verify setting 2.4Ghz ChannelID 11 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:22:03.764" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:22:03.863" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-271.log</msg>
<status status="PASS" starttime="20210621 12:22:03.757" endtime="20210621 12:22:17.899"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:22:17.900" endtime="20210621 12:22:17.906"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:22:19.917" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:22:17.907" endtime="20210621 12:22:19.918"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:22:19.920" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:22:20.270" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:22:19.919" endtime="20210621 12:22:20.372"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:22:22.388" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:22:20.373" endtime="20210621 12:22:22.388"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:22:22.389" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:22:22.389" endtime="20210621 12:22:25.458"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:22:30.460" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:22:25.460" endtime="20210621 12:22:30.460"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:22:30.461" endtime="20210621 12:22:30.479"/>
</kw>
<status status="PASS" starttime="20210621 12:22:03.742" endtime="20210621 12:22:30.480"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>11</arg>
<arg>12</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:22:30.483" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:22:30.482" endtime="20210621 12:22:30.581"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:22:35.595" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:22:30.582" endtime="20210621 12:22:35.595"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:22:35.595" endtime="20210621 12:22:35.610"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:22:35.612" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:22:35.611" endtime="20210621 12:22:35.626"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:22:35.639" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:22:35.626" endtime="20210621 12:22:35.639"/>
</kw>
<status status="PASS" starttime="20210621 12:22:30.481" endtime="20210621 12:22:35.640"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:22:35.643" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:22:35.642" endtime="20210621 12:22:35.898"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:22:35.900" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[12]/a'.</msg>
<status status="PASS" starttime="20210621 12:22:35.899" endtime="20210621 12:22:36.138"/>
</kw>
<status status="PASS" starttime="20210621 12:22:35.640" endtime="20210621 12:22:36.139"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:22:36.141" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:22:36.141" endtime="20210621 12:22:36.379"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:22:36.381" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:22:36.380" endtime="20210621 12:22:36.622"/>
</kw>
<status status="PASS" starttime="20210621 12:22:36.139" endtime="20210621 12:22:36.622"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:22:36.624" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:22:36.623" endtime="20210621 12:22:36.965"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:22:37.087" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%2011%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%2011%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:22:36.965" endtime="20210621 12:22:37.087"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:22:52.091" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:22:37.088" endtime="20210621 12:22:52.091"/>
</kw>
<status status="PASS" starttime="20210621 12:22:36.623" endtime="20210621 12:22:52.092"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:22:52.094" endtime="20210621 12:22:52.100"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:22:52.102" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:22:52.101" endtime="20210621 12:22:52.361"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:22:54.362" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:22:52.362" endtime="20210621 12:22:54.363"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:22:54.364" endtime="20210621 12:22:56.655"/>
</kw>
<status status="PASS" starttime="20210621 12:22:52.093" endtime="20210621 12:22:56.656"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:22:56.658" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:22:56.658" endtime="20210621 12:22:56.661"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:22:57.059" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:44:03 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:22:56.661" endtime="20210621 12:22:57.060"/>
</kw>
<status status="PASS" starttime="20210621 12:22:56.656" endtime="20210621 12:22:57.060"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:22:57.069" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:22:57.251" level="INFO">ARC_WLAN_24G_Channel=11
#</msg>
<msg timestamp="20210621 12:22:57.251" level="INFO">${out} = ARC_WLAN_24G_Channel=11
#</msg>
<status status="PASS" starttime="20210621 12:22:57.061" endtime="20210621 12:22:57.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:22:57.253" level="INFO">ARC_WLAN_24G_Channel=11
#</msg>
<status status="PASS" starttime="20210621 12:22:57.252" endtime="20210621 12:22:57.253"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:22:57.254" level="INFO">${result} = ['11']</msg>
<status status="PASS" starttime="20210621 12:22:57.253" endtime="20210621 12:22:57.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:22:57.257" level="INFO">2.4Ghz Channel ID from console is 11</msg>
<status status="PASS" starttime="20210621 12:22:57.255" endtime="20210621 12:22:57.258"/>
</kw>
<msg timestamp="20210621 12:22:57.262" level="INFO">${2.4Ghz_ChannelID_Console} = 11</msg>
<status status="PASS" starttime="20210621 12:22:57.060" endtime="20210621 12:22:57.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:22:57.263" level="INFO">Channel ID from Console is 11</msg>
<status status="PASS" starttime="20210621 12:22:57.262" endtime="20210621 12:22:57.263"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:22:57.264" endtime="20210621 12:22:57.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:22:57.265" endtime="20210621 12:22:57.267"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:24:27.268" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:22:57.267" endtime="20210621 12:24:27.269"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:24:27.272" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:24:27.280" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:24:28.399" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:24:27.271" endtime="20210621 12:24:28.399"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:24:28.400" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:24:28.405" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:24:29.446" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:24:29.447" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:24:28.399" endtime="20210621 12:24:29.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:24:29.449" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 11 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:24:29.447" endtime="20210621 12:24:29.449"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:24:29.452" level="INFO">${Analyser_ChannelID_5Ghz} = ['11', '40']</msg>
<status status="PASS" starttime="20210621 12:24:29.450" endtime="20210621 12:24:29.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:24:29.456" level="INFO">Analyser Channel IDs are 11 and 40</msg>
<status status="PASS" starttime="20210621 12:24:29.452" endtime="20210621 12:24:29.456"/>
</kw>
<msg timestamp="20210621 12:24:29.462" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['11', '40']</msg>
<status status="PASS" starttime="20210621 12:24:27.270" endtime="20210621 12:24:29.462"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:24:29.463" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:24:29.465" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:24:29.462" endtime="20210621 12:24:29.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:24:29.466" level="INFO">ChannelIDs are ['11', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:24:29.465" endtime="20210621 12:24:29.466"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:24:29.469" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:24:29.467" endtime="20210621 12:24:29.470"/>
</kw>
<status status="PASS" starttime="20210621 12:24:27.270" endtime="20210621 12:24:29.470"/>
</iter>
<status status="PASS" starttime="20210621 12:24:27.269" endtime="20210621 12:24:29.470"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:24:29.470" endtime="20210621 12:24:29.472"/>
</kw>
<status status="PASS" starttime="20210621 12:22:30.480" endtime="20210621 12:24:29.472"/>
</kw>
<status status="PASS" starttime="20210621 12:22:03.740" endtime="20210621 12:24:29.473"/>
</test>
<test id="s1-t12" name="Verify setting 2.4Ghz ChannelID 12 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:24:29.484" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:24:29.555" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-272.log</msg>
<status status="PASS" starttime="20210621 12:24:29.482" endtime="20210621 12:24:42.974"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:24:42.974" endtime="20210621 12:24:42.990"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:24:44.995" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:24:42.991" endtime="20210621 12:24:44.995"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:24:44.997" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:24:45.341" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:24:44.995" endtime="20210621 12:24:45.386"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:24:47.395" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:24:45.387" endtime="20210621 12:24:47.395"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:24:47.396" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:24:47.395" endtime="20210621 12:24:49.653"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:24:54.660" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:24:49.654" endtime="20210621 12:24:54.660"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:24:54.660" endtime="20210621 12:24:54.734"/>
</kw>
<status status="PASS" starttime="20210621 12:24:29.480" endtime="20210621 12:24:54.735"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>12</arg>
<arg>13</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:24:54.877" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:24:54.876" endtime="20210621 12:24:54.963"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:24:59.975" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:24:54.965" endtime="20210621 12:24:59.975"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:24:59.976" endtime="20210621 12:24:59.997"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:24:59.998" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:24:59.997" endtime="20210621 12:25:00.012"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:25:00.028" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:25:00.013" endtime="20210621 12:25:00.029"/>
</kw>
<status status="PASS" starttime="20210621 12:24:54.874" endtime="20210621 12:25:00.029"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:25:00.032" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:25:00.031" endtime="20210621 12:25:00.326"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:25:00.327" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[13]/a'.</msg>
<status status="PASS" starttime="20210621 12:25:00.326" endtime="20210621 12:25:00.577"/>
</kw>
<status status="PASS" starttime="20210621 12:25:00.030" endtime="20210621 12:25:00.578"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:25:00.580" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:25:00.579" endtime="20210621 12:25:00.824"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:25:00.825" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:25:00.824" endtime="20210621 12:25:01.074"/>
</kw>
<status status="PASS" starttime="20210621 12:25:00.578" endtime="20210621 12:25:01.075"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:25:01.077" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:25:01.076" endtime="20210621 12:25:01.380"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:25:01.546" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%2012%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%2012%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:25:01.381" endtime="20210621 12:25:01.546"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:25:16.561" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:25:01.546" endtime="20210621 12:25:16.561"/>
</kw>
<status status="PASS" starttime="20210621 12:25:01.075" endtime="20210621 12:25:16.562"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:25:16.564" endtime="20210621 12:25:16.570"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:25:16.571" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:25:16.570" endtime="20210621 12:25:16.831"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:25:18.839" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:25:16.831" endtime="20210621 12:25:18.839"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:25:18.840" endtime="20210621 12:25:20.742"/>
</kw>
<status status="PASS" starttime="20210621 12:25:16.563" endtime="20210621 12:25:20.742"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:25:20.744" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:25:20.743" endtime="20210621 12:25:20.746"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:25:21.138" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:46:27 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:25:20.746" endtime="20210621 12:25:21.138"/>
</kw>
<status status="PASS" starttime="20210621 12:25:20.743" endtime="20210621 12:25:21.138"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:25:21.146" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:25:21.243" level="INFO">ARC_WLAN_24G_Channel=12
#</msg>
<msg timestamp="20210621 12:25:21.243" level="INFO">${out} = ARC_WLAN_24G_Channel=12
#</msg>
<status status="PASS" starttime="20210621 12:25:21.140" endtime="20210621 12:25:21.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:25:21.244" level="INFO">ARC_WLAN_24G_Channel=12
#</msg>
<status status="PASS" starttime="20210621 12:25:21.244" endtime="20210621 12:25:21.244"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:25:21.246" level="INFO">${result} = ['12']</msg>
<status status="PASS" starttime="20210621 12:25:21.245" endtime="20210621 12:25:21.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:25:21.248" level="INFO">2.4Ghz Channel ID from console is 12</msg>
<status status="PASS" starttime="20210621 12:25:21.246" endtime="20210621 12:25:21.248"/>
</kw>
<msg timestamp="20210621 12:25:21.253" level="INFO">${2.4Ghz_ChannelID_Console} = 12</msg>
<status status="PASS" starttime="20210621 12:25:21.139" endtime="20210621 12:25:21.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:25:21.254" level="INFO">Channel ID from Console is 12</msg>
<status status="PASS" starttime="20210621 12:25:21.253" endtime="20210621 12:25:21.254"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:25:21.255" endtime="20210621 12:25:21.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:25:21.255" endtime="20210621 12:25:21.256"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:26:51.263" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:25:21.257" endtime="20210621 12:26:51.264"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:26:51.267" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:26:51.273" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:26:52.309" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:26:51.266" endtime="20210621 12:26:52.309"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:26:52.311" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:26:52.317" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:26:53.359" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:26:53.359" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:26:52.310" endtime="20210621 12:26:53.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:26:53.362" level="INFO">
  
&gt; SSID 9 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 12 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:26:53.360" endtime="20210621 12:26:53.362"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:26:53.364" level="INFO">${Analyser_ChannelID_5Ghz} = ['12', '40']</msg>
<status status="PASS" starttime="20210621 12:26:53.363" endtime="20210621 12:26:53.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:26:53.368" level="INFO">Analyser Channel IDs are 12 and 40</msg>
<status status="PASS" starttime="20210621 12:26:53.365" endtime="20210621 12:26:53.368"/>
</kw>
<msg timestamp="20210621 12:26:53.372" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['12', '40']</msg>
<status status="PASS" starttime="20210621 12:26:51.265" endtime="20210621 12:26:53.372"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:26:53.373" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:26:53.374" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:26:53.373" endtime="20210621 12:26:53.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:26:53.375" level="INFO">ChannelIDs are ['12', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:26:53.375" endtime="20210621 12:26:53.376"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:26:53.377" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:26:53.376" endtime="20210621 12:26:53.377"/>
</kw>
<status status="PASS" starttime="20210621 12:26:51.264" endtime="20210621 12:26:53.377"/>
</iter>
<status status="PASS" starttime="20210621 12:26:51.264" endtime="20210621 12:26:53.377"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:26:53.378" endtime="20210621 12:26:53.379"/>
</kw>
<status status="PASS" starttime="20210621 12:24:54.852" endtime="20210621 12:26:53.379"/>
</kw>
<status status="PASS" starttime="20210621 12:24:29.477" endtime="20210621 12:26:53.381"/>
</test>
<test id="s1-t13" name="Verify setting 2.4Ghz ChannelID 13 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:26:53.386" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:26:53.465" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-273.log</msg>
<status status="PASS" starttime="20210621 12:26:53.385" endtime="20210621 12:27:04.788"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:27:04.788" endtime="20210621 12:27:04.799"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:27:06.803" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:27:04.799" endtime="20210621 12:27:06.803"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:27:06.805" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:27:07.115" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:27:06.803" endtime="20210621 12:27:07.163"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:27:09.173" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:27:07.163" endtime="20210621 12:27:09.173"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:27:09.174" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:27:09.173" endtime="20210621 12:27:11.059"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:27:16.073" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:27:11.059" endtime="20210621 12:27:16.073"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:27:16.074" endtime="20210621 12:27:16.085"/>
</kw>
<status status="PASS" starttime="20210621 12:26:53.385" endtime="20210621 12:27:16.086"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>13</arg>
<arg>14</arg>
<arg>1</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:27:16.088" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:27:16.088" endtime="20210621 12:27:16.156"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:27:21.158" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:27:16.156" endtime="20210621 12:27:21.158"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:27:21.158" endtime="20210621 12:27:21.169"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:27:21.170" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:27:21.169" endtime="20210621 12:27:21.191"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:27:21.209" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:27:21.191" endtime="20210621 12:27:21.209"/>
</kw>
<status status="PASS" starttime="20210621 12:27:16.087" endtime="20210621 12:27:21.209"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:27:21.212" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:27:21.211" endtime="20210621 12:27:21.475"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:27:21.475" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[14]/a'.</msg>
<status status="PASS" starttime="20210621 12:27:21.475" endtime="20210621 12:27:21.700"/>
</kw>
<status status="PASS" starttime="20210621 12:27:21.210" endtime="20210621 12:27:21.700"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:27:21.702" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:27:21.701" endtime="20210621 12:27:21.940"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:27:21.942" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210621 12:27:21.941" endtime="20210621 12:27:22.180"/>
</kw>
<status status="PASS" starttime="20210621 12:27:21.700" endtime="20210621 12:27:22.181"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:27:22.183" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:27:22.182" endtime="20210621 12:27:22.466"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:27:22.589" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%2013%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%2013%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:27:22.467" endtime="20210621 12:27:22.589"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:27:37.600" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:27:22.590" endtime="20210621 12:27:37.601"/>
</kw>
<status status="PASS" starttime="20210621 12:27:22.181" endtime="20210621 12:27:37.601"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:27:37.602" endtime="20210621 12:27:37.610"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:27:37.611" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:27:37.610" endtime="20210621 12:27:38.150"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:27:40.165" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:27:38.151" endtime="20210621 12:27:40.165"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:27:40.165" endtime="20210621 12:27:41.984"/>
</kw>
<status status="PASS" starttime="20210621 12:27:37.601" endtime="20210621 12:27:41.984"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:27:41.985" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:27:41.985" endtime="20210621 12:27:41.987"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:27:42.449" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:48:49 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:27:41.988" endtime="20210621 12:27:42.449"/>
</kw>
<status status="PASS" starttime="20210621 12:27:41.984" endtime="20210621 12:27:42.449"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:27:42.554" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:27:42.554" level="INFO">ARC_WLAN_24G_Channel=13
#</msg>
<msg timestamp="20210621 12:27:42.555" level="INFO">${out} = ARC_WLAN_24G_Channel=13
#</msg>
<status status="PASS" starttime="20210621 12:27:42.451" endtime="20210621 12:27:42.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:27:42.556" level="INFO">ARC_WLAN_24G_Channel=13
#</msg>
<status status="PASS" starttime="20210621 12:27:42.555" endtime="20210621 12:27:42.556"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:27:42.557" level="INFO">${result} = ['13']</msg>
<status status="PASS" starttime="20210621 12:27:42.556" endtime="20210621 12:27:42.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:27:42.559" level="INFO">2.4Ghz Channel ID from console is 13</msg>
<status status="PASS" starttime="20210621 12:27:42.557" endtime="20210621 12:27:42.559"/>
</kw>
<msg timestamp="20210621 12:27:42.563" level="INFO">${2.4Ghz_ChannelID_Console} = 13</msg>
<status status="PASS" starttime="20210621 12:27:42.450" endtime="20210621 12:27:42.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:27:42.563" level="INFO">Channel ID from Console is 13</msg>
<status status="PASS" starttime="20210621 12:27:42.563" endtime="20210621 12:27:42.564"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:27:42.564" endtime="20210621 12:27:42.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:27:42.565" endtime="20210621 12:27:42.565"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:29:12.574" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:27:42.565" endtime="20210621 12:29:12.574"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:29:12.578" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:29:12.586" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:29:13.579" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:29:12.577" endtime="20210621 12:29:13.579"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:29:13.580" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:29:13.587" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:29:14.534" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:29:14.535" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:29:13.579" endtime="20210621 12:29:14.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:29:14.540" level="INFO">
  
&gt; SSID 6 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 13 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:29:14.536" endtime="20210621 12:29:14.540"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:29:14.543" level="INFO">${Analyser_ChannelID_5Ghz} = ['13', '40']</msg>
<status status="PASS" starttime="20210621 12:29:14.541" endtime="20210621 12:29:14.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:29:14.548" level="INFO">Analyser Channel IDs are 13 and 40</msg>
<status status="PASS" starttime="20210621 12:29:14.544" endtime="20210621 12:29:14.549"/>
</kw>
<msg timestamp="20210621 12:29:14.554" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['13', '40']</msg>
<status status="PASS" starttime="20210621 12:29:12.576" endtime="20210621 12:29:14.554"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:29:14.555" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:29:14.556" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:29:14.554" endtime="20210621 12:29:14.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:29:14.557" level="INFO">ChannelIDs are ['13', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:29:14.557" endtime="20210621 12:29:14.558"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:29:14.559" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:29:14.558" endtime="20210621 12:29:14.559"/>
</kw>
<status status="PASS" starttime="20210621 12:29:12.575" endtime="20210621 12:29:14.559"/>
</iter>
<status status="PASS" starttime="20210621 12:29:12.575" endtime="20210621 12:29:14.559"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:29:14.559" endtime="20210621 12:29:14.560"/>
</kw>
<status status="PASS" starttime="20210621 12:27:16.086" endtime="20210621 12:29:14.560"/>
</kw>
<status status="PASS" starttime="20210621 12:26:53.383" endtime="20210621 12:29:14.561"/>
</test>
<test id="s1-t14" name="Verify setting 2.4Ghz ChannelID 1 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:29:14.567" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:29:14.636" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-274.log</msg>
<status status="PASS" starttime="20210621 12:29:14.566" endtime="20210621 12:29:26.680"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:29:26.680" endtime="20210621 12:29:26.698"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:29:28.701" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:29:26.698" endtime="20210621 12:29:28.701"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:29:28.703" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:29:29.016" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:29:28.702" endtime="20210621 12:29:29.051"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:29:31.056" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:29:29.051" endtime="20210621 12:29:31.056"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:29:31.057" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:29:31.056" endtime="20210621 12:29:33.044"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:29:38.046" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:29:33.044" endtime="20210621 12:29:38.046"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:29:38.046" endtime="20210621 12:29:38.060"/>
</kw>
<status status="PASS" starttime="20210621 12:29:14.565" endtime="20210621 12:29:38.060"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>1</arg>
<arg>2</arg>
<arg>2</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:29:38.065" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:29:38.065" endtime="20210621 12:29:38.138"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:29:43.146" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:29:38.138" endtime="20210621 12:29:43.146"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:29:43.146" endtime="20210621 12:29:43.157"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:29:43.157" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:29:43.157" endtime="20210621 12:29:43.172"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:29:43.184" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:29:43.172" endtime="20210621 12:29:43.184"/>
</kw>
<status status="PASS" starttime="20210621 12:29:38.064" endtime="20210621 12:29:43.184"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:29:43.187" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:29:43.186" endtime="20210621 12:29:43.433"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:29:43.434" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:29:43.433" endtime="20210621 12:29:43.658"/>
</kw>
<status status="PASS" starttime="20210621 12:29:43.185" endtime="20210621 12:29:43.659"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:29:43.661" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:29:43.660" endtime="20210621 12:29:43.901"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:29:43.902" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:29:43.901" endtime="20210621 12:29:44.138"/>
</kw>
<status status="PASS" starttime="20210621 12:29:43.659" endtime="20210621 12:29:44.139"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:29:44.141" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:29:44.140" endtime="20210621 12:29:44.410"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:29:44.540" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%201%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%201%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:29:44.411" endtime="20210621 12:29:44.540"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:29:59.545" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:29:44.540" endtime="20210621 12:29:59.545"/>
</kw>
<status status="PASS" starttime="20210621 12:29:44.139" endtime="20210621 12:29:59.554"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:29:59.556" endtime="20210621 12:29:59.563"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:29:59.564" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:29:59.563" endtime="20210621 12:29:59.860"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:30:01.868" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:29:59.860" endtime="20210621 12:30:01.868"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:30:01.869" endtime="20210621 12:30:03.748"/>
</kw>
<status status="PASS" starttime="20210621 12:29:59.554" endtime="20210621 12:30:03.749"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:30:03.750" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:30:03.750" endtime="20210621 12:30:03.763"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:30:04.125" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:51:10 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:30:03.763" endtime="20210621 12:30:04.125"/>
</kw>
<status status="PASS" starttime="20210621 12:30:03.749" endtime="20210621 12:30:04.126"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:30:04.130" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:30:04.229" level="INFO">ARC_WLAN_24G_Channel=1
#</msg>
<msg timestamp="20210621 12:30:04.229" level="INFO">${out} = ARC_WLAN_24G_Channel=1
#</msg>
<status status="PASS" starttime="20210621 12:30:04.127" endtime="20210621 12:30:04.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:30:04.230" level="INFO">ARC_WLAN_24G_Channel=1
#</msg>
<status status="PASS" starttime="20210621 12:30:04.229" endtime="20210621 12:30:04.230"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:30:04.231" level="INFO">${result} = ['1']</msg>
<status status="PASS" starttime="20210621 12:30:04.230" endtime="20210621 12:30:04.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:30:04.234" level="INFO">2.4Ghz Channel ID from console is 1</msg>
<status status="PASS" starttime="20210621 12:30:04.231" endtime="20210621 12:30:04.234"/>
</kw>
<msg timestamp="20210621 12:30:04.237" level="INFO">${2.4Ghz_ChannelID_Console} = 1</msg>
<status status="PASS" starttime="20210621 12:30:04.126" endtime="20210621 12:30:04.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:30:04.239" level="INFO">Channel ID from Console is 1</msg>
<status status="PASS" starttime="20210621 12:30:04.238" endtime="20210621 12:30:04.239"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:30:04.239" endtime="20210621 12:30:04.240"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:30:04.240" endtime="20210621 12:30:04.241"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:31:34.249" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:30:04.241" endtime="20210621 12:31:34.249"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:31:34.252" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:31:34.257" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:31:35.193" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:31:34.251" endtime="20210621 12:31:35.194"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:31:35.196" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:31:35.208" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:31:36.153" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:31:36.154" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:31:35.194" endtime="20210621 12:31:36.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:31:36.157" level="INFO">
  
&gt; SSID 6 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 1 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210621 12:31:36.154" endtime="20210621 12:31:36.157"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:31:36.161" level="INFO">${Analyser_ChannelID_5Ghz} = ['40', '1']</msg>
<status status="PASS" starttime="20210621 12:31:36.158" endtime="20210621 12:31:36.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:31:36.167" level="INFO">Analyser Channel IDs are 40 and 1</msg>
<status status="PASS" starttime="20210621 12:31:36.162" endtime="20210621 12:31:36.167"/>
</kw>
<msg timestamp="20210621 12:31:36.173" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['40', '1']</msg>
<status status="PASS" starttime="20210621 12:31:34.250" endtime="20210621 12:31:36.173"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:31:36.174" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:31:36.175" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:31:36.173" endtime="20210621 12:31:36.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:31:36.176" level="INFO">ChannelIDs are ['40', '1'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:31:36.175" endtime="20210621 12:31:36.176"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:31:36.177" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:31:36.176" endtime="20210621 12:31:36.177"/>
</kw>
<status status="PASS" starttime="20210621 12:31:34.250" endtime="20210621 12:31:36.177"/>
</iter>
<status status="PASS" starttime="20210621 12:31:34.250" endtime="20210621 12:31:36.177"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:31:36.178" endtime="20210621 12:31:36.178"/>
</kw>
<status status="PASS" starttime="20210621 12:29:38.062" endtime="20210621 12:31:36.178"/>
</kw>
<status status="PASS" starttime="20210621 12:29:14.564" endtime="20210621 12:31:36.179"/>
</test>
<test id="s1-t15" name="Verify setting 2.4Ghz ChannelID 2 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:31:36.189" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:31:36.244" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-275.log</msg>
<status status="PASS" starttime="20210621 12:31:36.184" endtime="20210621 12:31:48.305"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:31:48.306" endtime="20210621 12:31:48.311"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:31:50.317" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:31:48.311" endtime="20210621 12:31:50.317"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:31:50.318" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:31:50.627" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:31:50.317" endtime="20210621 12:31:50.655"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:31:52.672" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:31:50.656" endtime="20210621 12:31:52.672"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:31:52.673" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:31:52.672" endtime="20210621 12:31:54.978"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:31:59.992" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:31:54.979" endtime="20210621 12:31:59.992"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:31:59.993" endtime="20210621 12:32:00.005"/>
</kw>
<status status="PASS" starttime="20210621 12:31:36.183" endtime="20210621 12:32:00.005"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>2</arg>
<arg>3</arg>
<arg>2</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:32:00.008" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:32:00.008" endtime="20210621 12:32:00.066"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:32:05.078" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:32:00.066" endtime="20210621 12:32:05.078"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:32:05.078" endtime="20210621 12:32:05.086"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:32:05.086" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:32:05.086" endtime="20210621 12:32:05.096"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:32:05.104" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:32:05.096" endtime="20210621 12:32:05.105"/>
</kw>
<status status="PASS" starttime="20210621 12:32:00.007" endtime="20210621 12:32:05.105"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:32:05.106" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:32:05.106" endtime="20210621 12:32:05.335"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:32:05.337" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210621 12:32:05.336" endtime="20210621 12:32:05.560"/>
</kw>
<status status="PASS" starttime="20210621 12:32:05.105" endtime="20210621 12:32:05.560"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:32:05.562" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:32:05.562" endtime="20210621 12:32:05.800"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:32:05.801" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:32:05.801" endtime="20210621 12:32:06.041"/>
</kw>
<status status="PASS" starttime="20210621 12:32:05.561" endtime="20210621 12:32:06.041"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:32:06.043" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:32:06.042" endtime="20210621 12:32:06.327"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:32:06.431" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%202%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%202%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:32:06.328" endtime="20210621 12:32:06.431"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:32:21.444" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:32:06.432" endtime="20210621 12:32:21.444"/>
</kw>
<status status="PASS" starttime="20210621 12:32:06.042" endtime="20210621 12:32:21.445"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:32:21.446" endtime="20210621 12:32:21.454"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:32:21.455" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:32:21.455" endtime="20210621 12:32:21.701"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:32:23.709" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:32:21.702" endtime="20210621 12:32:23.709"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:32:23.709" endtime="20210621 12:32:25.648"/>
</kw>
<status status="PASS" starttime="20210621 12:32:21.445" endtime="20210621 12:32:25.649"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:32:25.650" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:32:25.650" endtime="20210621 12:32:25.652"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:32:25.933" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:53:32 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:32:25.652" endtime="20210621 12:32:25.934"/>
</kw>
<status status="PASS" starttime="20210621 12:32:25.649" endtime="20210621 12:32:25.934"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:32:25.938" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:32:26.128" level="INFO">ARC_WLAN_24G_Channel=2
#</msg>
<msg timestamp="20210621 12:32:26.128" level="INFO">${out} = ARC_WLAN_24G_Channel=2
#</msg>
<status status="PASS" starttime="20210621 12:32:25.935" endtime="20210621 12:32:26.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:32:26.129" level="INFO">ARC_WLAN_24G_Channel=2
#</msg>
<status status="PASS" starttime="20210621 12:32:26.129" endtime="20210621 12:32:26.129"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:32:26.130" level="INFO">${result} = ['2']</msg>
<status status="PASS" starttime="20210621 12:32:26.129" endtime="20210621 12:32:26.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:32:26.131" level="INFO">2.4Ghz Channel ID from console is 2</msg>
<status status="PASS" starttime="20210621 12:32:26.130" endtime="20210621 12:32:26.131"/>
</kw>
<msg timestamp="20210621 12:32:26.133" level="INFO">${2.4Ghz_ChannelID_Console} = 2</msg>
<status status="PASS" starttime="20210621 12:32:25.935" endtime="20210621 12:32:26.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:32:26.134" level="INFO">Channel ID from Console is 2</msg>
<status status="PASS" starttime="20210621 12:32:26.133" endtime="20210621 12:32:26.134"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:32:26.134" endtime="20210621 12:32:26.134"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:32:26.135" endtime="20210621 12:32:26.135"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:33:56.147" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:32:26.135" endtime="20210621 12:33:56.147"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:33:56.152" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:33:56.163" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:33:57.238" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:33:56.150" endtime="20210621 12:33:57.241"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:33:57.243" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:33:57.250" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:33:58.530" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:33:58.531" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:33:57.241" endtime="20210621 12:33:58.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:33:58.538" level="INFO">
  
&gt; SSID 1 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 2 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210621 12:33:58.531" endtime="20210621 12:33:58.539"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:33:58.545" level="INFO">${Analyser_ChannelID_5Ghz} = ['40', '2']</msg>
<status status="PASS" starttime="20210621 12:33:58.539" endtime="20210621 12:33:58.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:33:58.557" level="INFO">Analyser Channel IDs are 40 and 2</msg>
<status status="PASS" starttime="20210621 12:33:58.546" endtime="20210621 12:33:58.557"/>
</kw>
<msg timestamp="20210621 12:33:58.565" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['40', '2']</msg>
<status status="PASS" starttime="20210621 12:33:56.149" endtime="20210621 12:33:58.566"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:33:58.568" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:33:58.570" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:33:58.566" endtime="20210621 12:33:58.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:33:58.573" level="INFO">ChannelIDs are ['40', '2'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:33:58.570" endtime="20210621 12:33:58.573"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:33:58.576" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:33:58.573" endtime="20210621 12:33:58.576"/>
</kw>
<status status="PASS" starttime="20210621 12:33:56.148" endtime="20210621 12:33:58.581"/>
</iter>
<status status="PASS" starttime="20210621 12:33:56.148" endtime="20210621 12:33:58.581"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:33:58.582" endtime="20210621 12:33:58.583"/>
</kw>
<status status="PASS" starttime="20210621 12:32:00.006" endtime="20210621 12:33:58.584"/>
</kw>
<status status="PASS" starttime="20210621 12:31:36.182" endtime="20210621 12:33:58.585"/>
</test>
<test id="s1-t16" name="Verify setting 2.4Ghz ChannelID 3 with Bandwith 20/40 MHz ">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:33:58.595" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:33:58.676" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-276.log</msg>
<status status="PASS" starttime="20210621 12:33:58.593" endtime="20210621 12:34:11.201"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:34:11.201" endtime="20210621 12:34:11.245"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:34:13.250" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:34:11.245" endtime="20210621 12:34:13.250"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:34:13.252" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:34:13.562" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:34:13.251" endtime="20210621 12:34:13.599"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:34:15.605" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:34:13.599" endtime="20210621 12:34:15.605"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:34:15.606" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:34:15.606" endtime="20210621 12:34:17.519"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:34:22.527" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:34:17.520" endtime="20210621 12:34:22.527"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:34:22.528" endtime="20210621 12:34:22.555"/>
</kw>
<status status="PASS" starttime="20210621 12:33:58.592" endtime="20210621 12:34:22.555"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>3</arg>
<arg>4</arg>
<arg>2</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:34:22.559" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:34:22.558" endtime="20210621 12:34:22.627"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:34:27.644" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:34:22.628" endtime="20210621 12:34:27.644"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:34:27.644" endtime="20210621 12:34:27.659"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:34:27.660" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:34:27.659" endtime="20210621 12:34:27.673"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:34:27.686" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:34:27.673" endtime="20210621 12:34:27.686"/>
</kw>
<status status="PASS" starttime="20210621 12:34:22.558" endtime="20210621 12:34:27.686"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:34:27.689" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:34:27.688" endtime="20210621 12:34:27.996"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:34:27.997" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[4]/a'.</msg>
<status status="PASS" starttime="20210621 12:34:27.996" endtime="20210621 12:34:28.248"/>
</kw>
<status status="PASS" starttime="20210621 12:34:27.687" endtime="20210621 12:34:28.249"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:34:28.251" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:34:28.250" endtime="20210621 12:34:28.489"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:34:28.490" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:34:28.489" endtime="20210621 12:34:28.751"/>
</kw>
<status status="PASS" starttime="20210621 12:34:28.249" endtime="20210621 12:34:28.751"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:34:28.754" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:34:28.753" endtime="20210621 12:34:29.047"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:34:29.179" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%203%20with%20Bandwith%2020/40%20MHz%20.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%203%20with%20Bandwith%2020/40%20MHz%20.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:34:29.047" endtime="20210621 12:34:29.179"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:34:44.203" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:34:29.180" endtime="20210621 12:34:44.203"/>
</kw>
<status status="PASS" starttime="20210621 12:34:28.752" endtime="20210621 12:34:44.219"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:34:44.221" endtime="20210621 12:34:44.241"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:34:44.243" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:34:44.241" endtime="20210621 12:34:44.608"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:34:46.623" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:34:44.609" endtime="20210621 12:34:46.623"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:34:46.624" endtime="20210621 12:34:49.599"/>
</kw>
<status status="PASS" starttime="20210621 12:34:44.220" endtime="20210621 12:34:49.600"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:34:49.602" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:34:49.601" endtime="20210621 12:34:49.603"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:34:49.969" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:55:56 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:34:49.604" endtime="20210621 12:34:49.969"/>
</kw>
<status status="PASS" starttime="20210621 12:34:49.600" endtime="20210621 12:34:49.970"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:34:50.078" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:34:50.079" level="INFO">ARC_WLAN_24G_Channel=3
#</msg>
<msg timestamp="20210621 12:34:50.079" level="INFO">${out} = ARC_WLAN_24G_Channel=3
#</msg>
<status status="PASS" starttime="20210621 12:34:49.973" endtime="20210621 12:34:50.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:34:50.080" level="INFO">ARC_WLAN_24G_Channel=3
#</msg>
<status status="PASS" starttime="20210621 12:34:50.079" endtime="20210621 12:34:50.080"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:34:50.081" level="INFO">${result} = ['3']</msg>
<status status="PASS" starttime="20210621 12:34:50.081" endtime="20210621 12:34:50.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:34:50.085" level="INFO">2.4Ghz Channel ID from console is 3</msg>
<status status="PASS" starttime="20210621 12:34:50.082" endtime="20210621 12:34:50.085"/>
</kw>
<msg timestamp="20210621 12:34:50.089" level="INFO">${2.4Ghz_ChannelID_Console} = 3</msg>
<status status="PASS" starttime="20210621 12:34:49.970" endtime="20210621 12:34:50.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:34:50.090" level="INFO">Channel ID from Console is 3</msg>
<status status="PASS" starttime="20210621 12:34:50.090" endtime="20210621 12:34:50.090"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:34:50.091" endtime="20210621 12:34:50.091"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:34:50.091" endtime="20210621 12:34:50.092"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:36:20.107" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:34:50.092" endtime="20210621 12:36:20.107"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:36:20.109" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:36:20.132" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:36:21.339" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:36:20.109" endtime="20210621 12:36:21.339"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:36:21.340" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:36:21.343" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:36:21.956" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:36:21.957" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:36:21.340" endtime="20210621 12:36:21.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:36:21.958" level="INFO">
  
&gt; SSID 3 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 3 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:36:21.957" endtime="20210621 12:36:21.958"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:36:21.960" level="INFO">${Analyser_ChannelID_5Ghz} = ['3', '40']</msg>
<status status="PASS" starttime="20210621 12:36:21.959" endtime="20210621 12:36:21.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:36:21.962" level="INFO">Analyser Channel IDs are 3 and 40</msg>
<status status="PASS" starttime="20210621 12:36:21.960" endtime="20210621 12:36:21.962"/>
</kw>
<msg timestamp="20210621 12:36:21.965" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['3', '40']</msg>
<status status="PASS" starttime="20210621 12:36:20.108" endtime="20210621 12:36:21.965"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:36:21.965" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:36:21.966" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:36:21.965" endtime="20210621 12:36:21.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:36:21.966" level="INFO">ChannelIDs are ['3', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:36:21.966" endtime="20210621 12:36:21.966"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:36:21.967" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:36:21.966" endtime="20210621 12:36:21.967"/>
</kw>
<status status="PASS" starttime="20210621 12:36:20.108" endtime="20210621 12:36:21.967"/>
</iter>
<status status="PASS" starttime="20210621 12:36:20.108" endtime="20210621 12:36:21.967"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:36:21.967" endtime="20210621 12:36:21.967"/>
</kw>
<status status="PASS" starttime="20210621 12:34:22.556" endtime="20210621 12:36:21.968"/>
</kw>
<status status="PASS" starttime="20210621 12:33:58.588" endtime="20210621 12:36:21.969"/>
</test>
<test id="s1-t17" name="Verify setting 2.4Ghz ChannelID 4 with Bandwith 20/40 MHz ">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:36:21.973" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:36:22.016" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-277.log</msg>
<status status="PASS" starttime="20210621 12:36:21.973" endtime="20210621 12:36:38.416"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:36:38.417" endtime="20210621 12:36:38.424"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:36:40.432" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:36:38.424" endtime="20210621 12:36:40.432"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:36:40.433" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:36:40.823" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:36:40.432" endtime="20210621 12:36:40.884"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:36:42.892" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:36:40.884" endtime="20210621 12:36:42.892"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:36:42.893" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:36:42.892" endtime="20210621 12:36:44.911"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:36:49.914" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:36:44.911" endtime="20210621 12:36:49.914"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:36:49.915" endtime="20210621 12:36:49.950"/>
</kw>
<status status="PASS" starttime="20210621 12:36:21.972" endtime="20210621 12:36:49.951"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>4</arg>
<arg>5</arg>
<arg>2</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:36:49.978" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:36:49.977" endtime="20210621 12:36:50.039"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:36:55.044" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:36:50.040" endtime="20210621 12:36:55.044"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:36:55.045" endtime="20210621 12:36:55.054"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:36:55.055" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:36:55.055" endtime="20210621 12:36:55.082"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:36:55.092" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:36:55.082" endtime="20210621 12:36:55.092"/>
</kw>
<status status="PASS" starttime="20210621 12:36:49.976" endtime="20210621 12:36:55.093"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:36:55.094" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:36:55.094" endtime="20210621 12:36:55.331"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:36:55.332" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[5]/a'.</msg>
<status status="PASS" starttime="20210621 12:36:55.331" endtime="20210621 12:36:55.572"/>
</kw>
<status status="PASS" starttime="20210621 12:36:55.093" endtime="20210621 12:36:55.573"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:36:55.575" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:36:55.575" endtime="20210621 12:36:55.816"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:36:55.818" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:36:55.817" endtime="20210621 12:36:56.052"/>
</kw>
<status status="PASS" starttime="20210621 12:36:55.573" endtime="20210621 12:36:56.053"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:36:56.057" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:36:56.056" endtime="20210621 12:36:56.368"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:36:56.559" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%204%20with%20Bandwith%2020/40%20MHz%20.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%204%20with%20Bandwith%2020/40%20MHz%20.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:36:56.368" endtime="20210621 12:36:56.559"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:37:11.567" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:36:56.560" endtime="20210621 12:37:11.567"/>
</kw>
<status status="PASS" starttime="20210621 12:36:56.054" endtime="20210621 12:37:11.568"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:37:11.568" endtime="20210621 12:37:11.577"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:37:11.578" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:37:11.577" endtime="20210621 12:37:11.846"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:37:13.851" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:37:11.847" endtime="20210621 12:37:13.852"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:37:13.852" endtime="20210621 12:37:16.231"/>
</kw>
<status status="PASS" starttime="20210621 12:37:11.568" endtime="20210621 12:37:16.232"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:37:16.235" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:37:16.234" endtime="20210621 12:37:16.236"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:37:16.371" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 02:58:23 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:37:16.237" endtime="20210621 12:37:16.371"/>
</kw>
<status status="PASS" starttime="20210621 12:37:16.233" endtime="20210621 12:37:16.372"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:37:16.417" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:37:16.463" level="INFO">ARC_WLAN_24G_Channel=4
#</msg>
<msg timestamp="20210621 12:37:16.463" level="INFO">${out} = ARC_WLAN_24G_Channel=4
#</msg>
<status status="PASS" starttime="20210621 12:37:16.372" endtime="20210621 12:37:16.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:37:16.464" level="INFO">ARC_WLAN_24G_Channel=4
#</msg>
<status status="PASS" starttime="20210621 12:37:16.464" endtime="20210621 12:37:16.465"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:37:16.466" level="INFO">${result} = ['4']</msg>
<status status="PASS" starttime="20210621 12:37:16.465" endtime="20210621 12:37:16.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:37:16.469" level="INFO">2.4Ghz Channel ID from console is 4</msg>
<status status="PASS" starttime="20210621 12:37:16.466" endtime="20210621 12:37:16.469"/>
</kw>
<msg timestamp="20210621 12:37:16.472" level="INFO">${2.4Ghz_ChannelID_Console} = 4</msg>
<status status="PASS" starttime="20210621 12:37:16.372" endtime="20210621 12:37:16.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:37:16.473" level="INFO">Channel ID from Console is 4</msg>
<status status="PASS" starttime="20210621 12:37:16.473" endtime="20210621 12:37:16.474"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:37:16.474" endtime="20210621 12:37:16.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:37:16.475" endtime="20210621 12:37:16.476"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:38:46.492" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:37:16.476" endtime="20210621 12:38:46.493"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:38:46.502" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:38:46.544" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:38:48.415" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:38:46.496" endtime="20210621 12:38:48.415"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:38:48.416" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:38:48.419" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:38:49.428" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:38:49.429" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:38:48.416" endtime="20210621 12:38:49.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:38:49.432" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:38:49.429" endtime="20210621 12:38:49.432"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:38:49.437" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '40']</msg>
<status status="PASS" starttime="20210621 12:38:49.432" endtime="20210621 12:38:49.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:38:49.441" level="INFO">Analyser Channel IDs are 4 and 40</msg>
<status status="PASS" starttime="20210621 12:38:49.437" endtime="20210621 12:38:49.441"/>
</kw>
<msg timestamp="20210621 12:38:49.447" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['4', '40']</msg>
<status status="PASS" starttime="20210621 12:38:46.495" endtime="20210621 12:38:49.447"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:38:49.448" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:38:49.449" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:38:49.447" endtime="20210621 12:38:49.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:38:49.450" level="INFO">ChannelIDs are ['4', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:38:49.449" endtime="20210621 12:38:49.450"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:38:49.451" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:38:49.450" endtime="20210621 12:38:49.451"/>
</kw>
<status status="PASS" starttime="20210621 12:38:46.494" endtime="20210621 12:38:49.451"/>
</iter>
<status status="PASS" starttime="20210621 12:38:46.493" endtime="20210621 12:38:49.451"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:38:49.452" endtime="20210621 12:38:49.452"/>
</kw>
<status status="PASS" starttime="20210621 12:36:49.976" endtime="20210621 12:38:49.452"/>
</kw>
<status status="PASS" starttime="20210621 12:36:21.971" endtime="20210621 12:38:49.453"/>
</test>
<test id="s1-t18" name="Verify setting 2.4Ghz ChannelID 5 with Bandwith 20/40 MHz ">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:38:49.469" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:38:49.514" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-278.log</msg>
<status status="PASS" starttime="20210621 12:38:49.469" endtime="20210621 12:39:00.700"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:39:00.701" endtime="20210621 12:39:00.718"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:39:02.733" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:39:00.718" endtime="20210621 12:39:02.733"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:39:02.734" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:39:03.041" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:39:02.733" endtime="20210621 12:39:03.062"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:39:05.072" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:39:03.062" endtime="20210621 12:39:05.072"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:39:05.073" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:39:05.073" endtime="20210621 12:39:06.899"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:39:11.903" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:39:06.900" endtime="20210621 12:39:11.903"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:39:11.903" endtime="20210621 12:39:11.911"/>
</kw>
<status status="PASS" starttime="20210621 12:38:49.467" endtime="20210621 12:39:11.911"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>5</arg>
<arg>6</arg>
<arg>2</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:39:11.913" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:39:11.913" endtime="20210621 12:39:11.960"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:39:16.965" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:39:11.961" endtime="20210621 12:39:16.965"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:39:16.965" endtime="20210621 12:39:16.972"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:39:16.972" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:39:16.972" endtime="20210621 12:39:16.980"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:39:16.987" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:39:16.981" endtime="20210621 12:39:16.987"/>
</kw>
<status status="PASS" starttime="20210621 12:39:11.913" endtime="20210621 12:39:16.987"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:39:16.988" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:39:16.988" endtime="20210621 12:39:17.210"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:39:17.211" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[6]/a'.</msg>
<status status="PASS" starttime="20210621 12:39:17.210" endtime="20210621 12:39:17.437"/>
</kw>
<status status="PASS" starttime="20210621 12:39:16.987" endtime="20210621 12:39:17.437"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:39:17.438" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:39:17.438" endtime="20210621 12:39:17.664"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:39:17.664" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:39:17.664" endtime="20210621 12:39:17.891"/>
</kw>
<status status="PASS" starttime="20210621 12:39:17.437" endtime="20210621 12:39:17.891"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:39:17.892" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:39:17.892" endtime="20210621 12:39:18.148"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:39:18.251" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%205%20with%20Bandwith%2020/40%20MHz%20.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%205%20with%20Bandwith%2020/40%20MHz%20.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:39:18.149" endtime="20210621 12:39:18.251"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:39:33.253" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:39:18.251" endtime="20210621 12:39:33.253"/>
</kw>
<status status="PASS" starttime="20210621 12:39:17.891" endtime="20210621 12:39:33.253"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:39:33.254" endtime="20210621 12:39:33.258"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:39:33.259" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:39:33.258" endtime="20210621 12:39:33.496"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:39:35.502" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:39:33.497" endtime="20210621 12:39:35.502"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:39:35.502" endtime="20210621 12:39:36.792"/>
</kw>
<status status="PASS" starttime="20210621 12:39:33.254" endtime="20210621 12:39:36.793"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:39:36.794" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:39:36.793" endtime="20210621 12:39:36.795"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:39:36.936" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 03:00:43 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:39:36.795" endtime="20210621 12:39:36.936"/>
</kw>
<status status="PASS" starttime="20210621 12:39:36.793" endtime="20210621 12:39:36.937"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:39:36.940" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:39:37.042" level="INFO">ARC_WLAN_24G_Channel=5
#</msg>
<msg timestamp="20210621 12:39:37.043" level="INFO">${out} = ARC_WLAN_24G_Channel=5
#</msg>
<status status="PASS" starttime="20210621 12:39:36.938" endtime="20210621 12:39:37.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:39:37.043" level="INFO">ARC_WLAN_24G_Channel=5
#</msg>
<status status="PASS" starttime="20210621 12:39:37.043" endtime="20210621 12:39:37.043"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:39:37.044" level="INFO">${result} = ['5']</msg>
<status status="PASS" starttime="20210621 12:39:37.043" endtime="20210621 12:39:37.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:39:37.045" level="INFO">2.4Ghz Channel ID from console is 5</msg>
<status status="PASS" starttime="20210621 12:39:37.044" endtime="20210621 12:39:37.045"/>
</kw>
<msg timestamp="20210621 12:39:37.046" level="INFO">${2.4Ghz_ChannelID_Console} = 5</msg>
<status status="PASS" starttime="20210621 12:39:36.937" endtime="20210621 12:39:37.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:39:37.047" level="INFO">Channel ID from Console is 5</msg>
<status status="PASS" starttime="20210621 12:39:37.047" endtime="20210621 12:39:37.047"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:39:37.047" endtime="20210621 12:39:37.047"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:39:37.048" endtime="20210621 12:39:37.049"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:41:07.061" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:39:37.050" endtime="20210621 12:41:07.061"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:41:07.062" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:41:07.066" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:41:07.675" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:41:07.062" endtime="20210621 12:41:07.675"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:41:07.676" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:41:07.680" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:41:08.238" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:41:08.238" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:41:07.676" endtime="20210621 12:41:08.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:41:08.240" level="INFO">
  
&gt; SSID 3 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 5 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:41:08.239" endtime="20210621 12:41:08.240"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:41:08.241" level="INFO">${Analyser_ChannelID_5Ghz} = ['5', '40']</msg>
<status status="PASS" starttime="20210621 12:41:08.240" endtime="20210621 12:41:08.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:41:08.243" level="INFO">Analyser Channel IDs are 5 and 40</msg>
<status status="PASS" starttime="20210621 12:41:08.241" endtime="20210621 12:41:08.243"/>
</kw>
<msg timestamp="20210621 12:41:08.246" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['5', '40']</msg>
<status status="PASS" starttime="20210621 12:41:07.062" endtime="20210621 12:41:08.246"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:41:08.246" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:41:08.247" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:41:08.246" endtime="20210621 12:41:08.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:41:08.248" level="INFO">ChannelIDs are ['5', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:41:08.248" endtime="20210621 12:41:08.248"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:41:08.249" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:41:08.249" endtime="20210621 12:41:08.250"/>
</kw>
<status status="PASS" starttime="20210621 12:41:07.062" endtime="20210621 12:41:08.250"/>
</iter>
<status status="PASS" starttime="20210621 12:41:07.061" endtime="20210621 12:41:08.250"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:41:08.250" endtime="20210621 12:41:08.251"/>
</kw>
<status status="PASS" starttime="20210621 12:39:11.912" endtime="20210621 12:41:08.251"/>
</kw>
<status status="PASS" starttime="20210621 12:38:49.462" endtime="20210621 12:41:08.252"/>
</test>
<test id="s1-t19" name="Verify setting 2.4Ghz ChannelID 6 with Bandwith 20/40 MHz ">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:41:08.256" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:41:08.297" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-279.log</msg>
<status status="PASS" starttime="20210621 12:41:08.256" endtime="20210621 12:41:18.552"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:41:18.552" endtime="20210621 12:41:18.565"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:41:20.579" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:41:18.566" endtime="20210621 12:41:20.579"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:41:20.580" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:41:20.876" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:41:20.579" endtime="20210621 12:41:20.894"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:41:22.901" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:41:20.895" endtime="20210621 12:41:22.901"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:41:22.901" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:41:22.901" endtime="20210621 12:41:24.682"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:41:29.689" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:41:24.682" endtime="20210621 12:41:29.689"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:41:29.689" endtime="20210621 12:41:29.697"/>
</kw>
<status status="PASS" starttime="20210621 12:41:08.256" endtime="20210621 12:41:29.697"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>6</arg>
<arg>7</arg>
<arg>2</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:41:29.699" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:41:29.699" endtime="20210621 12:41:29.760"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:41:34.762" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:41:29.760" endtime="20210621 12:41:34.762"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:41:34.763" endtime="20210621 12:41:34.769"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:41:34.769" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:41:34.769" endtime="20210621 12:41:34.776"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:41:34.783" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:41:34.777" endtime="20210621 12:41:34.783"/>
</kw>
<status status="PASS" starttime="20210621 12:41:29.699" endtime="20210621 12:41:34.784"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:41:34.785" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:41:34.784" endtime="20210621 12:41:35.006"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:41:35.007" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[7]/a'.</msg>
<status status="PASS" starttime="20210621 12:41:35.006" endtime="20210621 12:41:35.232"/>
</kw>
<status status="PASS" starttime="20210621 12:41:34.784" endtime="20210621 12:41:35.232"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:41:35.236" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:41:35.236" endtime="20210621 12:41:35.459"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:41:35.460" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:41:35.460" endtime="20210621 12:41:35.687"/>
</kw>
<status status="PASS" starttime="20210621 12:41:35.232" endtime="20210621 12:41:35.687"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:41:35.688" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:41:35.687" endtime="20210621 12:41:35.933"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:41:36.003" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%206%20with%20Bandwith%2020/40%20MHz%20.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%206%20with%20Bandwith%2020/40%20MHz%20.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:41:35.934" endtime="20210621 12:41:36.003"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:41:51.019" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:41:36.003" endtime="20210621 12:41:51.019"/>
</kw>
<status status="PASS" starttime="20210621 12:41:35.687" endtime="20210621 12:41:51.019"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:41:51.020" endtime="20210621 12:41:51.023"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:41:51.024" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:41:51.024" endtime="20210621 12:41:51.265"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:41:53.276" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:41:51.265" endtime="20210621 12:41:53.276"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:41:53.276" endtime="20210621 12:41:54.475"/>
</kw>
<status status="PASS" starttime="20210621 12:41:51.019" endtime="20210621 12:41:54.476"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:41:54.477" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:41:54.476" endtime="20210621 12:41:54.478"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:41:54.617" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 03:03:01 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:41:54.478" endtime="20210621 12:41:54.617"/>
</kw>
<status status="PASS" starttime="20210621 12:41:54.476" endtime="20210621 12:41:54.618"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:41:54.621" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:41:54.723" level="INFO">ARC_WLAN_24G_Channel=6
#</msg>
<msg timestamp="20210621 12:41:54.723" level="INFO">${out} = ARC_WLAN_24G_Channel=6
#</msg>
<status status="PASS" starttime="20210621 12:41:54.618" endtime="20210621 12:41:54.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:41:54.724" level="INFO">ARC_WLAN_24G_Channel=6
#</msg>
<status status="PASS" starttime="20210621 12:41:54.724" endtime="20210621 12:41:54.724"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:41:54.725" level="INFO">${result} = ['6']</msg>
<status status="PASS" starttime="20210621 12:41:54.724" endtime="20210621 12:41:54.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:41:54.726" level="INFO">2.4Ghz Channel ID from console is 6</msg>
<status status="PASS" starttime="20210621 12:41:54.725" endtime="20210621 12:41:54.726"/>
</kw>
<msg timestamp="20210621 12:41:54.727" level="INFO">${2.4Ghz_ChannelID_Console} = 6</msg>
<status status="PASS" starttime="20210621 12:41:54.618" endtime="20210621 12:41:54.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:41:54.728" level="INFO">Channel ID from Console is 6</msg>
<status status="PASS" starttime="20210621 12:41:54.727" endtime="20210621 12:41:54.728"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:41:54.728" endtime="20210621 12:41:54.728"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:41:54.728" endtime="20210621 12:41:54.729"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:43:24.734" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:41:54.729" endtime="20210621 12:43:24.735"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:43:24.737" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:43:24.741" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:43:25.313" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:43:24.736" endtime="20210621 12:43:25.313"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:43:25.314" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:43:25.317" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:43:25.855" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:43:25.855" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:43:25.313" endtime="20210621 12:43:25.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:43:25.856" level="INFO">
  
&gt; SSID 5 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 6 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:43:25.855" endtime="20210621 12:43:25.856"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:43:25.858" level="INFO">${Analyser_ChannelID_5Ghz} = ['6', '40']</msg>
<status status="PASS" starttime="20210621 12:43:25.857" endtime="20210621 12:43:25.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:43:25.860" level="INFO">Analyser Channel IDs are 6 and 40</msg>
<status status="PASS" starttime="20210621 12:43:25.858" endtime="20210621 12:43:25.860"/>
</kw>
<msg timestamp="20210621 12:43:25.863" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['6', '40']</msg>
<status status="PASS" starttime="20210621 12:43:24.736" endtime="20210621 12:43:25.863"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:43:25.863" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:43:25.864" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:43:25.863" endtime="20210621 12:43:25.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:43:25.864" level="INFO">ChannelIDs are ['6', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:43:25.864" endtime="20210621 12:43:25.864"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:43:25.865" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:43:25.864" endtime="20210621 12:43:25.865"/>
</kw>
<status status="PASS" starttime="20210621 12:43:24.735" endtime="20210621 12:43:25.865"/>
</iter>
<status status="PASS" starttime="20210621 12:43:24.735" endtime="20210621 12:43:25.865"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:43:25.865" endtime="20210621 12:43:25.866"/>
</kw>
<status status="PASS" starttime="20210621 12:41:29.698" endtime="20210621 12:43:25.866"/>
</kw>
<status status="PASS" starttime="20210621 12:41:08.254" endtime="20210621 12:43:25.866"/>
</test>
<test id="s1-t20" name="Verify setting 2.4Ghz ChannelID 7 with Bandwith 20/40 MHz ">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:43:25.870" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:43:25.903" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-280.log</msg>
<status status="PASS" starttime="20210621 12:43:25.870" endtime="20210621 12:43:35.749"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:43:35.749" endtime="20210621 12:43:35.766"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:43:37.778" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:43:35.766" endtime="20210621 12:43:37.778"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:43:37.780" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:43:38.073" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:43:37.779" endtime="20210621 12:43:38.091"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:43:40.092" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:43:38.092" endtime="20210621 12:43:40.092"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:43:40.093" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:43:40.092" endtime="20210621 12:43:42.746"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:43:47.748" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:43:42.746" endtime="20210621 12:43:47.748"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:43:47.748" endtime="20210621 12:43:47.756"/>
</kw>
<status status="PASS" starttime="20210621 12:43:25.869" endtime="20210621 12:43:47.756"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>7</arg>
<arg>8</arg>
<arg>2</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:43:47.758" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:43:47.758" endtime="20210621 12:43:47.804"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:43:52.815" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:43:47.804" endtime="20210621 12:43:52.815"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:43:52.816" endtime="20210621 12:43:52.823"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:43:52.823" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:43:52.823" endtime="20210621 12:43:52.832"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:43:52.839" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:43:52.833" endtime="20210621 12:43:52.839"/>
</kw>
<status status="PASS" starttime="20210621 12:43:47.758" endtime="20210621 12:43:52.840"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:43:52.840" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:43:52.840" endtime="20210621 12:43:53.074"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:43:53.075" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[8]/a'.</msg>
<status status="PASS" starttime="20210621 12:43:53.075" endtime="20210621 12:43:53.314"/>
</kw>
<status status="PASS" starttime="20210621 12:43:52.840" endtime="20210621 12:43:53.315"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:43:53.317" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:43:53.316" endtime="20210621 12:43:53.553"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:43:53.554" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:43:53.554" endtime="20210621 12:43:53.779"/>
</kw>
<status status="PASS" starttime="20210621 12:43:53.315" endtime="20210621 12:43:53.779"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:43:53.780" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:43:53.780" endtime="20210621 12:43:54.039"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:43:54.126" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%207%20with%20Bandwith%2020/40%20MHz%20.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%207%20with%20Bandwith%2020/40%20MHz%20.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:43:54.039" endtime="20210621 12:43:54.126"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:44:09.150" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:43:54.127" endtime="20210621 12:44:09.150"/>
</kw>
<status status="PASS" starttime="20210621 12:43:53.779" endtime="20210621 12:44:09.151"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:44:09.152" endtime="20210621 12:44:09.158"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:44:09.159" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:44:09.159" endtime="20210621 12:44:09.438"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:44:11.442" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:44:09.439" endtime="20210621 12:44:11.442"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:44:11.442" endtime="20210621 12:44:12.845"/>
</kw>
<status status="PASS" starttime="20210621 12:44:09.151" endtime="20210621 12:44:12.846"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:44:12.849" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:44:12.848" endtime="20210621 12:44:12.850"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:44:12.993" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 03:05:19 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:44:12.850" endtime="20210621 12:44:12.994"/>
</kw>
<status status="PASS" starttime="20210621 12:44:12.847" endtime="20210621 12:44:12.994"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:44:12.997" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:44:13.113" level="INFO">ARC_WLAN_24G_Channel=7
#</msg>
<msg timestamp="20210621 12:44:13.113" level="INFO">${out} = ARC_WLAN_24G_Channel=7
#</msg>
<status status="PASS" starttime="20210621 12:44:12.995" endtime="20210621 12:44:13.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:44:13.114" level="INFO">ARC_WLAN_24G_Channel=7
#</msg>
<status status="PASS" starttime="20210621 12:44:13.114" endtime="20210621 12:44:13.114"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:44:13.114" level="INFO">${result} = ['7']</msg>
<status status="PASS" starttime="20210621 12:44:13.114" endtime="20210621 12:44:13.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:44:13.116" level="INFO">2.4Ghz Channel ID from console is 7</msg>
<status status="PASS" starttime="20210621 12:44:13.115" endtime="20210621 12:44:13.116"/>
</kw>
<msg timestamp="20210621 12:44:13.117" level="INFO">${2.4Ghz_ChannelID_Console} = 7</msg>
<status status="PASS" starttime="20210621 12:44:12.994" endtime="20210621 12:44:13.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:44:13.117" level="INFO">Channel ID from Console is 7</msg>
<status status="PASS" starttime="20210621 12:44:13.117" endtime="20210621 12:44:13.117"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:44:13.117" endtime="20210621 12:44:13.118"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:44:13.118" endtime="20210621 12:44:13.118"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:45:43.129" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:44:13.118" endtime="20210621 12:45:43.129"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:45:43.130" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:45:43.137" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:45:43.735" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:45:43.129" endtime="20210621 12:45:43.735"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:45:43.736" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:45:43.740" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:45:44.297" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:45:44.297" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:45:43.736" endtime="20210621 12:45:44.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:45:44.299" level="INFO">
  
&gt; SSID 7 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 7 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210621 12:45:44.298" endtime="20210621 12:45:44.299"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:45:44.300" level="INFO">${Analyser_ChannelID_5Ghz} = ['40', '7']</msg>
<status status="PASS" starttime="20210621 12:45:44.299" endtime="20210621 12:45:44.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:45:44.302" level="INFO">Analyser Channel IDs are 40 and 7</msg>
<status status="PASS" starttime="20210621 12:45:44.300" endtime="20210621 12:45:44.302"/>
</kw>
<msg timestamp="20210621 12:45:44.305" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['40', '7']</msg>
<status status="PASS" starttime="20210621 12:45:43.129" endtime="20210621 12:45:44.305"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:45:44.305" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:45:44.306" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:45:44.305" endtime="20210621 12:45:44.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:45:44.306" level="INFO">ChannelIDs are ['40', '7'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:45:44.306" endtime="20210621 12:45:44.306"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:45:44.307" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:45:44.306" endtime="20210621 12:45:44.307"/>
</kw>
<status status="PASS" starttime="20210621 12:45:43.129" endtime="20210621 12:45:44.307"/>
</iter>
<status status="PASS" starttime="20210621 12:45:43.129" endtime="20210621 12:45:44.307"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:45:44.307" endtime="20210621 12:45:44.308"/>
</kw>
<status status="PASS" starttime="20210621 12:43:47.757" endtime="20210621 12:45:44.308"/>
</kw>
<status status="PASS" starttime="20210621 12:43:25.868" endtime="20210621 12:45:44.308"/>
</test>
<test id="s1-t21" name="Verify setting 2.4Ghz ChannelID 8 with Bandwith 20/40 MHz ">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:45:44.312" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:45:44.344" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-281.log</msg>
<status status="PASS" starttime="20210621 12:45:44.312" endtime="20210621 12:45:54.583"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:45:54.583" endtime="20210621 12:45:54.589"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:45:56.604" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:45:54.589" endtime="20210621 12:45:56.604"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:45:56.606" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:45:56.925" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:45:56.605" endtime="20210621 12:45:56.945"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:45:58.950" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:45:56.945" endtime="20210621 12:45:58.950"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:45:58.951" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:45:58.950" endtime="20210621 12:46:00.728"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:46:05.740" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:46:00.729" endtime="20210621 12:46:05.740"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:46:05.740" endtime="20210621 12:46:05.747"/>
</kw>
<status status="PASS" starttime="20210621 12:45:44.311" endtime="20210621 12:46:05.747"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>8</arg>
<arg>9</arg>
<arg>2</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:46:05.749" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:46:05.749" endtime="20210621 12:46:05.798"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:46:10.809" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:46:05.799" endtime="20210621 12:46:10.809"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:46:10.809" endtime="20210621 12:46:10.815"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:46:10.815" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:46:10.815" endtime="20210621 12:46:10.824"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:46:10.832" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:46:10.825" endtime="20210621 12:46:10.832"/>
</kw>
<status status="PASS" starttime="20210621 12:46:05.749" endtime="20210621 12:46:10.832"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:46:10.833" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:46:10.833" endtime="20210621 12:46:11.066"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:46:11.067" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[9]/a'.</msg>
<status status="PASS" starttime="20210621 12:46:11.066" endtime="20210621 12:46:11.293"/>
</kw>
<status status="PASS" starttime="20210621 12:46:10.832" endtime="20210621 12:46:11.293"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:46:11.294" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:46:11.294" endtime="20210621 12:46:11.518"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:46:11.520" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:46:11.518" endtime="20210621 12:46:11.743"/>
</kw>
<status status="PASS" starttime="20210621 12:46:11.293" endtime="20210621 12:46:11.744"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:46:11.744" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:46:11.744" endtime="20210621 12:46:11.999"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:46:12.099" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%208%20with%20Bandwith%2020/40%20MHz%20.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%208%20with%20Bandwith%2020/40%20MHz%20.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:46:11.999" endtime="20210621 12:46:12.099"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:46:27.102" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:46:12.099" endtime="20210621 12:46:27.102"/>
</kw>
<status status="PASS" starttime="20210621 12:46:11.744" endtime="20210621 12:46:27.103"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:46:27.103" endtime="20210621 12:46:27.106"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:46:27.107" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:46:27.107" endtime="20210621 12:46:27.344"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:46:29.350" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:46:27.345" endtime="20210621 12:46:29.350"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:46:29.350" endtime="20210621 12:46:30.533"/>
</kw>
<status status="PASS" starttime="20210621 12:46:27.103" endtime="20210621 12:46:30.534"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:46:30.535" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:46:30.534" endtime="20210621 12:46:30.536"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:46:30.677" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 03:07:37 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:46:30.536" endtime="20210621 12:46:30.678"/>
</kw>
<status status="PASS" starttime="20210621 12:46:30.534" endtime="20210621 12:46:30.678"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:46:30.681" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:46:30.783" level="INFO">ARC_WLAN_24G_Channel=8
#</msg>
<msg timestamp="20210621 12:46:30.783" level="INFO">${out} = ARC_WLAN_24G_Channel=8
#</msg>
<status status="PASS" starttime="20210621 12:46:30.679" endtime="20210621 12:46:30.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:46:30.784" level="INFO">ARC_WLAN_24G_Channel=8
#</msg>
<status status="PASS" starttime="20210621 12:46:30.783" endtime="20210621 12:46:30.784"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:46:30.784" level="INFO">${result} = ['8']</msg>
<status status="PASS" starttime="20210621 12:46:30.784" endtime="20210621 12:46:30.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:46:30.785" level="INFO">2.4Ghz Channel ID from console is 8</msg>
<status status="PASS" starttime="20210621 12:46:30.784" endtime="20210621 12:46:30.785"/>
</kw>
<msg timestamp="20210621 12:46:30.787" level="INFO">${2.4Ghz_ChannelID_Console} = 8</msg>
<status status="PASS" starttime="20210621 12:46:30.678" endtime="20210621 12:46:30.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:46:30.787" level="INFO">Channel ID from Console is 8</msg>
<status status="PASS" starttime="20210621 12:46:30.787" endtime="20210621 12:46:30.787"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:46:30.787" endtime="20210621 12:46:30.787"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:46:30.788" endtime="20210621 12:46:30.788"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:48:00.793" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:46:30.788" endtime="20210621 12:48:00.793"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:48:00.795" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:48:00.800" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:48:01.855" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:48:00.795" endtime="20210621 12:48:01.856"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:48:01.857" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:48:01.862" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:48:02.473" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:48:02.474" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210621 12:48:01.856" endtime="20210621 12:48:02.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:48:02.476" level="INFO">
  
&gt; SSID 12 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 8 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210621 12:48:02.474" endtime="20210621 12:48:02.476"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:48:02.479" level="INFO">${Analyser_ChannelID_5Ghz} = ['8', '40']</msg>
<status status="PASS" starttime="20210621 12:48:02.477" endtime="20210621 12:48:02.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:48:02.481" level="INFO">Analyser Channel IDs are 8 and 40</msg>
<status status="PASS" starttime="20210621 12:48:02.479" endtime="20210621 12:48:02.482"/>
</kw>
<msg timestamp="20210621 12:48:02.484" level="INFO">${2.4Ghz_ChannelID_Analyser} = ['8', '40']</msg>
<status status="PASS" starttime="20210621 12:48:00.794" endtime="20210621 12:48:02.484"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210621 12:48:02.485" level="INFO">Length is 2</msg>
<msg timestamp="20210621 12:48:02.486" level="INFO">${2.4Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210621 12:48:02.485" endtime="20210621 12:48:02.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:48:02.486" level="INFO">ChannelIDs are ['8', '40'] and Length of ChannelIDs is 2</msg>
<status status="PASS" starttime="20210621 12:48:02.486" endtime="20210621 12:48:02.486"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210621 12:48:02.487" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210621 12:48:02.486" endtime="20210621 12:48:02.487"/>
</kw>
<status status="PASS" starttime="20210621 12:48:00.794" endtime="20210621 12:48:02.487"/>
</iter>
<status status="PASS" starttime="20210621 12:48:00.793" endtime="20210621 12:48:02.487"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210621 12:48:02.487" endtime="20210621 12:48:02.487"/>
</kw>
<status status="PASS" starttime="20210621 12:46:05.748" endtime="20210621 12:48:02.487"/>
</kw>
<status status="PASS" starttime="20210621 12:45:44.310" endtime="20210621 12:48:02.489"/>
</test>
<test id="s1-t22" name="Verify setting 2.4Ghz ChannelID 9 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:48:02.496" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:48:02.538" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-282.log</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:48:11.504" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-56.png"&gt;&lt;img src="selenium-screenshot-56.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:48:11.386" endtime="20210621 12:48:11.504"/>
</kw>
<msg timestamp="20210621 12:48:11.648" level="FAIL">WebDriverException: Message: Reached error page: about:neterror?e=dnsNotFound&amp;u=https%3A//mijnmodem.kpn/login.htm&amp;c=UTF-8&amp;d=We%20can%E2%80%99t%20connect%20to%20the%20server%20at%20mijnmodem.kpn.
</msg>
<status status="FAIL" starttime="20210621 12:48:02.495" endtime="20210621 12:48:11.649"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="NOT RUN" starttime="20210621 12:48:11.649" endtime="20210621 12:48:11.649"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:11.649" endtime="20210621 12:48:11.649"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" starttime="20210621 12:48:11.649" endtime="20210621 12:48:11.649"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:11.649" endtime="20210621 12:48:11.649"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20210621 12:48:11.650" endtime="20210621 12:48:11.650"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:11.650" endtime="20210621 12:48:11.650"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20210621 12:48:11.650" endtime="20210621 12:48:11.650"/>
</kw>
<status status="FAIL" starttime="20210621 12:48:02.493" endtime="20210621 12:48:11.650"/>
</kw>
<status status="FAIL" starttime="20210621 12:48:02.491" endtime="20210621 12:48:11.651">Setup failed:
WebDriverException: Message: Reached error page: about:neterror?e=dnsNotFound&amp;u=https%3A//mijnmodem.kpn/login.htm&amp;c=UTF-8&amp;d=We%20can%E2%80%99t%20connect%20to%20the%20server%20at%20mijnmodem.kpn.
</status>
</test>
<test id="s1-t23" name="Verify setting 2.4Ghz ChannelID 10 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:48:11.655" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:48:11.697" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-283.log</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:48:22.628" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-57.png"&gt;&lt;img src="selenium-screenshot-57.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:48:22.535" endtime="20210621 12:48:22.629"/>
</kw>
<msg timestamp="20210621 12:48:22.630" level="FAIL">WebDriverException: Message: Reached error page: about:neterror?e=dnsNotFound&amp;u=https%3A//mijnmodem.kpn/login.htm&amp;c=UTF-8&amp;d=We%20can%E2%80%99t%20connect%20to%20the%20server%20at%20mijnmodem.kpn.
</msg>
<status status="FAIL" starttime="20210621 12:48:11.655" endtime="20210621 12:48:22.630"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="NOT RUN" starttime="20210621 12:48:22.631" endtime="20210621 12:48:22.631"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:22.631" endtime="20210621 12:48:22.631"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" starttime="20210621 12:48:22.631" endtime="20210621 12:48:22.632"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:22.632" endtime="20210621 12:48:22.632"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20210621 12:48:22.632" endtime="20210621 12:48:22.632"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:22.633" endtime="20210621 12:48:22.633"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20210621 12:48:22.633" endtime="20210621 12:48:22.633"/>
</kw>
<status status="FAIL" starttime="20210621 12:48:11.654" endtime="20210621 12:48:22.634"/>
</kw>
<status status="FAIL" starttime="20210621 12:48:11.654" endtime="20210621 12:48:22.635">Setup failed:
WebDriverException: Message: Reached error page: about:neterror?e=dnsNotFound&amp;u=https%3A//mijnmodem.kpn/login.htm&amp;c=UTF-8&amp;d=We%20can%E2%80%99t%20connect%20to%20the%20server%20at%20mijnmodem.kpn.
</status>
</test>
<test id="s1-t24" name="Verify setting 2.4Ghz ChannelID 11 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:48:22.640" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:48:22.695" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-284.log</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:48:30.433" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-58.png"&gt;&lt;img src="selenium-screenshot-58.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:48:30.367" endtime="20210621 12:48:30.433"/>
</kw>
<msg timestamp="20210621 12:48:30.434" level="FAIL">WebDriverException: Message: Reached error page: about:neterror?e=dnsNotFound&amp;u=https%3A//mijnmodem.kpn/login.htm&amp;c=UTF-8&amp;d=We%20can%E2%80%99t%20connect%20to%20the%20server%20at%20mijnmodem.kpn.
</msg>
<status status="FAIL" starttime="20210621 12:48:22.640" endtime="20210621 12:48:30.434"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="NOT RUN" starttime="20210621 12:48:30.435" endtime="20210621 12:48:30.435"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:30.435" endtime="20210621 12:48:30.435"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" starttime="20210621 12:48:30.435" endtime="20210621 12:48:30.435"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:30.435" endtime="20210621 12:48:30.436"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20210621 12:48:30.436" endtime="20210621 12:48:30.436"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:30.436" endtime="20210621 12:48:30.436"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20210621 12:48:30.436" endtime="20210621 12:48:30.436"/>
</kw>
<status status="FAIL" starttime="20210621 12:48:22.639" endtime="20210621 12:48:30.437"/>
</kw>
<status status="FAIL" starttime="20210621 12:48:22.637" endtime="20210621 12:48:30.438">Setup failed:
WebDriverException: Message: Reached error page: about:neterror?e=dnsNotFound&amp;u=https%3A//mijnmodem.kpn/login.htm&amp;c=UTF-8&amp;d=We%20can%E2%80%99t%20connect%20to%20the%20server%20at%20mijnmodem.kpn.
</status>
</test>
<test id="s1-t25" name="Verify setting 2.4Ghz ChannelID 12 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:48:30.443" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:48:30.482" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-285.log</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:48:40.074" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-59.png"&gt;&lt;img src="selenium-screenshot-59.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:48:39.987" endtime="20210621 12:48:40.074"/>
</kw>
<msg timestamp="20210621 12:48:40.076" level="FAIL">WebDriverException: Message: Reached error page: about:neterror?e=dnsNotFound&amp;u=https%3A//mijnmodem.kpn/login.htm&amp;c=UTF-8&amp;d=We%20can%E2%80%99t%20connect%20to%20the%20server%20at%20mijnmodem.kpn.
</msg>
<status status="FAIL" starttime="20210621 12:48:30.442" endtime="20210621 12:48:40.076"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="NOT RUN" starttime="20210621 12:48:40.076" endtime="20210621 12:48:40.077"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:40.077" endtime="20210621 12:48:40.077"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" starttime="20210621 12:48:40.077" endtime="20210621 12:48:40.077"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:40.078" endtime="20210621 12:48:40.078"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20210621 12:48:40.078" endtime="20210621 12:48:40.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:48:40.078" endtime="20210621 12:48:40.078"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20210621 12:48:40.079" endtime="20210621 12:48:40.079"/>
</kw>
<status status="FAIL" starttime="20210621 12:48:30.442" endtime="20210621 12:48:40.079"/>
</kw>
<status status="FAIL" starttime="20210621 12:48:30.440" endtime="20210621 12:48:40.080">Setup failed:
WebDriverException: Message: Reached error page: about:neterror?e=dnsNotFound&amp;u=https%3A//mijnmodem.kpn/login.htm&amp;c=UTF-8&amp;d=We%20can%E2%80%99t%20connect%20to%20the%20server%20at%20mijnmodem.kpn.
</status>
</test>
<test id="s1-t26" name="Verify setting 2.4Ghz ChannelID 13 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210621 12:48:40.100" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210621 12:48:40.151" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-286.log</msg>
<status status="PASS" starttime="20210621 12:48:40.099" endtime="20210621 12:48:55.901"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210621 12:48:55.902" endtime="20210621 12:48:55.930"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:48:57.934" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:48:55.930" endtime="20210621 12:48:57.934"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210621 12:48:57.936" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210621 12:48:58.269" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210621 12:48:57.934" endtime="20210621 12:48:58.309"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:49:00.315" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:48:58.309" endtime="20210621 12:49:00.315"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:49:00.315" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210621 12:49:00.315" endtime="20210621 12:49:02.152"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:49:07.166" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:49:02.152" endtime="20210621 12:49:07.166"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:49:07.166" endtime="20210621 12:49:07.176"/>
</kw>
<status status="PASS" starttime="20210621 12:48:40.098" endtime="20210621 12:49:07.176"/>
</kw>
<kw name="Verify 2.4Ghz ChannelID scenarios">
<arg>13</arg>
<arg>14</arg>
<arg>2</arg>
<tag>2.4GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:49:07.179" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210621 12:49:07.179" endtime="20210621 12:49:07.222"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:49:12.233" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210621 12:49:07.223" endtime="20210621 12:49:12.233"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210621 12:49:12.233" endtime="20210621 12:49:12.243"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210621 12:49:12.244" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210621 12:49:12.244" endtime="20210621 12:49:12.265"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210621 12:49:12.272" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210621 12:49:12.265" endtime="20210621 12:49:12.273"/>
</kw>
<status status="PASS" starttime="20210621 12:49:07.178" endtime="20210621 12:49:12.273"/>
</kw>
<kw name="Set 2.4Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:49:12.274" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:49:12.274" endtime="20210621 12:49:12.508"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:49:12.509" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[1]/ul/li[14]/a'.</msg>
<status status="PASS" starttime="20210621 12:49:12.508" endtime="20210621 12:49:12.733"/>
</kw>
<status status="PASS" starttime="20210621 12:49:12.273" endtime="20210621 12:49:12.733"/>
</kw>
<kw name="Set 2.4Ghz Bandwith with value" library="WLANPage">
<arg>${24GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${2.4Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:49:12.734" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[1]'.</msg>
<status status="PASS" starttime="20210621 12:49:12.734" endtime="20210621 12:49:12.960"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:49:12.961" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[1]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210621 12:49:12.960" endtime="20210621 12:49:13.189"/>
</kw>
<status status="PASS" starttime="20210621 12:49:12.733" endtime="20210621 12:49:13.189"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:49:13.190" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210621 12:49:13.190" endtime="20210621 12:49:13.445"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210621 12:49:13.529" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%202.4Ghz%20ChannelID%2013%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%202.4Ghz%20ChannelID%2013%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210621 12:49:13.445" endtime="20210621 12:49:13.529"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:49:28.532" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210621 12:49:13.529" endtime="20210621 12:49:28.532"/>
</kw>
<status status="PASS" starttime="20210621 12:49:13.189" endtime="20210621 12:49:28.532"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210621 12:49:28.533" endtime="20210621 12:49:28.536"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210621 12:49:28.536" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210621 12:49:28.536" endtime="20210621 12:49:28.971"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:49:30.974" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210621 12:49:28.972" endtime="20210621 12:49:30.974"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210621 12:49:30.974" endtime="20210621 12:49:36.004"/>
</kw>
<status status="PASS" starttime="20210621 12:49:28.532" endtime="20210621 12:49:36.004"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210621 12:49:36.005" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210621 12:49:36.005" endtime="20210621 12:49:36.008"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210621 12:49:36.155" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 03:10:43 UTC 1970
#</msg>
<status status="PASS" starttime="20210621 12:49:36.008" endtime="20210621 12:49:36.156"/>
</kw>
<status status="PASS" starttime="20210621 12:49:36.004" endtime="20210621 12:49:36.156"/>
</kw>
<kw name="Get the 2.4Ghz channel id from console" library="Telnet">
<var>${2.4Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out}</var>
<arg>cat /etc/config/.glbcfg |grep 24G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210621 12:49:36.165" level="INFO">cat /etc/config/.glbcfg |grep 24G_Channel=</msg>
<msg timestamp="20210621 12:49:36.260" level="INFO">ARC_WLAN_24G_Channel=13
#</msg>
<msg timestamp="20210621 12:49:36.261" level="INFO">${out} = ARC_WLAN_24G_Channel=13
#</msg>
<status status="PASS" starttime="20210621 12:49:36.157" endtime="20210621 12:49:36.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:49:36.262" level="INFO">ARC_WLAN_24G_Channel=13
#</msg>
<status status="PASS" starttime="20210621 12:49:36.261" endtime="20210621 12:49:36.262"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result}</var>
<arg>${out}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:49:36.263" level="INFO">${result} = ['13']</msg>
<status status="PASS" starttime="20210621 12:49:36.262" endtime="20210621 12:49:36.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2.4Ghz Channel ID from console is ${result[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:49:36.266" level="INFO">2.4Ghz Channel ID from console is 13</msg>
<status status="PASS" starttime="20210621 12:49:36.264" endtime="20210621 12:49:36.266"/>
</kw>
<msg timestamp="20210621 12:49:36.267" level="INFO">${2.4Ghz_ChannelID_Console} = 13</msg>
<status status="PASS" starttime="20210621 12:49:36.156" endtime="20210621 12:49:36.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${2.4Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:49:36.268" level="INFO">Channel ID from Console is 13</msg>
<status status="PASS" starttime="20210621 12:49:36.268" endtime="20210621 12:49:36.268"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210621 12:49:36.268" endtime="20210621 12:49:36.268"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Console}</arg>
<arg>${24GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210621 12:49:36.269" endtime="20210621 12:49:36.269"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>90s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210621 12:51:06.271" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" starttime="20210621 12:49:36.269" endtime="20210621 12:51:06.271"/>
</kw>
<for flavor="IN">
<var>${VAR}</var>
<value>@{Loop}</value>
<iter>
<var name="${VAR}">1</var>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${2.4Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:51:06.272" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:51:06.279" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:51:07.031" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210621 12:51:06.272" endtime="20210621 12:51:07.031"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210621 12:51:07.032" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210621 12:51:07.035" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210621 12:51:07.514" level="INFO">Process completed.</msg>
<msg timestamp="20210621 12:51:07.514" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20210621 12:51:07.031" endtime="20210621 12:51:07.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:51:07.516" level="INFO"/>
<status status="PASS" starttime="20210621 12:51:07.515" endtime="20210621 12:51:07.516"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210621 12:51:07.517" level="INFO">${Analyser_ChannelID_5Ghz} = []</msg>
<status status="PASS" starttime="20210621 12:51:07.516" endtime="20210621 12:51:07.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210621 12:51:07.518" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[0]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210621 12:51:07.517" endtime="20210621 12:51:07.519"/>
</kw>
<status status="FAIL" starttime="20210621 12:51:06.272" endtime="20210621 12:51:07.519"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${2.4Ghz_ChannelID_Analyser_Length}</var>
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210621 12:51:07.519" endtime="20210621 12:51:07.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>ChannelIDs are ${2.4Ghz_ChannelID_Analyser} and Length of ChannelIDs is ${2.4Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210621 12:51:07.519" endtime="20210621 12:51:07.519"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${2.4Ghz_ChannelID_Analyser_Length} &gt;= 2</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210621 12:51:07.519" endtime="20210621 12:51:07.519"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>30s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210621 12:51:07.520" endtime="20210621 12:51:07.520"/>
</kw>
<status status="FAIL" starttime="20210621 12:51:06.271" endtime="20210621 12:51:07.520"/>
</iter>
<status status="FAIL" starttime="20210621 12:51:06.271" endtime="20210621 12:51:07.520"/>
</for>
<kw name="List Should Contain Value" library="Collections">
<arg>${2.4Ghz_ChannelID_Analyser}</arg>
<arg>${2.4Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210621 12:51:07.520" endtime="20210621 12:51:07.520"/>
</kw>
<status status="FAIL" starttime="20210621 12:49:07.177" endtime="20210621 12:51:07.520"/>
</kw>
<status status="FAIL" starttime="20210621 12:48:40.095" endtime="20210621 12:51:07.521">Resolving variable '${Analyser_ChannelID_5Ghz[0]}' failed: IndexError: list index out of range</status>
</test>
<status status="FAIL" starttime="20210621 12:03:44.136" endtime="20210621 12:51:07.538"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="8" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="18" fail="8" skip="0" id="s1" name="WLAN 2.4GHzChannelID">WLAN 2.4GHzChannelID</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
