<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.9.4 on win32)" generated="20210618 17:32:20.336" rpa="false" schemaversion="2">
<suite id="s1" name="WLAN 5GHzChannelID" source="D:\Personal\Automation\KPN\WiFi\Tests\WLAN_5GHzChannelID.robot">
<test id="s1-t1" name="Verify setting 5GHz ChannelID 100 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 17:32:23.018" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 17:32:23.082" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-116.log</msg>
<status status="PASS" starttime="20210618 17:32:23.017" endtime="20210618 17:32:35.752"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 17:32:35.753" endtime="20210618 17:32:35.780"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:32:37.792" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:32:35.780" endtime="20210618 17:32:37.792"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 17:32:37.793" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 17:32:38.109" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 17:32:37.793" endtime="20210618 17:32:38.138"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:32:40.145" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:32:38.138" endtime="20210618 17:32:40.145"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:32:40.146" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 17:32:40.145" endtime="20210618 17:32:43.166"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:32:48.168" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:32:43.166" endtime="20210618 17:32:48.168"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:32:48.168" endtime="20210618 17:32:48.178"/>
</kw>
<status status="PASS" starttime="20210618 17:32:23.014" endtime="20210618 17:32:48.179"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>100</arg>
<arg>10</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:32:48.181" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 17:32:48.181" endtime="20210618 17:32:48.248"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:32:53.255" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:32:48.248" endtime="20210618 17:32:53.255"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:32:53.256" endtime="20210618 17:32:53.269"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 17:32:53.270" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 17:32:53.270" endtime="20210618 17:32:53.280"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 17:32:53.290" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 17:32:53.281" endtime="20210618 17:32:53.290"/>
</kw>
<status status="PASS" starttime="20210618 17:32:48.180" endtime="20210618 17:32:53.290"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:32:53.292" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:32:53.291" endtime="20210618 17:32:53.534"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:32:53.536" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[10]/a'.</msg>
<status status="PASS" starttime="20210618 17:32:53.535" endtime="20210618 17:32:53.762"/>
</kw>
<status status="PASS" starttime="20210618 17:32:53.290" endtime="20210618 17:32:53.762"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:32:53.766" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:32:53.764" endtime="20210618 17:32:54.007"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:32:54.008" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 17:32:54.007" endtime="20210618 17:32:54.236"/>
</kw>
<status status="PASS" starttime="20210618 17:32:53.762" endtime="20210618 17:32:54.236"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:32:54.238" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 17:32:54.237" endtime="20210618 17:32:54.508"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 17:32:54.601" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20100%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20100%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 17:32:54.508" endtime="20210618 17:32:54.602"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:33:09.605" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 17:32:54.602" endtime="20210618 17:33:09.606"/>
</kw>
<status status="PASS" starttime="20210618 17:32:54.237" endtime="20210618 17:33:09.606"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 17:33:09.608" endtime="20210618 17:33:09.617"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:33:09.619" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 17:33:09.618" endtime="20210618 17:33:09.898"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:33:11.911" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:33:09.898" endtime="20210618 17:33:11.911"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 17:33:11.912" endtime="20210618 17:33:14.145"/>
</kw>
<status status="PASS" starttime="20210618 17:33:09.607" endtime="20210618 17:33:14.147"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 17:33:14.148" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 17:33:14.147" endtime="20210618 17:33:14.150"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 17:33:14.297" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 08:39:51 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 17:33:14.150" endtime="20210618 17:33:14.297"/>
</kw>
<status status="PASS" starttime="20210618 17:33:14.147" endtime="20210618 17:33:14.297"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 17:33:14.301" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 17:33:14.361" level="INFO">ARC_WLAN_5G_Channel=100
#</msg>
<msg timestamp="20210618 17:33:14.362" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=100
#</msg>
<status status="PASS" starttime="20210618 17:33:14.298" endtime="20210618 17:33:14.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:33:14.362" level="INFO">ARC_WLAN_5G_Channel=100
#</msg>
<status status="PASS" starttime="20210618 17:33:14.362" endtime="20210618 17:33:14.362"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:33:14.365" level="INFO">${result_5Ghz} = ['100']</msg>
<status status="PASS" starttime="20210618 17:33:14.364" endtime="20210618 17:33:14.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:33:14.367" level="INFO">5Ghz Channel ID from console is 100</msg>
<status status="PASS" starttime="20210618 17:33:14.365" endtime="20210618 17:33:14.367"/>
</kw>
<msg timestamp="20210618 17:33:14.368" level="INFO">${5Ghz_ChannelID_Console} = 100</msg>
<status status="PASS" starttime="20210618 17:33:14.297" endtime="20210618 17:33:14.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:33:14.368" level="INFO">Channel ID from Console is 100</msg>
<status status="PASS" starttime="20210618 17:33:14.368" endtime="20210618 17:33:14.369"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 17:33:14.369" endtime="20210618 17:33:14.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 17:33:14.369" endtime="20210618 17:33:14.370"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 17:33:14.371" endtime="20210618 17:33:14.371"/>
</kw>
<status status="NOT RUN" starttime="20210618 17:33:14.371" endtime="20210618 17:33:14.372"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:35:44.377" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 17:33:14.372" endtime="20210618 17:35:44.378"/>
</kw>
<status status="PASS" starttime="20210618 17:33:14.372" endtime="20210618 17:35:44.378"/>
</branch>
<status status="PASS" starttime="20210618 17:33:14.370" endtime="20210618 17:35:44.378"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:35:44.379" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:35:44.388" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:35:45.538" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 17:35:44.379" endtime="20210618 17:35:45.538"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:35:45.539" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:35:45.545" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:35:46.322" level="INFO">Process completed.</msg>
<msg timestamp="20210618 17:35:46.323" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 17:35:45.538" endtime="20210618 17:35:46.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:35:46.325" level="INFO">
  
&gt; SSID 5 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 100 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 17:35:46.324" endtime="20210618 17:35:46.325"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:35:46.329" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '100']</msg>
<status status="PASS" starttime="20210618 17:35:46.326" endtime="20210618 17:35:46.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:35:46.337" level="INFO">Analyser Channel IDs are 4 and 100</msg>
<status status="PASS" starttime="20210618 17:35:46.330" endtime="20210618 17:35:46.337"/>
</kw>
<msg timestamp="20210618 17:35:46.345" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '100']</msg>
<status status="PASS" starttime="20210618 17:35:44.378" endtime="20210618 17:35:46.345"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 17:35:46.346" level="INFO">Length is 2</msg>
<msg timestamp="20210618 17:35:46.347" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 17:35:46.346" endtime="20210618 17:35:46.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:35:46.347" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 17:35:46.347" endtime="20210618 17:35:46.347"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 17:35:46.348" endtime="20210618 17:35:46.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:35:46.349" level="INFO">['4', '100']</msg>
<status status="PASS" starttime="20210618 17:35:46.348" endtime="20210618 17:35:46.349"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 17:35:46.349" endtime="20210618 17:35:46.349"/>
</kw>
<status status="PASS" starttime="20210618 17:32:48.180" endtime="20210618 17:35:46.349"/>
</kw>
<status status="PASS" starttime="20210618 17:32:23.010" endtime="20210618 17:35:46.350"/>
</test>
<test id="s1-t2" name="Verify setting 5GHz ChannelID 104 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 17:35:46.360" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 17:35:46.393" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-117.log</msg>
<status status="PASS" starttime="20210618 17:35:46.359" endtime="20210618 17:36:11.859"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 17:36:11.861" endtime="20210618 17:36:12.057"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:36:14.068" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:36:12.059" endtime="20210618 17:36:14.078"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 17:36:14.082" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 17:36:14.499" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 17:36:14.080" endtime="20210618 17:36:14.616"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:36:16.621" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:36:14.616" endtime="20210618 17:36:16.624"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:36:16.627" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 17:36:16.626" endtime="20210618 17:36:19.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:36:24.082" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:36:19.079" endtime="20210618 17:36:24.082"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:36:24.082" endtime="20210618 17:36:24.104"/>
</kw>
<status status="PASS" starttime="20210618 17:35:46.355" endtime="20210618 17:36:24.104"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>104</arg>
<arg>11</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:36:24.108" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 17:36:24.107" endtime="20210618 17:36:24.168"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:36:29.178" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:36:24.168" endtime="20210618 17:36:29.178"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:36:29.178" endtime="20210618 17:36:29.186"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 17:36:29.186" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 17:36:29.186" endtime="20210618 17:36:29.196"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 17:36:29.207" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 17:36:29.197" endtime="20210618 17:36:29.207"/>
</kw>
<status status="PASS" starttime="20210618 17:36:24.106" endtime="20210618 17:36:29.207"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:36:29.208" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:36:29.208" endtime="20210618 17:36:29.441"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:36:29.442" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[11]/a'.</msg>
<status status="PASS" starttime="20210618 17:36:29.441" endtime="20210618 17:36:29.671"/>
</kw>
<status status="PASS" starttime="20210618 17:36:29.207" endtime="20210618 17:36:29.671"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:36:29.673" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:36:29.673" endtime="20210618 17:36:29.903"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:36:29.904" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 17:36:29.903" endtime="20210618 17:36:30.130"/>
</kw>
<status status="PASS" starttime="20210618 17:36:29.672" endtime="20210618 17:36:30.131"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:36:30.132" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 17:36:30.132" endtime="20210618 17:36:30.404"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 17:36:30.508" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20104%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20104%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 17:36:30.405" endtime="20210618 17:36:30.508"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:36:45.509" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 17:36:30.509" endtime="20210618 17:36:45.509"/>
</kw>
<status status="PASS" starttime="20210618 17:36:30.131" endtime="20210618 17:36:45.509"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 17:36:45.510" endtime="20210618 17:36:45.518"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:36:45.519" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 17:36:45.518" endtime="20210618 17:36:45.773"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:36:47.788" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:36:45.774" endtime="20210618 17:36:47.788"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 17:36:47.788" endtime="20210618 17:36:49.253"/>
</kw>
<status status="PASS" starttime="20210618 17:36:45.510" endtime="20210618 17:36:49.253"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 17:36:49.255" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 17:36:49.254" endtime="20210618 17:36:49.256"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 17:36:49.359" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 08:43:26 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 17:36:49.256" endtime="20210618 17:36:49.360"/>
</kw>
<status status="PASS" starttime="20210618 17:36:49.253" endtime="20210618 17:36:49.360"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 17:36:49.362" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 17:36:49.466" level="INFO">ARC_WLAN_5G_Channel=104
#</msg>
<msg timestamp="20210618 17:36:49.466" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=104
#</msg>
<status status="PASS" starttime="20210618 17:36:49.361" endtime="20210618 17:36:49.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:36:49.467" level="INFO">ARC_WLAN_5G_Channel=104
#</msg>
<status status="PASS" starttime="20210618 17:36:49.466" endtime="20210618 17:36:49.467"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:36:49.468" level="INFO">${result_5Ghz} = ['104']</msg>
<status status="PASS" starttime="20210618 17:36:49.467" endtime="20210618 17:36:49.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:36:49.469" level="INFO">5Ghz Channel ID from console is 104</msg>
<status status="PASS" starttime="20210618 17:36:49.468" endtime="20210618 17:36:49.470"/>
</kw>
<msg timestamp="20210618 17:36:49.471" level="INFO">${5Ghz_ChannelID_Console} = 104</msg>
<status status="PASS" starttime="20210618 17:36:49.360" endtime="20210618 17:36:49.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:36:49.471" level="INFO">Channel ID from Console is 104</msg>
<status status="PASS" starttime="20210618 17:36:49.471" endtime="20210618 17:36:49.471"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 17:36:49.472" endtime="20210618 17:36:49.472"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 17:36:49.472" endtime="20210618 17:36:49.473"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 17:36:49.473" endtime="20210618 17:36:49.473"/>
</kw>
<status status="NOT RUN" starttime="20210618 17:36:49.473" endtime="20210618 17:36:49.473"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:39:19.486" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 17:36:49.475" endtime="20210618 17:39:19.486"/>
</kw>
<status status="PASS" starttime="20210618 17:36:49.473" endtime="20210618 17:39:19.486"/>
</branch>
<status status="PASS" starttime="20210618 17:36:49.473" endtime="20210618 17:39:19.486"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:39:19.489" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:39:19.503" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:39:22.505" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 17:39:19.488" endtime="20210618 17:39:22.506"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:39:22.518" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:39:22.555" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:39:24.935" level="INFO">Process completed.</msg>
<msg timestamp="20210618 17:39:24.936" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 17:39:22.507" endtime="20210618 17:39:24.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:39:24.944" level="INFO">
  
&gt; SSID 7 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 104 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 17:39:24.937" endtime="20210618 17:39:24.944"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:39:24.947" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '104']</msg>
<status status="PASS" starttime="20210618 17:39:24.945" endtime="20210618 17:39:24.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:39:24.951" level="INFO">Analyser Channel IDs are 4 and 104</msg>
<status status="PASS" starttime="20210618 17:39:24.948" endtime="20210618 17:39:24.951"/>
</kw>
<msg timestamp="20210618 17:39:24.956" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '104']</msg>
<status status="PASS" starttime="20210618 17:39:19.487" endtime="20210618 17:39:24.957"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 17:39:24.961" level="INFO">Length is 2</msg>
<msg timestamp="20210618 17:39:24.962" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 17:39:24.957" endtime="20210618 17:39:24.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:39:24.962" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 17:39:24.962" endtime="20210618 17:39:24.962"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 17:39:24.963" endtime="20210618 17:39:24.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:39:24.966" level="INFO">['4', '104']</msg>
<status status="PASS" starttime="20210618 17:39:24.965" endtime="20210618 17:39:24.967"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 17:39:24.967" endtime="20210618 17:39:24.968"/>
</kw>
<status status="PASS" starttime="20210618 17:36:24.105" endtime="20210618 17:39:24.969"/>
</kw>
<status status="PASS" starttime="20210618 17:35:46.353" endtime="20210618 17:39:24.970"/>
</test>
<test id="s1-t3" name="Verify setting 5GHz ChannelID 108 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 17:39:25.032" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 17:39:25.158" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-118.log</msg>
<status status="PASS" starttime="20210618 17:39:25.019" endtime="20210618 17:39:46.933"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 17:39:46.933" endtime="20210618 17:39:46.957"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:39:48.967" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:39:46.957" endtime="20210618 17:39:48.967"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 17:39:48.968" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 17:39:49.253" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 17:39:48.967" endtime="20210618 17:39:49.278"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:39:51.281" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:39:49.278" endtime="20210618 17:39:51.281"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:39:51.282" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 17:39:51.281" endtime="20210618 17:39:53.412"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:39:58.420" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:39:53.413" endtime="20210618 17:39:58.420"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:39:58.421" endtime="20210618 17:39:58.431"/>
</kw>
<status status="PASS" starttime="20210618 17:39:25.002" endtime="20210618 17:39:58.431"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>108</arg>
<arg>12</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:39:58.434" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 17:39:58.434" endtime="20210618 17:39:58.496"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:40:03.508" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:39:58.497" endtime="20210618 17:40:03.508"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:40:03.509" endtime="20210618 17:40:03.521"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 17:40:03.522" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 17:40:03.521" endtime="20210618 17:40:03.534"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 17:40:03.546" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 17:40:03.534" endtime="20210618 17:40:03.546"/>
</kw>
<status status="PASS" starttime="20210618 17:39:58.433" endtime="20210618 17:40:03.546"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:40:03.547" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:40:03.547" endtime="20210618 17:40:03.786"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:40:03.787" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[12]/a'.</msg>
<status status="PASS" starttime="20210618 17:40:03.786" endtime="20210618 17:40:04.030"/>
</kw>
<status status="PASS" starttime="20210618 17:40:03.546" endtime="20210618 17:40:04.031"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:40:04.032" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:40:04.032" endtime="20210618 17:40:04.265"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:40:04.266" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 17:40:04.265" endtime="20210618 17:40:04.493"/>
</kw>
<status status="PASS" starttime="20210618 17:40:04.031" endtime="20210618 17:40:04.493"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:40:04.494" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 17:40:04.494" endtime="20210618 17:40:04.756"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 17:40:04.865" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20108%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20108%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 17:40:04.756" endtime="20210618 17:40:04.865"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:40:19.870" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 17:40:04.866" endtime="20210618 17:40:19.871"/>
</kw>
<status status="PASS" starttime="20210618 17:40:04.493" endtime="20210618 17:40:19.871"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 17:40:19.872" endtime="20210618 17:40:19.878"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:40:19.879" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 17:40:19.879" endtime="20210618 17:40:20.130"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:40:22.138" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:40:20.131" endtime="20210618 17:40:22.138"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 17:40:22.139" endtime="20210618 17:40:23.521"/>
</kw>
<status status="PASS" starttime="20210618 17:40:19.871" endtime="20210618 17:40:23.521"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 17:40:23.522" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 17:40:23.522" endtime="20210618 17:40:23.524"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 17:40:23.664" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 08:47:00 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 17:40:23.524" endtime="20210618 17:40:23.664"/>
</kw>
<status status="PASS" starttime="20210618 17:40:23.522" endtime="20210618 17:40:23.665"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 17:40:23.668" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 17:40:23.772" level="INFO">ARC_WLAN_5G_Channel=108
#</msg>
<msg timestamp="20210618 17:40:23.772" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=108
#</msg>
<status status="PASS" starttime="20210618 17:40:23.665" endtime="20210618 17:40:23.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:40:23.773" level="INFO">ARC_WLAN_5G_Channel=108
#</msg>
<status status="PASS" starttime="20210618 17:40:23.773" endtime="20210618 17:40:23.773"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:40:23.774" level="INFO">${result_5Ghz} = ['108']</msg>
<status status="PASS" starttime="20210618 17:40:23.773" endtime="20210618 17:40:23.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:40:23.775" level="INFO">5Ghz Channel ID from console is 108</msg>
<status status="PASS" starttime="20210618 17:40:23.774" endtime="20210618 17:40:23.775"/>
</kw>
<msg timestamp="20210618 17:40:23.777" level="INFO">${5Ghz_ChannelID_Console} = 108</msg>
<status status="PASS" starttime="20210618 17:40:23.665" endtime="20210618 17:40:23.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:40:23.777" level="INFO">Channel ID from Console is 108</msg>
<status status="PASS" starttime="20210618 17:40:23.777" endtime="20210618 17:40:23.777"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 17:40:23.777" endtime="20210618 17:40:23.778"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 17:40:23.778" endtime="20210618 17:40:23.778"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 17:40:23.779" endtime="20210618 17:40:23.779"/>
</kw>
<status status="NOT RUN" starttime="20210618 17:40:23.779" endtime="20210618 17:40:23.779"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:42:53.790" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 17:40:23.780" endtime="20210618 17:42:53.791"/>
</kw>
<status status="PASS" starttime="20210618 17:40:23.779" endtime="20210618 17:42:53.791"/>
</branch>
<status status="PASS" starttime="20210618 17:40:23.779" endtime="20210618 17:42:53.791"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:42:53.795" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:42:53.804" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:42:56.321" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 17:42:53.793" endtime="20210618 17:42:56.322"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:42:56.323" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:42:56.330" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:42:58.841" level="INFO">Process completed.</msg>
<msg timestamp="20210618 17:42:58.843" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 17:42:56.322" endtime="20210618 17:42:58.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:42:58.855" level="INFO">
  
&gt; SSID 4 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 108 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 76%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 17:42:58.851" endtime="20210618 17:42:58.856"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:42:58.860" level="INFO">${Analyser_ChannelID_5Ghz} = ['108', '4']</msg>
<status status="PASS" starttime="20210618 17:42:58.857" endtime="20210618 17:42:58.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:42:58.874" level="INFO">Analyser Channel IDs are 108 and 4</msg>
<status status="PASS" starttime="20210618 17:42:58.866" endtime="20210618 17:42:58.875"/>
</kw>
<msg timestamp="20210618 17:42:58.880" level="INFO">${5Ghz_ChannelID_Analyser} = ['108', '4']</msg>
<status status="PASS" starttime="20210618 17:42:53.792" endtime="20210618 17:42:58.880"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 17:42:58.884" level="INFO">Length is 2</msg>
<msg timestamp="20210618 17:42:58.884" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 17:42:58.882" endtime="20210618 17:42:58.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:42:58.885" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 17:42:58.885" endtime="20210618 17:42:58.885"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 17:42:58.885" endtime="20210618 17:42:58.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:42:58.888" level="INFO">['108', '4']</msg>
<status status="PASS" starttime="20210618 17:42:58.886" endtime="20210618 17:42:58.888"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 17:42:58.888" endtime="20210618 17:42:58.889"/>
</kw>
<status status="PASS" starttime="20210618 17:39:58.433" endtime="20210618 17:42:58.890"/>
</kw>
<status status="PASS" starttime="20210618 17:39:24.987" endtime="20210618 17:42:58.892"/>
</test>
<test id="s1-t4" name="Verify setting 5GHz ChannelID 112 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 17:42:58.926" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 17:42:59.039" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-119.log</msg>
<status status="PASS" starttime="20210618 17:42:58.909" endtime="20210618 17:43:14.997"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 17:43:14.997" endtime="20210618 17:43:15.036"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:43:17.043" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:43:15.036" endtime="20210618 17:43:17.043"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 17:43:17.044" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 17:43:17.334" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 17:43:17.043" endtime="20210618 17:43:17.364"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:43:19.371" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:43:17.364" endtime="20210618 17:43:19.371"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:43:19.372" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 17:43:19.372" endtime="20210618 17:43:21.276"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:43:26.279" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:43:21.277" endtime="20210618 17:43:26.279"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:43:26.279" endtime="20210618 17:43:26.289"/>
</kw>
<status status="PASS" starttime="20210618 17:42:58.907" endtime="20210618 17:43:26.289"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>112</arg>
<arg>13</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:43:26.292" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 17:43:26.291" endtime="20210618 17:43:26.372"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:43:31.375" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:43:26.372" endtime="20210618 17:43:31.375"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:43:31.375" endtime="20210618 17:43:31.389"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 17:43:31.390" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 17:43:31.389" endtime="20210618 17:43:31.399"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 17:43:31.411" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 17:43:31.400" endtime="20210618 17:43:31.412"/>
</kw>
<status status="PASS" starttime="20210618 17:43:26.291" endtime="20210618 17:43:31.412"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:43:31.414" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:43:31.414" endtime="20210618 17:43:31.654"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:43:31.655" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[13]/a'.</msg>
<status status="PASS" starttime="20210618 17:43:31.654" endtime="20210618 17:43:31.883"/>
</kw>
<status status="PASS" starttime="20210618 17:43:31.412" endtime="20210618 17:43:31.883"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:43:31.886" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:43:31.885" endtime="20210618 17:43:32.111"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:43:32.112" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 17:43:32.111" endtime="20210618 17:43:32.341"/>
</kw>
<status status="PASS" starttime="20210618 17:43:31.883" endtime="20210618 17:43:32.341"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:43:32.342" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 17:43:32.342" endtime="20210618 17:43:32.614"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 17:43:32.709" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20112%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20112%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 17:43:32.615" endtime="20210618 17:43:32.710"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:43:47.725" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 17:43:32.710" endtime="20210618 17:43:47.725"/>
</kw>
<status status="PASS" starttime="20210618 17:43:32.341" endtime="20210618 17:43:47.725"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 17:43:47.726" endtime="20210618 17:43:47.731"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:43:47.733" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 17:43:47.732" endtime="20210618 17:43:47.987"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:43:49.993" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:43:47.987" endtime="20210618 17:43:49.993"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 17:43:49.993" endtime="20210618 17:43:51.567"/>
</kw>
<status status="PASS" starttime="20210618 17:43:47.726" endtime="20210618 17:43:51.568"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 17:43:51.569" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 17:43:51.568" endtime="20210618 17:43:51.570"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 17:43:51.717" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 08:50:28 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 17:43:51.570" endtime="20210618 17:43:51.717"/>
</kw>
<status status="PASS" starttime="20210618 17:43:51.568" endtime="20210618 17:43:51.718"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 17:43:51.721" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 17:43:51.810" level="INFO">ARC_WLAN_5G_Channel=112
#</msg>
<msg timestamp="20210618 17:43:51.811" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=112
#</msg>
<status status="PASS" starttime="20210618 17:43:51.718" endtime="20210618 17:43:51.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:43:51.811" level="INFO">ARC_WLAN_5G_Channel=112
#</msg>
<status status="PASS" starttime="20210618 17:43:51.811" endtime="20210618 17:43:51.811"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:43:51.812" level="INFO">${result_5Ghz} = ['112']</msg>
<status status="PASS" starttime="20210618 17:43:51.812" endtime="20210618 17:43:51.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:43:51.813" level="INFO">5Ghz Channel ID from console is 112</msg>
<status status="PASS" starttime="20210618 17:43:51.812" endtime="20210618 17:43:51.814"/>
</kw>
<msg timestamp="20210618 17:43:51.815" level="INFO">${5Ghz_ChannelID_Console} = 112</msg>
<status status="PASS" starttime="20210618 17:43:51.718" endtime="20210618 17:43:51.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:43:51.815" level="INFO">Channel ID from Console is 112</msg>
<status status="PASS" starttime="20210618 17:43:51.815" endtime="20210618 17:43:51.816"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 17:43:51.816" endtime="20210618 17:43:51.816"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 17:43:51.816" endtime="20210618 17:43:51.817"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 17:43:51.817" endtime="20210618 17:43:51.817"/>
</kw>
<status status="NOT RUN" starttime="20210618 17:43:51.817" endtime="20210618 17:43:51.817"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:46:21.822" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 17:43:51.817" endtime="20210618 17:46:21.823"/>
</kw>
<status status="PASS" starttime="20210618 17:43:51.817" endtime="20210618 17:46:21.823"/>
</branch>
<status status="PASS" starttime="20210618 17:43:51.817" endtime="20210618 17:46:21.823"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:46:21.827" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:46:21.839" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:46:23.826" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 17:46:21.826" endtime="20210618 17:46:23.827"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:46:23.832" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:46:23.839" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:46:26.518" level="INFO">Process completed.</msg>
<msg timestamp="20210618 17:46:26.519" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 17:46:23.828" endtime="20210618 17:46:26.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:46:26.530" level="INFO">
  
&gt; SSID 5 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 11 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 112 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 17:46:26.520" endtime="20210618 17:46:26.531"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:46:26.534" level="INFO">${Analyser_ChannelID_5Ghz} = ['11', '112']</msg>
<status status="PASS" starttime="20210618 17:46:26.531" endtime="20210618 17:46:26.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:46:26.549" level="INFO">Analyser Channel IDs are 11 and 112</msg>
<status status="PASS" starttime="20210618 17:46:26.535" endtime="20210618 17:46:26.549"/>
</kw>
<msg timestamp="20210618 17:46:26.555" level="INFO">${5Ghz_ChannelID_Analyser} = ['11', '112']</msg>
<status status="PASS" starttime="20210618 17:46:21.824" endtime="20210618 17:46:26.555"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 17:46:26.563" level="INFO">Length is 2</msg>
<msg timestamp="20210618 17:46:26.565" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 17:46:26.556" endtime="20210618 17:46:26.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:46:26.566" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 17:46:26.565" endtime="20210618 17:46:26.566"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 17:46:26.566" endtime="20210618 17:46:26.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:46:26.572" level="INFO">['11', '112']</msg>
<status status="PASS" starttime="20210618 17:46:26.571" endtime="20210618 17:46:26.573"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 17:46:26.573" endtime="20210618 17:46:26.581"/>
</kw>
<status status="PASS" starttime="20210618 17:43:26.290" endtime="20210618 17:46:26.581"/>
</kw>
<status status="PASS" starttime="20210618 17:42:58.901" endtime="20210618 17:46:26.582"/>
</test>
<test id="s1-t5" name="Verify setting 5GHz ChannelID 116 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 17:46:26.666" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 17:46:26.766" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-120.log</msg>
<status status="PASS" starttime="20210618 17:46:26.663" endtime="20210618 17:46:40.790"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 17:46:40.790" endtime="20210618 17:46:40.811"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:46:42.816" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:46:40.811" endtime="20210618 17:46:42.816"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 17:46:42.817" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 17:46:43.130" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 17:46:42.816" endtime="20210618 17:46:43.163"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:46:45.179" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:46:43.163" endtime="20210618 17:46:45.179"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:46:45.181" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 17:46:45.179" endtime="20210618 17:46:46.835"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:46:51.837" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:46:46.836" endtime="20210618 17:46:51.837"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:46:51.838" endtime="20210618 17:46:51.854"/>
</kw>
<status status="PASS" starttime="20210618 17:46:26.638" endtime="20210618 17:46:51.855"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>116</arg>
<arg>14</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:46:51.858" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 17:46:51.857" endtime="20210618 17:46:51.921"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:46:56.929" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:46:51.922" endtime="20210618 17:46:56.929"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:46:56.930" endtime="20210618 17:46:56.943"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 17:46:56.944" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 17:46:56.943" endtime="20210618 17:46:56.957"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 17:46:56.969" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 17:46:56.957" endtime="20210618 17:46:56.969"/>
</kw>
<status status="PASS" starttime="20210618 17:46:51.857" endtime="20210618 17:46:56.970"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:46:56.972" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:46:56.971" endtime="20210618 17:46:57.222"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:46:57.223" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[14]/a'.</msg>
<status status="PASS" starttime="20210618 17:46:57.222" endtime="20210618 17:46:57.454"/>
</kw>
<status status="PASS" starttime="20210618 17:46:56.970" endtime="20210618 17:46:57.454"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:46:57.456" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:46:57.456" endtime="20210618 17:46:57.682"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:46:57.683" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 17:46:57.682" endtime="20210618 17:46:57.924"/>
</kw>
<status status="PASS" starttime="20210618 17:46:57.455" endtime="20210618 17:46:57.924"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:46:57.926" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 17:46:57.925" endtime="20210618 17:46:58.186"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 17:46:58.284" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20116%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20116%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 17:46:58.186" endtime="20210618 17:46:58.284"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:47:13.294" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 17:46:58.285" endtime="20210618 17:47:13.295"/>
</kw>
<status status="PASS" starttime="20210618 17:46:57.925" endtime="20210618 17:47:13.295"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 17:47:13.295" endtime="20210618 17:47:13.301"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:47:13.302" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 17:47:13.302" endtime="20210618 17:47:13.557"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:47:15.559" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:47:13.557" endtime="20210618 17:47:15.559"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 17:47:15.559" endtime="20210618 17:47:17.055"/>
</kw>
<status status="PASS" starttime="20210618 17:47:13.295" endtime="20210618 17:47:17.055"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 17:47:17.056" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 17:47:17.056" endtime="20210618 17:47:17.057"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 17:47:17.204" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 08:53:54 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 17:47:17.057" endtime="20210618 17:47:17.204"/>
</kw>
<status status="PASS" starttime="20210618 17:47:17.055" endtime="20210618 17:47:17.205"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 17:47:17.207" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 17:47:17.312" level="INFO">ARC_WLAN_5G_Channel=116
#</msg>
<msg timestamp="20210618 17:47:17.312" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=116
#</msg>
<status status="PASS" starttime="20210618 17:47:17.205" endtime="20210618 17:47:17.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:47:17.313" level="INFO">ARC_WLAN_5G_Channel=116
#</msg>
<status status="PASS" starttime="20210618 17:47:17.313" endtime="20210618 17:47:17.313"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:47:17.314" level="INFO">${result_5Ghz} = ['116']</msg>
<status status="PASS" starttime="20210618 17:47:17.314" endtime="20210618 17:47:17.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:47:17.315" level="INFO">5Ghz Channel ID from console is 116</msg>
<status status="PASS" starttime="20210618 17:47:17.314" endtime="20210618 17:47:17.316"/>
</kw>
<msg timestamp="20210618 17:47:17.317" level="INFO">${5Ghz_ChannelID_Console} = 116</msg>
<status status="PASS" starttime="20210618 17:47:17.205" endtime="20210618 17:47:17.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:47:17.317" level="INFO">Channel ID from Console is 116</msg>
<status status="PASS" starttime="20210618 17:47:17.317" endtime="20210618 17:47:17.317"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 17:47:17.317" endtime="20210618 17:47:17.318"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 17:47:17.318" endtime="20210618 17:47:17.318"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 17:47:17.319" endtime="20210618 17:47:17.319"/>
</kw>
<status status="NOT RUN" starttime="20210618 17:47:17.319" endtime="20210618 17:47:17.319"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:49:47.336" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 17:47:17.319" endtime="20210618 17:49:47.336"/>
</kw>
<status status="PASS" starttime="20210618 17:47:17.319" endtime="20210618 17:49:47.336"/>
</branch>
<status status="PASS" starttime="20210618 17:47:17.318" endtime="20210618 17:49:47.337"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:49:47.340" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:49:47.365" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:49:49.769" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 17:49:47.338" endtime="20210618 17:49:49.771"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:49:49.775" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:49:49.806" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:49:52.401" level="INFO">Process completed.</msg>
<msg timestamp="20210618 17:49:52.402" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 17:49:49.772" endtime="20210618 17:49:52.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:49:52.415" level="INFO">
  
&gt; SSID 6 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 116 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 17:49:52.403" endtime="20210618 17:49:52.417"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:49:52.430" level="INFO">${Analyser_ChannelID_5Ghz} = ['116', '4']</msg>
<status status="PASS" starttime="20210618 17:49:52.418" endtime="20210618 17:49:52.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:49:52.438" level="INFO">Analyser Channel IDs are 116 and 4</msg>
<status status="PASS" starttime="20210618 17:49:52.431" endtime="20210618 17:49:52.441"/>
</kw>
<msg timestamp="20210618 17:49:52.451" level="INFO">${5Ghz_ChannelID_Analyser} = ['116', '4']</msg>
<status status="PASS" starttime="20210618 17:49:47.337" endtime="20210618 17:49:52.451"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 17:49:52.453" level="INFO">Length is 2</msg>
<msg timestamp="20210618 17:49:52.453" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 17:49:52.451" endtime="20210618 17:49:52.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:49:52.455" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 17:49:52.454" endtime="20210618 17:49:52.455"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 17:49:52.456" endtime="20210618 17:49:52.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:49:52.464" level="INFO">['116', '4']</msg>
<status status="PASS" starttime="20210618 17:49:52.462" endtime="20210618 17:49:52.464"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 17:49:52.464" endtime="20210618 17:49:52.465"/>
</kw>
<status status="PASS" starttime="20210618 17:46:51.856" endtime="20210618 17:49:52.465"/>
</kw>
<status status="PASS" starttime="20210618 17:46:26.632" endtime="20210618 17:49:52.467"/>
</test>
<test id="s1-t6" name="Verify setting 5GHz ChannelID 120 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 17:49:52.485" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 17:49:52.736" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-121.log</msg>
<status status="PASS" starttime="20210618 17:49:52.484" endtime="20210618 17:50:05.751"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 17:50:05.752" endtime="20210618 17:50:05.767"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:50:07.780" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:50:05.768" endtime="20210618 17:50:07.780"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 17:50:07.781" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 17:50:08.108" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 17:50:07.781" endtime="20210618 17:50:08.136"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:50:10.143" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:50:08.137" endtime="20210618 17:50:10.143"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:50:10.144" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 17:50:10.143" endtime="20210618 17:50:12.028"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:50:17.033" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:50:12.028" endtime="20210618 17:50:17.033"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:50:17.034" endtime="20210618 17:50:17.049"/>
</kw>
<status status="PASS" starttime="20210618 17:49:52.482" endtime="20210618 17:50:17.049"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>120</arg>
<arg>15</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:50:17.051" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 17:50:17.051" endtime="20210618 17:50:17.117"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:50:22.119" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:50:17.117" endtime="20210618 17:50:22.121"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:50:22.121" endtime="20210618 17:50:22.131"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 17:50:22.132" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 17:50:22.132" endtime="20210618 17:50:22.154"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 17:50:22.164" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 17:50:22.154" endtime="20210618 17:50:22.164"/>
</kw>
<status status="PASS" starttime="20210618 17:50:17.050" endtime="20210618 17:50:22.164"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:50:22.165" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:50:22.165" endtime="20210618 17:50:22.427"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:50:22.428" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[15]/a'.</msg>
<status status="PASS" starttime="20210618 17:50:22.427" endtime="20210618 17:50:22.657"/>
</kw>
<status status="PASS" starttime="20210618 17:50:22.164" endtime="20210618 17:50:22.657"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:50:22.659" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:50:22.658" endtime="20210618 17:50:22.889"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:50:22.890" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 17:50:22.889" endtime="20210618 17:50:23.119"/>
</kw>
<status status="PASS" starttime="20210618 17:50:22.658" endtime="20210618 17:50:23.119"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:50:23.120" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 17:50:23.120" endtime="20210618 17:50:23.393"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 17:50:23.495" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20120%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20120%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 17:50:23.393" endtime="20210618 17:50:23.496"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:50:38.502" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 17:50:23.496" endtime="20210618 17:50:38.503"/>
</kw>
<status status="PASS" starttime="20210618 17:50:23.119" endtime="20210618 17:50:38.504"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 17:50:38.505" endtime="20210618 17:50:38.522"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:50:38.524" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 17:50:38.523" endtime="20210618 17:50:38.938"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:50:40.940" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:50:38.939" endtime="20210618 17:50:40.941"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 17:50:40.941" endtime="20210618 17:50:44.733"/>
</kw>
<status status="PASS" starttime="20210618 17:50:38.504" endtime="20210618 17:50:44.734"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 17:50:44.738" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 17:50:44.736" endtime="20210618 17:50:44.741"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 17:50:44.901" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 08:57:21 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 17:50:44.742" endtime="20210618 17:50:44.902"/>
</kw>
<status status="PASS" starttime="20210618 17:50:44.735" endtime="20210618 17:50:44.903"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 17:50:44.976" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 17:50:45.028" level="INFO">ARC_WLAN_5G_Channel=120
#</msg>
<msg timestamp="20210618 17:50:45.028" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=120
#</msg>
<status status="PASS" starttime="20210618 17:50:44.905" endtime="20210618 17:50:45.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:50:45.032" level="INFO">ARC_WLAN_5G_Channel=120
#</msg>
<status status="PASS" starttime="20210618 17:50:45.029" endtime="20210618 17:50:45.032"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:50:45.036" level="INFO">${result_5Ghz} = ['120']</msg>
<status status="PASS" starttime="20210618 17:50:45.034" endtime="20210618 17:50:45.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:50:45.042" level="INFO">5Ghz Channel ID from console is 120</msg>
<status status="PASS" starttime="20210618 17:50:45.038" endtime="20210618 17:50:45.043"/>
</kw>
<msg timestamp="20210618 17:50:45.046" level="INFO">${5Ghz_ChannelID_Console} = 120</msg>
<status status="PASS" starttime="20210618 17:50:44.904" endtime="20210618 17:50:45.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:50:45.047" level="INFO">Channel ID from Console is 120</msg>
<status status="PASS" starttime="20210618 17:50:45.046" endtime="20210618 17:50:45.047"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 17:50:45.047" endtime="20210618 17:50:45.049"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 17:50:45.049" endtime="20210618 17:50:45.051"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 17:50:45.052" endtime="20210618 17:50:45.053"/>
</kw>
<status status="NOT RUN" starttime="20210618 17:50:45.052" endtime="20210618 17:50:45.053"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:53:15.063" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 17:50:45.054" endtime="20210618 17:53:15.063"/>
</kw>
<status status="PASS" starttime="20210618 17:50:45.054" endtime="20210618 17:53:15.063"/>
</branch>
<status status="PASS" starttime="20210618 17:50:45.051" endtime="20210618 17:53:15.063"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:53:15.065" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:53:15.069" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:53:15.834" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 17:53:15.064" endtime="20210618 17:53:15.834"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:53:15.836" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:53:15.841" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:53:16.643" level="INFO">Process completed.</msg>
<msg timestamp="20210618 17:53:16.644" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 17:53:15.835" endtime="20210618 17:53:16.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:53:16.646" level="INFO">
  
&gt; SSID 6 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 7 : Ziggo26361
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 70:54:d2:a6:2c:ab
           Signal             : 23%  

</msg>
<status status="PASS" starttime="20210618 17:53:16.644" endtime="20210618 17:53:16.646"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:53:16.647" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 17:53:16.646" endtime="20210618 17:53:16.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:53:16.650" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 17:53:16.647" endtime="20210618 17:53:16.650"/>
</kw>
<status status="FAIL" starttime="20210618 17:53:15.064" endtime="20210618 17:53:16.650"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 17:53:16.650" endtime="20210618 17:53:16.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 17:53:16.650" endtime="20210618 17:53:16.650"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 17:53:16.650" endtime="20210618 17:53:16.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 17:53:16.650" endtime="20210618 17:53:16.650"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 17:53:16.650" endtime="20210618 17:53:16.650"/>
</kw>
<status status="FAIL" starttime="20210618 17:50:17.050" endtime="20210618 17:53:16.650"/>
</kw>
<status status="FAIL" starttime="20210618 17:49:52.480" endtime="20210618 17:53:16.652">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t7" name="Verify setting 5GHz ChannelID 124 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 17:53:16.657" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 17:53:16.698" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-122.log</msg>
<status status="PASS" starttime="20210618 17:53:16.656" endtime="20210618 17:53:36.993"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 17:53:36.994" endtime="20210618 17:53:37.074"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:53:39.083" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:53:37.075" endtime="20210618 17:53:39.083"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 17:53:39.086" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 17:53:39.425" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 17:53:39.085" endtime="20210618 17:53:39.480"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:53:41.494" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:53:39.481" endtime="20210618 17:53:41.495"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:53:41.497" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 17:53:41.496" endtime="20210618 17:53:44.947"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:53:50.019" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:53:44.948" endtime="20210618 17:53:50.019"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:53:50.020" endtime="20210618 17:53:50.174"/>
</kw>
<status status="PASS" starttime="20210618 17:53:16.655" endtime="20210618 17:53:50.177"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>124</arg>
<arg>16</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:53:50.198" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 17:53:50.197" endtime="20210618 17:53:50.891"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:53:55.894" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:53:50.891" endtime="20210618 17:53:55.895"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:53:55.896" endtime="20210618 17:53:55.908"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 17:53:55.909" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 17:53:55.908" endtime="20210618 17:53:55.923"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 17:53:55.935" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 17:53:55.923" endtime="20210618 17:53:55.936"/>
</kw>
<status status="PASS" starttime="20210618 17:53:50.196" endtime="20210618 17:53:55.936"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:53:55.937" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:53:55.937" endtime="20210618 17:53:56.229"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:53:56.231" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[16]/a'.</msg>
<status status="PASS" starttime="20210618 17:53:56.229" endtime="20210618 17:53:56.463"/>
</kw>
<status status="PASS" starttime="20210618 17:53:55.936" endtime="20210618 17:53:56.464"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:53:56.466" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:53:56.465" endtime="20210618 17:53:56.717"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:53:56.719" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 17:53:56.717" endtime="20210618 17:53:56.986"/>
</kw>
<status status="PASS" starttime="20210618 17:53:56.464" endtime="20210618 17:53:56.986"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:53:56.989" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 17:53:56.988" endtime="20210618 17:53:57.319"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 17:53:57.512" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20124%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20124%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 17:53:57.320" endtime="20210618 17:53:57.512"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:54:12.521" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 17:53:57.513" endtime="20210618 17:54:12.521"/>
</kw>
<status status="PASS" starttime="20210618 17:53:56.987" endtime="20210618 17:54:12.522"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 17:54:12.522" endtime="20210618 17:54:12.527"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:54:12.527" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 17:54:12.527" endtime="20210618 17:54:12.781"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:54:14.783" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:54:12.781" endtime="20210618 17:54:14.784"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 17:54:14.784" endtime="20210618 17:54:16.292"/>
</kw>
<status status="PASS" starttime="20210618 17:54:12.522" endtime="20210618 17:54:16.293"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 17:54:16.294" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 17:54:16.294" endtime="20210618 17:54:16.295"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 17:54:16.440" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:00:53 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 17:54:16.296" endtime="20210618 17:54:16.441"/>
</kw>
<status status="PASS" starttime="20210618 17:54:16.293" endtime="20210618 17:54:16.441"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 17:54:16.444" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 17:54:16.531" level="INFO">ARC_WLAN_5G_Channel=124
#</msg>
<msg timestamp="20210618 17:54:16.532" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=124
#</msg>
<status status="PASS" starttime="20210618 17:54:16.442" endtime="20210618 17:54:16.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:54:16.533" level="INFO">ARC_WLAN_5G_Channel=124
#</msg>
<status status="PASS" starttime="20210618 17:54:16.532" endtime="20210618 17:54:16.533"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:54:16.535" level="INFO">${result_5Ghz} = ['124']</msg>
<status status="PASS" starttime="20210618 17:54:16.534" endtime="20210618 17:54:16.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:54:16.538" level="INFO">5Ghz Channel ID from console is 124</msg>
<status status="PASS" starttime="20210618 17:54:16.536" endtime="20210618 17:54:16.538"/>
</kw>
<msg timestamp="20210618 17:54:16.540" level="INFO">${5Ghz_ChannelID_Console} = 124</msg>
<status status="PASS" starttime="20210618 17:54:16.441" endtime="20210618 17:54:16.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:54:16.541" level="INFO">Channel ID from Console is 124</msg>
<status status="PASS" starttime="20210618 17:54:16.540" endtime="20210618 17:54:16.541"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 17:54:16.541" endtime="20210618 17:54:16.542"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 17:54:16.542" endtime="20210618 17:54:16.545"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 17:54:16.545" endtime="20210618 17:54:16.546"/>
</kw>
<status status="NOT RUN" starttime="20210618 17:54:16.545" endtime="20210618 17:54:16.546"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:56:46.547" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 17:54:16.547" endtime="20210618 17:56:46.547"/>
</kw>
<status status="PASS" starttime="20210618 17:54:16.546" endtime="20210618 17:56:46.547"/>
</branch>
<status status="PASS" starttime="20210618 17:54:16.545" endtime="20210618 17:56:46.547"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:56:46.549" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:56:46.557" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:56:48.076" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 17:56:46.549" endtime="20210618 17:56:48.076"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 17:56:48.078" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 17:56:48.099" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 17:56:50.369" level="INFO">Process completed.</msg>
<msg timestamp="20210618 17:56:50.370" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 17:56:48.077" endtime="20210618 17:56:50.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:56:50.374" level="INFO">
  
&gt; SSID 7 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 8 : 
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 72:6a:b0:0d:03:67
           Signal             : 99%  

</msg>
<status status="PASS" starttime="20210618 17:56:50.370" endtime="20210618 17:56:50.375"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:56:50.379" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 17:56:50.376" endtime="20210618 17:56:50.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:56:50.391" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 17:56:50.387" endtime="20210618 17:56:50.392"/>
</kw>
<status status="FAIL" starttime="20210618 17:56:46.547" endtime="20210618 17:56:50.392"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 17:56:50.393" endtime="20210618 17:56:50.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 17:56:50.394" endtime="20210618 17:56:50.394"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 17:56:50.395" endtime="20210618 17:56:50.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 17:56:50.396" endtime="20210618 17:56:50.397"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 17:56:50.398" endtime="20210618 17:56:50.398"/>
</kw>
<status status="FAIL" starttime="20210618 17:53:50.194" endtime="20210618 17:56:50.402"/>
</kw>
<status status="FAIL" starttime="20210618 17:53:16.654" endtime="20210618 17:56:50.404">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t8" name="Verify setting 5GHz ChannelID 128 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 17:56:50.426" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 17:56:50.643" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-123.log</msg>
<status status="PASS" starttime="20210618 17:56:50.422" endtime="20210618 17:57:10.659"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 17:57:10.661" endtime="20210618 17:57:10.696"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:57:12.710" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:57:10.698" endtime="20210618 17:57:12.711"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 17:57:12.714" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 17:57:13.127" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 17:57:12.712" endtime="20210618 17:57:13.267"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:57:15.277" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:57:13.268" endtime="20210618 17:57:15.278"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:57:15.280" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 17:57:15.279" endtime="20210618 17:57:18.196"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:57:23.208" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:57:18.197" endtime="20210618 17:57:23.209"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:57:23.209" endtime="20210618 17:57:23.235"/>
</kw>
<status status="PASS" starttime="20210618 17:56:50.413" endtime="20210618 17:57:23.236"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>128</arg>
<arg>17</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:57:23.248" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 17:57:23.245" endtime="20210618 17:57:23.499"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:57:28.516" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 17:57:23.500" endtime="20210618 17:57:28.516"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 17:57:28.516" endtime="20210618 17:57:28.535"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 17:57:28.538" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 17:57:28.536" endtime="20210618 17:57:28.593"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 17:57:28.633" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 17:57:28.595" endtime="20210618 17:57:28.635"/>
</kw>
<status status="PASS" starttime="20210618 17:57:23.243" endtime="20210618 17:57:28.637"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:57:28.640" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:57:28.640" endtime="20210618 17:57:28.987"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:57:28.988" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[17]/a'.</msg>
<status status="PASS" starttime="20210618 17:57:28.988" endtime="20210618 17:57:29.295"/>
</kw>
<status status="PASS" starttime="20210618 17:57:28.638" endtime="20210618 17:57:29.296"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:57:29.299" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 17:57:29.299" endtime="20210618 17:57:29.573"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:57:29.576" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 17:57:29.574" endtime="20210618 17:57:29.849"/>
</kw>
<status status="PASS" starttime="20210618 17:57:29.297" endtime="20210618 17:57:29.849"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:57:29.852" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 17:57:29.850" endtime="20210618 17:57:30.281"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 17:57:30.564" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20128%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20128%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 17:57:30.282" endtime="20210618 17:57:30.566"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:57:45.575" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 17:57:30.568" endtime="20210618 17:57:45.576"/>
</kw>
<status status="PASS" starttime="20210618 17:57:29.849" endtime="20210618 17:57:45.577"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 17:57:45.578" endtime="20210618 17:57:45.596"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 17:57:45.597" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 17:57:45.597" endtime="20210618 17:57:45.889"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 17:57:47.904" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 17:57:45.889" endtime="20210618 17:57:47.904"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 17:57:47.905" endtime="20210618 17:57:49.431"/>
</kw>
<status status="PASS" starttime="20210618 17:57:45.577" endtime="20210618 17:57:49.431"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 17:57:49.432" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 17:57:49.432" endtime="20210618 17:57:49.433"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 17:57:49.578" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:04:26 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 17:57:49.433" endtime="20210618 17:57:49.578"/>
</kw>
<status status="PASS" starttime="20210618 17:57:49.431" endtime="20210618 17:57:49.579"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 17:57:49.583" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 17:57:49.671" level="INFO">ARC_WLAN_5G_Channel=128
#</msg>
<msg timestamp="20210618 17:57:49.672" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=128
#</msg>
<status status="PASS" starttime="20210618 17:57:49.580" endtime="20210618 17:57:49.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:57:49.672" level="INFO">ARC_WLAN_5G_Channel=128
#</msg>
<status status="PASS" starttime="20210618 17:57:49.672" endtime="20210618 17:57:49.673"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 17:57:49.674" level="INFO">${result_5Ghz} = ['128']</msg>
<status status="PASS" starttime="20210618 17:57:49.673" endtime="20210618 17:57:49.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:57:49.675" level="INFO">5Ghz Channel ID from console is 128</msg>
<status status="PASS" starttime="20210618 17:57:49.674" endtime="20210618 17:57:49.675"/>
</kw>
<msg timestamp="20210618 17:57:49.676" level="INFO">${5Ghz_ChannelID_Console} = 128</msg>
<status status="PASS" starttime="20210618 17:57:49.579" endtime="20210618 17:57:49.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 17:57:49.677" level="INFO">Channel ID from Console is 128</msg>
<status status="PASS" starttime="20210618 17:57:49.677" endtime="20210618 17:57:49.677"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 17:57:49.677" endtime="20210618 17:57:49.678"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 17:57:49.678" endtime="20210618 17:57:49.679"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 17:57:49.679" endtime="20210618 17:57:49.679"/>
</kw>
<status status="NOT RUN" starttime="20210618 17:57:49.679" endtime="20210618 17:57:49.679"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:00:19.696" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 17:57:49.679" endtime="20210618 18:00:19.696"/>
</kw>
<status status="PASS" starttime="20210618 17:57:49.679" endtime="20210618 18:00:19.696"/>
</branch>
<status status="PASS" starttime="20210618 17:57:49.679" endtime="20210618 18:00:19.696"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:00:19.698" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:00:19.714" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:00:22.395" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:00:19.697" endtime="20210618 18:00:22.396"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:00:22.397" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:00:22.412" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:00:24.210" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:00:24.211" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:00:22.396" endtime="20210618 18:00:24.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:00:24.215" level="INFO">
  
&gt; SSID 10 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 11 : VGV75194AB277
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 50:7e:5d:4a:b2:77
           Signal             : 35%  

</msg>
<status status="PASS" starttime="20210618 18:00:24.212" endtime="20210618 18:00:24.215"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:00:24.217" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 18:00:24.215" endtime="20210618 18:00:24.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:00:24.223" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 18:00:24.217" endtime="20210618 18:00:24.223"/>
</kw>
<status status="FAIL" starttime="20210618 18:00:19.696" endtime="20210618 18:00:24.224"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 18:00:24.224" endtime="20210618 18:00:24.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 18:00:24.224" endtime="20210618 18:00:24.225"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 18:00:24.225" endtime="20210618 18:00:24.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 18:00:24.225" endtime="20210618 18:00:24.225"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 18:00:24.226" endtime="20210618 18:00:24.226"/>
</kw>
<status status="FAIL" starttime="20210618 17:57:23.242" endtime="20210618 18:00:24.226"/>
</kw>
<status status="FAIL" starttime="20210618 17:56:50.410" endtime="20210618 18:00:24.230">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t9" name="Verify setting 5GHz ChannelID 132 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:00:24.242" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:00:24.383" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-124.log</msg>
<status status="PASS" starttime="20210618 18:00:24.242" endtime="20210618 18:00:47.032"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:00:47.033" endtime="20210618 18:00:47.153"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:00:49.161" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:00:47.154" endtime="20210618 18:00:49.162"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:00:49.166" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:00:49.578" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:00:49.162" endtime="20210618 18:00:49.871"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:00:51.888" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:00:49.871" endtime="20210618 18:00:51.889"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:00:51.893" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:00:51.890" endtime="20210618 18:00:54.830"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:00:59.833" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:00:54.831" endtime="20210618 18:00:59.834"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:00:59.834" endtime="20210618 18:00:59.857"/>
</kw>
<status status="PASS" starttime="20210618 18:00:24.241" endtime="20210618 18:00:59.858"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>132</arg>
<arg>18</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:00:59.861" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:00:59.860" endtime="20210618 18:01:00.081"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:01:05.096" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:01:00.082" endtime="20210618 18:01:05.098"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:01:05.104" endtime="20210618 18:01:05.141"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:01:05.143" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:01:05.142" endtime="20210618 18:01:05.192"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:01:05.226" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:01:05.194" endtime="20210618 18:01:05.227"/>
</kw>
<status status="PASS" starttime="20210618 18:00:59.859" endtime="20210618 18:01:05.227"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:01:05.232" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:01:05.230" endtime="20210618 18:01:05.576"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:01:05.578" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[18]/a'.</msg>
<status status="PASS" starttime="20210618 18:01:05.577" endtime="20210618 18:01:05.866"/>
</kw>
<status status="PASS" starttime="20210618 18:01:05.228" endtime="20210618 18:01:05.867"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:01:05.873" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:01:05.871" endtime="20210618 18:01:06.128"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:01:06.131" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 18:01:06.129" endtime="20210618 18:01:06.419"/>
</kw>
<status status="PASS" starttime="20210618 18:01:05.868" endtime="20210618 18:01:06.419"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:01:06.422" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:01:06.421" endtime="20210618 18:01:06.846"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:01:07.164" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20132%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20132%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:01:06.846" endtime="20210618 18:01:07.165"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:01:22.169" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:01:07.166" endtime="20210618 18:01:22.169"/>
</kw>
<status status="PASS" starttime="20210618 18:01:06.419" endtime="20210618 18:01:22.170"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:01:22.171" endtime="20210618 18:01:22.178"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:01:22.180" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:01:22.179" endtime="20210618 18:01:22.432"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:01:24.439" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:01:22.432" endtime="20210618 18:01:24.439"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:01:24.440" endtime="20210618 18:01:25.900"/>
</kw>
<status status="PASS" starttime="20210618 18:01:22.170" endtime="20210618 18:01:25.900"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:01:25.902" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:01:25.901" endtime="20210618 18:01:25.904"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:01:26.009" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:08:03 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:01:25.904" endtime="20210618 18:01:26.010"/>
</kw>
<status status="PASS" starttime="20210618 18:01:25.901" endtime="20210618 18:01:26.010"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:01:26.015" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:01:26.101" level="INFO">ARC_WLAN_5G_Channel=132
#</msg>
<msg timestamp="20210618 18:01:26.102" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=132
#</msg>
<status status="PASS" starttime="20210618 18:01:26.011" endtime="20210618 18:01:26.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:01:26.103" level="INFO">ARC_WLAN_5G_Channel=132
#</msg>
<status status="PASS" starttime="20210618 18:01:26.103" endtime="20210618 18:01:26.104"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:01:26.107" level="INFO">${result_5Ghz} = ['132']</msg>
<status status="PASS" starttime="20210618 18:01:26.104" endtime="20210618 18:01:26.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:01:26.112" level="INFO">5Ghz Channel ID from console is 132</msg>
<status status="PASS" starttime="20210618 18:01:26.109" endtime="20210618 18:01:26.113"/>
</kw>
<msg timestamp="20210618 18:01:26.115" level="INFO">${5Ghz_ChannelID_Console} = 132</msg>
<status status="PASS" starttime="20210618 18:01:26.010" endtime="20210618 18:01:26.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:01:26.116" level="INFO">Channel ID from Console is 132</msg>
<status status="PASS" starttime="20210618 18:01:26.115" endtime="20210618 18:01:26.116"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:01:26.116" endtime="20210618 18:01:26.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:01:26.118" endtime="20210618 18:01:26.119"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:01:26.121" endtime="20210618 18:01:26.121"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:01:26.120" endtime="20210618 18:01:26.122"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:03:56.148" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 18:01:26.122" endtime="20210618 18:03:56.149"/>
</kw>
<status status="PASS" starttime="20210618 18:01:26.122" endtime="20210618 18:03:56.149"/>
</branch>
<status status="PASS" starttime="20210618 18:01:26.120" endtime="20210618 18:03:56.149"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:03:56.157" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:03:56.202" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:03:58.819" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:03:56.153" endtime="20210618 18:03:58.820"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:03:58.826" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:03:58.838" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:04:01.262" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:04:01.263" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:03:58.822" endtime="20210618 18:04:01.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:04:01.296" level="INFO">
  
&gt; SSID 1 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 132 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 18:04:01.265" endtime="20210618 18:04:01.296"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:04:01.314" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '132']</msg>
<status status="PASS" starttime="20210618 18:04:01.297" endtime="20210618 18:04:01.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:04:01.331" level="INFO">Analyser Channel IDs are 4 and 132</msg>
<status status="PASS" starttime="20210618 18:04:01.315" endtime="20210618 18:04:01.332"/>
</kw>
<msg timestamp="20210618 18:04:01.351" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '132']</msg>
<status status="PASS" starttime="20210618 18:03:56.149" endtime="20210618 18:04:01.417"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:04:01.424" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:04:01.427" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:04:01.419" endtime="20210618 18:04:01.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:04:01.432" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:04:01.429" endtime="20210618 18:04:01.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:04:01.435" endtime="20210618 18:04:01.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:04:01.445" level="INFO">['4', '132']</msg>
<status status="PASS" starttime="20210618 18:04:01.444" endtime="20210618 18:04:01.445"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:04:01.446" endtime="20210618 18:04:01.447"/>
</kw>
<status status="PASS" starttime="20210618 18:00:59.859" endtime="20210618 18:04:01.448"/>
</kw>
<status status="PASS" starttime="20210618 18:00:24.237" endtime="20210618 18:04:01.562"/>
</test>
<test id="s1-t10" name="Verify setting 5GHz ChannelID 136 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:04:01.605" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:04:01.765" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-125.log</msg>
<status status="PASS" starttime="20210618 18:04:01.600" endtime="20210618 18:04:23.731"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:04:23.731" endtime="20210618 18:04:23.866"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:04:25.875" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:04:23.867" endtime="20210618 18:04:25.876"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:04:25.882" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:04:26.276" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:04:25.878" endtime="20210618 18:04:26.568"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:04:28.573" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:04:26.569" endtime="20210618 18:04:28.575"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:04:28.578" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:04:28.576" endtime="20210618 18:04:31.376"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:04:36.385" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:04:31.378" endtime="20210618 18:04:36.385"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:04:36.386" endtime="20210618 18:04:36.447"/>
</kw>
<status status="PASS" starttime="20210618 18:04:01.597" endtime="20210618 18:04:36.448"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>136</arg>
<arg>19</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:04:36.522" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:04:36.520" endtime="20210618 18:04:36.902"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:04:41.921" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:04:36.903" endtime="20210618 18:04:41.921"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:04:41.921" endtime="20210618 18:04:41.943"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:04:41.946" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:04:41.944" endtime="20210618 18:04:41.964"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:04:41.980" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:04:41.964" endtime="20210618 18:04:41.981"/>
</kw>
<status status="PASS" starttime="20210618 18:04:36.519" endtime="20210618 18:04:41.982"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:04:41.985" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:04:41.984" endtime="20210618 18:04:42.284"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:04:42.288" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[19]/a'.</msg>
<status status="PASS" starttime="20210618 18:04:42.286" endtime="20210618 18:04:42.602"/>
</kw>
<status status="PASS" starttime="20210618 18:04:41.982" endtime="20210618 18:04:42.603"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:04:42.605" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:04:42.604" endtime="20210618 18:04:42.911"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:04:42.922" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 18:04:42.912" endtime="20210618 18:04:43.237"/>
</kw>
<status status="PASS" starttime="20210618 18:04:42.603" endtime="20210618 18:04:43.239"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:04:43.244" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:04:43.242" endtime="20210618 18:04:43.789"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:04:43.980" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20136%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20136%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:04:43.790" endtime="20210618 18:04:43.983"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:04:58.999" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:04:43.984" endtime="20210618 18:04:58.999"/>
</kw>
<status status="PASS" starttime="20210618 18:04:43.240" endtime="20210618 18:04:59.000"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:04:59.002" endtime="20210618 18:04:59.014"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:04:59.016" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:04:59.015" endtime="20210618 18:04:59.391"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:05:01.405" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:04:59.392" endtime="20210618 18:05:01.406"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:05:01.407" endtime="20210618 18:05:05.668"/>
</kw>
<status status="PASS" starttime="20210618 18:04:59.001" endtime="20210618 18:05:05.668"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:05:05.670" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:05:05.669" endtime="20210618 18:05:05.675"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:05:05.817" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:11:42 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:05:05.676" endtime="20210618 18:05:05.817"/>
</kw>
<status status="PASS" starttime="20210618 18:05:05.668" endtime="20210618 18:05:05.818"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:05:05.823" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:05:05.910" level="INFO">ARC_WLAN_5G_Channel=136
#</msg>
<msg timestamp="20210618 18:05:05.910" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=136
#</msg>
<status status="PASS" starttime="20210618 18:05:05.818" endtime="20210618 18:05:05.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:05:05.910" level="INFO">ARC_WLAN_5G_Channel=136
#</msg>
<status status="PASS" starttime="20210618 18:05:05.910" endtime="20210618 18:05:05.911"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:05:05.911" level="INFO">${result_5Ghz} = ['136']</msg>
<status status="PASS" starttime="20210618 18:05:05.911" endtime="20210618 18:05:05.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:05:05.913" level="INFO">5Ghz Channel ID from console is 136</msg>
<status status="PASS" starttime="20210618 18:05:05.912" endtime="20210618 18:05:05.913"/>
</kw>
<msg timestamp="20210618 18:05:05.914" level="INFO">${5Ghz_ChannelID_Console} = 136</msg>
<status status="PASS" starttime="20210618 18:05:05.818" endtime="20210618 18:05:05.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:05:05.914" level="INFO">Channel ID from Console is 136</msg>
<status status="PASS" starttime="20210618 18:05:05.914" endtime="20210618 18:05:05.914"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:05:05.914" endtime="20210618 18:05:05.915"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:05:05.915" endtime="20210618 18:05:05.915"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:05:05.915" endtime="20210618 18:05:05.916"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:05:05.915" endtime="20210618 18:05:05.916"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:07:35.921" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 18:05:05.916" endtime="20210618 18:07:35.921"/>
</kw>
<status status="PASS" starttime="20210618 18:05:05.916" endtime="20210618 18:07:35.922"/>
</branch>
<status status="PASS" starttime="20210618 18:05:05.915" endtime="20210618 18:07:35.922"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:07:35.926" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:07:35.935" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:07:38.729" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:07:35.924" endtime="20210618 18:07:38.730"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:07:38.731" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:07:38.752" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:07:41.059" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:07:41.060" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:07:38.730" endtime="20210618 18:07:41.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:07:41.065" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 136 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 18:07:41.061" endtime="20210618 18:07:41.065"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:07:41.075" level="INFO">${Analyser_ChannelID_5Ghz} = ['136', '4']</msg>
<status status="PASS" starttime="20210618 18:07:41.066" endtime="20210618 18:07:41.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:07:41.081" level="INFO">Analyser Channel IDs are 136 and 4</msg>
<status status="PASS" starttime="20210618 18:07:41.076" endtime="20210618 18:07:41.081"/>
</kw>
<msg timestamp="20210618 18:07:41.091" level="INFO">${5Ghz_ChannelID_Analyser} = ['136', '4']</msg>
<status status="PASS" starttime="20210618 18:07:35.922" endtime="20210618 18:07:41.091"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:07:41.091" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:07:41.092" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:07:41.091" endtime="20210618 18:07:41.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:07:41.092" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:07:41.092" endtime="20210618 18:07:41.093"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:07:41.093" endtime="20210618 18:07:41.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:07:41.096" level="INFO">['136', '4']</msg>
<status status="PASS" starttime="20210618 18:07:41.095" endtime="20210618 18:07:41.096"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:07:41.096" endtime="20210618 18:07:41.098"/>
</kw>
<status status="PASS" starttime="20210618 18:04:36.517" endtime="20210618 18:07:41.099"/>
</kw>
<status status="PASS" starttime="20210618 18:04:01.583" endtime="20210618 18:07:41.106"/>
</test>
<test id="s1-t11" name="Verify setting 5GHz ChannelID 140 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:07:41.131" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:07:41.416" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-126.log</msg>
<status status="PASS" starttime="20210618 18:07:41.117" endtime="20210618 18:08:05.712"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:08:05.713" endtime="20210618 18:08:05.798"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:08:07.804" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:08:05.800" endtime="20210618 18:08:07.805"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:08:07.808" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:08:08.283" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:08:07.806" endtime="20210618 18:08:08.548"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:08:10.552" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:08:08.550" endtime="20210618 18:08:10.552"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:08:10.553" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:08:10.553" endtime="20210618 18:08:13.472"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:08:18.478" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:08:13.473" endtime="20210618 18:08:18.479"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:08:18.482" endtime="20210618 18:08:18.507"/>
</kw>
<status status="PASS" starttime="20210618 18:07:41.114" endtime="20210618 18:08:18.507"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>140</arg>
<arg>20</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:08:18.510" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:08:18.509" endtime="20210618 18:08:18.683"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:08:23.704" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:08:18.685" endtime="20210618 18:08:23.704"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:08:23.704" endtime="20210618 18:08:23.771"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:08:23.773" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:08:23.771" endtime="20210618 18:08:23.800"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:08:23.836" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:08:23.800" endtime="20210618 18:08:23.836"/>
</kw>
<status status="PASS" starttime="20210618 18:08:18.509" endtime="20210618 18:08:23.836"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:08:23.840" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:08:23.839" endtime="20210618 18:08:24.286"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:08:24.289" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[20]/a'.</msg>
<status status="PASS" starttime="20210618 18:08:24.287" endtime="20210618 18:08:24.634"/>
</kw>
<status status="PASS" starttime="20210618 18:08:23.837" endtime="20210618 18:08:24.635"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:08:24.640" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:08:24.638" endtime="20210618 18:08:25.033"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:08:25.038" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 18:08:25.035" endtime="20210618 18:08:25.308"/>
</kw>
<status status="PASS" starttime="20210618 18:08:24.635" endtime="20210618 18:08:25.310"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:08:25.317" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:08:25.313" endtime="20210618 18:08:25.799"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:08:26.212" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20140%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20140%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:08:25.800" endtime="20210618 18:08:26.213"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:08:41.235" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:08:26.215" endtime="20210618 18:08:41.236"/>
</kw>
<status status="PASS" starttime="20210618 18:08:25.311" endtime="20210618 18:08:41.236"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:08:41.237" endtime="20210618 18:08:41.258"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:08:41.259" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:08:41.258" endtime="20210618 18:08:41.861"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:08:43.876" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:08:41.863" endtime="20210618 18:08:43.877"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:08:43.878" endtime="20210618 18:08:56.856"/>
</kw>
<status status="PASS" starttime="20210618 18:08:41.236" endtime="20210618 18:08:56.857"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:08:56.861" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:08:56.860" endtime="20210618 18:08:56.866"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:08:57.206" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:15:34 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:08:56.867" endtime="20210618 18:08:57.207"/>
</kw>
<status status="PASS" starttime="20210618 18:08:56.858" endtime="20210618 18:08:57.208"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:08:57.220" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:08:57.415" level="INFO">ARC_WLAN_5G_Channel=140
#</msg>
<msg timestamp="20210618 18:08:57.416" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=140
#</msg>
<status status="PASS" starttime="20210618 18:08:57.212" endtime="20210618 18:08:57.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:08:57.419" level="INFO">ARC_WLAN_5G_Channel=140
#</msg>
<status status="PASS" starttime="20210618 18:08:57.416" endtime="20210618 18:08:57.421"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:08:57.425" level="INFO">${result_5Ghz} = ['140']</msg>
<status status="PASS" starttime="20210618 18:08:57.421" endtime="20210618 18:08:57.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:08:57.433" level="INFO">5Ghz Channel ID from console is 140</msg>
<status status="PASS" starttime="20210618 18:08:57.428" endtime="20210618 18:08:57.434"/>
</kw>
<msg timestamp="20210618 18:08:57.445" level="INFO">${5Ghz_ChannelID_Console} = 140</msg>
<status status="PASS" starttime="20210618 18:08:57.209" endtime="20210618 18:08:57.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:08:57.448" level="INFO">Channel ID from Console is 140</msg>
<status status="PASS" starttime="20210618 18:08:57.446" endtime="20210618 18:08:57.448"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:08:57.449" endtime="20210618 18:08:57.449"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:08:57.450" endtime="20210618 18:08:57.451"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:08:57.452" endtime="20210618 18:08:57.452"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:08:57.451" endtime="20210618 18:08:57.452"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:11:27.462" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 18:08:57.453" endtime="20210618 18:11:27.463"/>
</kw>
<status status="PASS" starttime="20210618 18:08:57.452" endtime="20210618 18:11:27.463"/>
</branch>
<status status="PASS" starttime="20210618 18:08:57.451" endtime="20210618 18:11:27.463"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:11:27.467" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:11:27.479" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:11:29.661" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:11:27.466" endtime="20210618 18:11:29.661"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:11:29.665" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:11:29.696" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:11:32.554" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:11:32.555" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:11:29.662" endtime="20210618 18:11:32.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:11:32.559" level="INFO">
  
&gt; SSID 5 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 140 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 18:11:32.557" endtime="20210618 18:11:32.559"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:11:32.562" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '140']</msg>
<status status="PASS" starttime="20210618 18:11:32.559" endtime="20210618 18:11:32.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:11:32.565" level="INFO">Analyser Channel IDs are 4 and 140</msg>
<status status="PASS" starttime="20210618 18:11:32.562" endtime="20210618 18:11:32.566"/>
</kw>
<msg timestamp="20210618 18:11:32.576" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '140']</msg>
<status status="PASS" starttime="20210618 18:11:27.464" endtime="20210618 18:11:32.576"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:11:32.579" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:11:32.579" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:11:32.576" endtime="20210618 18:11:32.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:11:32.582" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:11:32.581" endtime="20210618 18:11:32.583"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:11:32.591" endtime="20210618 18:11:32.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:11:32.595" level="INFO">['4', '140']</msg>
<status status="PASS" starttime="20210618 18:11:32.593" endtime="20210618 18:11:32.595"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:11:32.596" endtime="20210618 18:11:32.597"/>
</kw>
<status status="PASS" starttime="20210618 18:08:18.508" endtime="20210618 18:11:32.597"/>
</kw>
<status status="PASS" starttime="20210618 18:07:41.109" endtime="20210618 18:11:32.607"/>
</test>
<test id="s1-t12" name="Verify setting 5GHz ChannelID 36 with Bandwith 20/40 MHz ">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:11:32.625" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:11:32.841" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-127.log</msg>
<status status="PASS" starttime="20210618 18:11:32.624" endtime="20210618 18:11:54.997"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:11:54.997" endtime="20210618 18:11:55.049"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:11:57.057" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:11:55.049" endtime="20210618 18:11:57.058"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:11:57.062" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:11:57.459" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:11:57.059" endtime="20210618 18:11:57.648"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:11:59.652" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:11:57.649" endtime="20210618 18:11:59.653"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:11:59.657" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:11:59.654" endtime="20210618 18:12:02.974"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:12:07.996" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:12:02.979" endtime="20210618 18:12:07.997"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:12:07.997" endtime="20210618 18:12:08.022"/>
</kw>
<status status="PASS" starttime="20210618 18:11:32.615" endtime="20210618 18:12:08.022"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>36</arg>
<arg>2</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:12:08.025" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:12:08.024" endtime="20210618 18:12:08.347"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:12:13.356" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:12:08.348" endtime="20210618 18:12:13.358"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:12:13.359" endtime="20210618 18:12:13.390"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:12:13.392" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:12:13.391" endtime="20210618 18:12:13.438"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:12:13.472" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:12:13.439" endtime="20210618 18:12:13.473"/>
</kw>
<status status="PASS" starttime="20210618 18:12:08.024" endtime="20210618 18:12:13.473"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:12:13.476" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:12:13.474" endtime="20210618 18:12:13.778"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:12:13.782" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:12:13.780" endtime="20210618 18:12:14.082"/>
</kw>
<status status="PASS" starttime="20210618 18:12:13.473" endtime="20210618 18:12:14.083"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:12:14.086" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:12:14.085" endtime="20210618 18:12:14.344"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:12:14.348" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:12:14.346" endtime="20210618 18:12:14.605"/>
</kw>
<status status="PASS" starttime="20210618 18:12:14.083" endtime="20210618 18:12:14.606"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:12:14.610" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:12:14.609" endtime="20210618 18:12:14.956"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:12:15.139" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2036%20with%20Bandwith%2020/40%20MHz%20.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2036%20with%20Bandwith%2020/40%20MHz%20.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:12:14.956" endtime="20210618 18:12:15.140"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:12:30.145" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:12:15.142" endtime="20210618 18:12:30.145"/>
</kw>
<status status="PASS" starttime="20210618 18:12:14.607" endtime="20210618 18:12:30.146"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:12:30.147" endtime="20210618 18:12:30.157"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:12:30.161" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:12:30.160" endtime="20210618 18:12:30.564"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:12:32.574" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:12:30.564" endtime="20210618 18:12:32.575"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:12:32.576" endtime="20210618 18:12:37.527"/>
</kw>
<status status="PASS" starttime="20210618 18:12:30.146" endtime="20210618 18:12:37.528"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:12:37.533" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:12:37.531" endtime="20210618 18:12:37.535"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:12:37.660" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:19:14 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:12:37.536" endtime="20210618 18:12:37.661"/>
</kw>
<status status="PASS" starttime="20210618 18:12:37.529" endtime="20210618 18:12:37.663"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:12:37.669" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:12:37.783" level="INFO">ARC_WLAN_5G_Channel=36
#</msg>
<msg timestamp="20210618 18:12:37.785" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=36
#</msg>
<status status="PASS" starttime="20210618 18:12:37.665" endtime="20210618 18:12:37.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:12:37.786" level="INFO">ARC_WLAN_5G_Channel=36
#</msg>
<status status="PASS" starttime="20210618 18:12:37.786" endtime="20210618 18:12:37.786"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:12:37.831" level="INFO">${result_5Ghz} = ['36']</msg>
<status status="PASS" starttime="20210618 18:12:37.787" endtime="20210618 18:12:37.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:12:37.835" level="INFO">5Ghz Channel ID from console is 36</msg>
<status status="PASS" starttime="20210618 18:12:37.833" endtime="20210618 18:12:37.835"/>
</kw>
<msg timestamp="20210618 18:12:37.838" level="INFO">${5Ghz_ChannelID_Console} = 36</msg>
<status status="PASS" starttime="20210618 18:12:37.663" endtime="20210618 18:12:37.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:12:37.840" level="INFO">Channel ID from Console is 36</msg>
<status status="PASS" starttime="20210618 18:12:37.839" endtime="20210618 18:12:37.840"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:12:37.841" endtime="20210618 18:12:37.842"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:12:37.842" endtime="20210618 18:12:37.844"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:13:37.847" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 18:12:37.845" endtime="20210618 18:13:37.848"/>
</kw>
<status status="PASS" starttime="20210618 18:12:37.845" endtime="20210618 18:13:37.848"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:13:37.848" endtime="20210618 18:13:37.849"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:13:37.848" endtime="20210618 18:13:37.849"/>
</branch>
<status status="PASS" starttime="20210618 18:12:37.844" endtime="20210618 18:13:37.849"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:13:37.851" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:13:37.857" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:13:40.420" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:13:37.850" endtime="20210618 18:13:40.422"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:13:40.424" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:13:40.433" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:13:43.294" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:13:43.302" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:13:40.423" endtime="20210618 18:13:43.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:13:43.306" level="INFO">
  
&gt; SSID 5 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 36 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 18:13:43.304" endtime="20210618 18:13:43.306"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:13:43.309" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '36']</msg>
<status status="PASS" starttime="20210618 18:13:43.307" endtime="20210618 18:13:43.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:13:43.316" level="INFO">Analyser Channel IDs are 4 and 36</msg>
<status status="PASS" starttime="20210618 18:13:43.310" endtime="20210618 18:13:43.317"/>
</kw>
<msg timestamp="20210618 18:13:43.325" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '36']</msg>
<status status="PASS" starttime="20210618 18:13:37.849" endtime="20210618 18:13:43.325"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:13:43.328" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:13:43.329" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:13:43.326" endtime="20210618 18:13:43.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:13:43.333" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:13:43.331" endtime="20210618 18:13:43.334"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:13:43.335" endtime="20210618 18:13:43.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:13:43.340" level="INFO">['4', '36']</msg>
<status status="PASS" starttime="20210618 18:13:43.338" endtime="20210618 18:13:43.340"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:13:43.340" endtime="20210618 18:13:43.341"/>
</kw>
<status status="PASS" starttime="20210618 18:12:08.023" endtime="20210618 18:13:43.342"/>
</kw>
<status status="PASS" starttime="20210618 18:11:32.613" endtime="20210618 18:13:43.344"/>
</test>
<test id="s1-t13" name="Verify setting 5GHz ChannelID 40 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:13:43.422" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:13:43.540" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-128.log</msg>
<status status="PASS" starttime="20210618 18:13:43.420" endtime="20210618 18:14:10.212"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:14:10.212" endtime="20210618 18:14:10.308"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:14:12.316" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:14:10.309" endtime="20210618 18:14:12.317"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:14:12.319" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:14:12.756" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:14:12.318" endtime="20210618 18:14:12.868"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:14:14.876" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:14:12.870" endtime="20210618 18:14:14.877"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:14:14.879" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:14:14.878" endtime="20210618 18:14:17.912"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:14:22.915" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:14:17.913" endtime="20210618 18:14:22.915"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:14:22.916" endtime="20210618 18:14:22.940"/>
</kw>
<status status="PASS" starttime="20210618 18:13:43.379" endtime="20210618 18:14:22.942"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>40</arg>
<arg>3</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:14:22.952" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:14:22.950" endtime="20210618 18:14:23.245"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:14:28.261" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:14:23.247" endtime="20210618 18:14:28.262"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:14:28.263" endtime="20210618 18:14:28.291"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:14:28.292" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:14:28.291" endtime="20210618 18:14:28.319"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:14:28.345" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:14:28.319" endtime="20210618 18:14:28.346"/>
</kw>
<status status="PASS" starttime="20210618 18:14:22.950" endtime="20210618 18:14:28.347"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:14:28.351" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:14:28.350" endtime="20210618 18:14:28.669"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:14:28.671" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 18:14:28.670" endtime="20210618 18:14:29.066"/>
</kw>
<status status="PASS" starttime="20210618 18:14:28.348" endtime="20210618 18:14:29.067"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:14:29.072" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:14:29.070" endtime="20210618 18:14:29.357"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:14:29.358" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:14:29.358" endtime="20210618 18:14:29.638"/>
</kw>
<status status="PASS" starttime="20210618 18:14:29.067" endtime="20210618 18:14:29.639"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:14:29.641" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:14:29.640" endtime="20210618 18:14:30.159"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:14:30.675" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2040%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2040%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:14:30.160" endtime="20210618 18:14:30.675"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:14:45.710" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:14:30.676" endtime="20210618 18:14:45.724"/>
</kw>
<status status="PASS" starttime="20210618 18:14:29.639" endtime="20210618 18:14:45.738"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:14:45.741" endtime="20210618 18:14:45.763"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:14:45.764" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:14:45.763" endtime="20210618 18:14:46.497"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:14:48.507" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:14:46.497" endtime="20210618 18:14:48.508"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:14:48.508" endtime="20210618 18:14:51.511"/>
</kw>
<status status="PASS" starttime="20210618 18:14:45.739" endtime="20210618 18:14:51.512"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:14:51.514" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:14:51.513" endtime="20210618 18:14:51.515"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:14:51.928" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:21:28 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:14:51.516" endtime="20210618 18:14:51.929"/>
</kw>
<status status="PASS" starttime="20210618 18:14:51.512" endtime="20210618 18:14:51.930"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:14:51.935" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:14:52.123" level="INFO">ARC_WLAN_5G_Channel=40
#</msg>
<msg timestamp="20210618 18:14:52.123" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=40
#</msg>
<status status="PASS" starttime="20210618 18:14:51.932" endtime="20210618 18:14:52.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:14:52.124" level="INFO">ARC_WLAN_5G_Channel=40
#</msg>
<status status="PASS" starttime="20210618 18:14:52.124" endtime="20210618 18:14:52.125"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:14:52.126" level="INFO">${result_5Ghz} = ['40']</msg>
<status status="PASS" starttime="20210618 18:14:52.125" endtime="20210618 18:14:52.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:14:52.128" level="INFO">5Ghz Channel ID from console is 40</msg>
<status status="PASS" starttime="20210618 18:14:52.126" endtime="20210618 18:14:52.128"/>
</kw>
<msg timestamp="20210618 18:14:52.129" level="INFO">${5Ghz_ChannelID_Console} = 40</msg>
<status status="PASS" starttime="20210618 18:14:51.930" endtime="20210618 18:14:52.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:14:52.130" level="INFO">Channel ID from Console is 40</msg>
<status status="PASS" starttime="20210618 18:14:52.129" endtime="20210618 18:14:52.130"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:14:52.130" endtime="20210618 18:14:52.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:14:52.131" endtime="20210618 18:14:52.132"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:37:52.526" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 18:14:52.132" endtime="20210618 18:37:52.526"/>
</kw>
<status status="PASS" starttime="20210618 18:14:52.132" endtime="20210618 18:37:52.526"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:37:52.526" endtime="20210618 18:37:52.527"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:37:52.526" endtime="20210618 18:37:52.527"/>
</branch>
<status status="PASS" starttime="20210618 18:14:52.132" endtime="20210618 18:37:52.527"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:37:52.528" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:37:54.228" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:38:06.489" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:37:52.527" endtime="20210618 18:38:06.490"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:38:06.493" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:38:06.512" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:38:07.895" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:38:07.896" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:38:06.491" endtime="20210618 18:38:07.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:38:07.898" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 18:38:07.896" endtime="20210618 18:38:07.899"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:38:07.903" level="INFO">${Analyser_ChannelID_5Ghz} = ['40', '4']</msg>
<status status="PASS" starttime="20210618 18:38:07.899" endtime="20210618 18:38:07.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:38:07.912" level="INFO">Analyser Channel IDs are 40 and 4</msg>
<status status="PASS" starttime="20210618 18:38:07.903" endtime="20210618 18:38:07.912"/>
</kw>
<msg timestamp="20210618 18:38:07.919" level="INFO">${5Ghz_ChannelID_Analyser} = ['40', '4']</msg>
<status status="PASS" starttime="20210618 18:37:52.527" endtime="20210618 18:38:07.920"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:38:07.923" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:38:07.925" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:38:07.921" endtime="20210618 18:38:07.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:38:07.927" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:38:07.926" endtime="20210618 18:38:07.927"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:38:07.927" endtime="20210618 18:38:07.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:38:07.929" level="INFO">['40', '4']</msg>
<status status="PASS" starttime="20210618 18:38:07.928" endtime="20210618 18:38:07.929"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:38:07.929" endtime="20210618 18:38:07.930"/>
</kw>
<status status="PASS" starttime="20210618 18:14:22.948" endtime="20210618 18:38:07.930"/>
</kw>
<status status="PASS" starttime="20210618 18:13:43.373" endtime="20210618 18:38:07.932"/>
</test>
<test id="s1-t14" name="Verify setting 5GHz ChannelID 44 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:38:07.978" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:38:08.032" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-129.log</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:39:14.194" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<status status="PASS" starttime="20210618 18:39:14.194" endtime="20210618 18:39:14.195"/>
</kw>
<msg timestamp="20210618 18:39:14.218" level="FAIL">TimeoutException: Message: No connection could be made because the target machine actively refused it. (os error 10061)
</msg>
<status status="FAIL" starttime="20210618 18:38:07.976" endtime="20210618 18:39:14.218"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="NOT RUN" starttime="20210618 18:39:14.219" endtime="20210618 18:39:14.219"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:39:14.220" endtime="20210618 18:39:14.220"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" starttime="20210618 18:39:14.221" endtime="20210618 18:39:14.221"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:39:14.221" endtime="20210618 18:39:14.221"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20210618 18:39:14.221" endtime="20210618 18:39:14.222"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:39:14.222" endtime="20210618 18:39:14.222"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20210618 18:39:14.222" endtime="20210618 18:39:14.222"/>
</kw>
<status status="FAIL" starttime="20210618 18:38:07.963" endtime="20210618 18:39:14.223"/>
</kw>
<status status="FAIL" starttime="20210618 18:38:07.945" endtime="20210618 18:39:15.332">Setup failed:
TimeoutException: Message: No connection could be made because the target machine actively refused it. (os error 10061)
</status>
</test>
<test id="s1-t15" name="Verify setting 5GHz ChannelID 48 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:39:19.733" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:39:20.195" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-130.log</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:40:28.802" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<status status="PASS" starttime="20210618 18:40:28.800" endtime="20210618 18:40:28.803"/>
</kw>
<msg timestamp="20210618 18:40:28.806" level="FAIL">TimeoutException: Message: No connection could be made because the target machine actively refused it. (os error 10061)
</msg>
<status status="FAIL" starttime="20210618 18:39:19.731" endtime="20210618 18:40:28.806"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="NOT RUN" starttime="20210618 18:40:28.806" endtime="20210618 18:40:28.807"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:40:28.807" endtime="20210618 18:40:28.807"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" starttime="20210618 18:40:28.807" endtime="20210618 18:40:28.808"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:40:28.809" endtime="20210618 18:40:28.809"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20210618 18:40:28.810" endtime="20210618 18:40:28.810"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:40:28.812" endtime="20210618 18:40:28.812"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20210618 18:40:28.813" endtime="20210618 18:40:28.813"/>
</kw>
<status status="FAIL" starttime="20210618 18:39:19.722" endtime="20210618 18:40:28.815"/>
</kw>
<status status="FAIL" starttime="20210618 18:39:19.186" endtime="20210618 18:40:29.645">Setup failed:
TimeoutException: Message: No connection could be made because the target machine actively refused it. (os error 10061)
</status>
</test>
<test id="s1-t16" name="Verify setting 5GHz ChannelID 52 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:40:34.286" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:40:34.981" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-131.log</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:41:42.430" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<status status="PASS" starttime="20210618 18:41:42.428" endtime="20210618 18:41:42.430"/>
</kw>
<msg timestamp="20210618 18:41:42.439" level="FAIL">TimeoutException: Message: No connection could be made because the target machine actively refused it. (os error 10061)
</msg>
<status status="FAIL" starttime="20210618 18:40:34.284" endtime="20210618 18:41:42.440"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="NOT RUN" starttime="20210618 18:41:42.440" endtime="20210618 18:41:42.441"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:41:42.441" endtime="20210618 18:41:42.441"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" starttime="20210618 18:41:42.441" endtime="20210618 18:41:42.442"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:41:42.442" endtime="20210618 18:41:42.442"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20210618 18:41:42.443" endtime="20210618 18:41:42.443"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:41:42.443" endtime="20210618 18:41:42.443"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="NOT RUN" starttime="20210618 18:41:42.444" endtime="20210618 18:41:42.444"/>
</kw>
<status status="FAIL" starttime="20210618 18:40:34.281" endtime="20210618 18:41:42.444"/>
</kw>
<status status="FAIL" starttime="20210618 18:40:34.074" endtime="20210618 18:41:42.506">Setup failed:
TimeoutException: Message: No connection could be made because the target machine actively refused it. (os error 10061)
</status>
</test>
<test id="s1-t17" name="Verify setting 5GHz ChannelID 56 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:41:42.867" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:41:43.051" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-132.log</msg>
<status status="PASS" starttime="20210618 18:41:42.863" endtime="20210618 18:42:26.178"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:42:26.179" endtime="20210618 18:42:26.304"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:42:28.336" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:42:26.305" endtime="20210618 18:42:28.336"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:42:28.338" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:42:29.372" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:42:28.337" endtime="20210618 18:42:30.062"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:42:32.082" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:42:30.063" endtime="20210618 18:42:32.083"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:42:32.086" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:42:32.084" endtime="20210618 18:42:35.184"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:42:40.193" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:42:35.186" endtime="20210618 18:42:40.194"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:42:40.195" endtime="20210618 18:42:40.240"/>
</kw>
<status status="PASS" starttime="20210618 18:41:42.853" endtime="20210618 18:42:40.242"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>56</arg>
<arg>7</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:42:40.254" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:42:40.251" endtime="20210618 18:42:40.725"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:42:45.735" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:42:40.725" endtime="20210618 18:42:45.735"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:42:45.736" endtime="20210618 18:42:48.049"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:42:48.051" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:42:48.050" endtime="20210618 18:42:48.118"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:42:48.176" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:42:48.121" endtime="20210618 18:42:48.176"/>
</kw>
<status status="PASS" starttime="20210618 18:42:40.249" endtime="20210618 18:42:48.177"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:42:48.181" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:42:48.180" endtime="20210618 18:42:48.864"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:42:48.867" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[7]/a'.</msg>
<status status="PASS" starttime="20210618 18:42:48.865" endtime="20210618 18:42:49.141"/>
</kw>
<status status="PASS" starttime="20210618 18:42:48.178" endtime="20210618 18:42:49.142"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:42:49.144" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:42:49.143" endtime="20210618 18:42:49.449"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:42:49.454" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:42:49.451" endtime="20210618 18:42:49.724"/>
</kw>
<status status="PASS" starttime="20210618 18:42:49.142" endtime="20210618 18:42:49.725"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:42:49.729" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:42:49.727" endtime="20210618 18:42:50.202"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:42:50.456" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2056%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2056%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:42:50.203" endtime="20210618 18:42:50.457"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:43:05.471" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:42:50.458" endtime="20210618 18:43:05.473"/>
</kw>
<status status="PASS" starttime="20210618 18:42:49.726" endtime="20210618 18:43:05.473"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:43:05.474" endtime="20210618 18:43:05.480"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:43:05.482" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:43:05.481" endtime="20210618 18:43:05.891"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:43:07.923" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:43:05.891" endtime="20210618 18:43:07.924"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:43:07.926" endtime="20210618 18:43:12.409"/>
</kw>
<status status="PASS" starttime="20210618 18:43:05.474" endtime="20210618 18:43:12.409"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:43:12.410" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:43:12.410" endtime="20210618 18:43:12.411"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:43:12.823" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:49:50 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:43:12.412" endtime="20210618 18:43:12.823"/>
</kw>
<status status="PASS" starttime="20210618 18:43:12.410" endtime="20210618 18:43:12.824"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:43:12.829" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:43:13.012" level="INFO">ARC_WLAN_5G_Channel=56
#</msg>
<msg timestamp="20210618 18:43:13.013" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=56
#</msg>
<status status="PASS" starttime="20210618 18:43:12.826" endtime="20210618 18:43:13.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:43:13.013" level="INFO">ARC_WLAN_5G_Channel=56
#</msg>
<status status="PASS" starttime="20210618 18:43:13.013" endtime="20210618 18:43:13.014"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:43:13.014" level="INFO">${result_5Ghz} = ['56']</msg>
<status status="PASS" starttime="20210618 18:43:13.014" endtime="20210618 18:43:13.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:43:13.017" level="INFO">5Ghz Channel ID from console is 56</msg>
<status status="PASS" starttime="20210618 18:43:13.015" endtime="20210618 18:43:13.018"/>
</kw>
<msg timestamp="20210618 18:43:13.020" level="INFO">${5Ghz_ChannelID_Console} = 56</msg>
<status status="PASS" starttime="20210618 18:43:12.824" endtime="20210618 18:43:13.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:43:13.021" level="INFO">Channel ID from Console is 56</msg>
<status status="PASS" starttime="20210618 18:43:13.020" endtime="20210618 18:43:13.021"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:43:13.021" endtime="20210618 18:43:13.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:43:13.022" endtime="20210618 18:43:13.022"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:44:13.031" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 18:43:13.023" endtime="20210618 18:44:13.032"/>
</kw>
<status status="PASS" starttime="20210618 18:43:13.023" endtime="20210618 18:44:13.032"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:44:13.032" endtime="20210618 18:44:13.032"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:44:13.032" endtime="20210618 18:44:13.032"/>
</branch>
<status status="PASS" starttime="20210618 18:43:13.023" endtime="20210618 18:44:13.032"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:44:13.033" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:44:13.434" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:44:15.885" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:44:13.033" endtime="20210618 18:44:15.885"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:44:15.886" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:44:15.889" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:44:16.518" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:44:16.519" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:44:15.886" endtime="20210618 18:44:16.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:44:16.520" level="INFO">
  
&gt; SSID 1 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 56 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 18:44:16.519" endtime="20210618 18:44:16.520"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:44:16.521" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '56']</msg>
<status status="PASS" starttime="20210618 18:44:16.520" endtime="20210618 18:44:16.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:44:16.523" level="INFO">Analyser Channel IDs are 4 and 56</msg>
<status status="PASS" starttime="20210618 18:44:16.521" endtime="20210618 18:44:16.523"/>
</kw>
<msg timestamp="20210618 18:44:16.526" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '56']</msg>
<status status="PASS" starttime="20210618 18:44:13.032" endtime="20210618 18:44:16.526"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:44:16.527" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:44:16.527" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:44:16.526" endtime="20210618 18:44:16.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:44:16.528" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:44:16.528" endtime="20210618 18:44:16.528"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:44:16.529" endtime="20210618 18:44:16.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:44:16.529" level="INFO">['4', '56']</msg>
<status status="PASS" starttime="20210618 18:44:16.529" endtime="20210618 18:44:16.529"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:44:16.530" endtime="20210618 18:44:16.530"/>
</kw>
<status status="PASS" starttime="20210618 18:42:40.246" endtime="20210618 18:44:16.530"/>
</kw>
<status status="PASS" starttime="20210618 18:41:42.829" endtime="20210618 18:44:16.531"/>
</test>
<test id="s1-t18" name="Verify setting 5GHz ChannelID 60 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:44:16.534" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:44:16.556" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-133.log</msg>
<status status="PASS" starttime="20210618 18:44:16.534" endtime="20210618 18:44:29.445"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:44:29.446" endtime="20210618 18:44:29.475"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:44:31.487" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:44:29.476" endtime="20210618 18:44:31.487"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:44:31.488" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:44:31.807" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:44:31.487" endtime="20210618 18:44:31.862"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:44:33.872" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:44:31.863" endtime="20210618 18:44:33.873"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:44:33.875" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:44:33.873" endtime="20210618 18:44:35.578"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:44:40.579" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:44:35.578" endtime="20210618 18:44:40.579"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:44:40.579" endtime="20210618 18:44:40.594"/>
</kw>
<status status="PASS" starttime="20210618 18:44:16.533" endtime="20210618 18:44:40.595"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>60</arg>
<arg>8</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:44:40.597" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:44:40.597" endtime="20210618 18:44:40.663"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:44:45.665" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:44:40.664" endtime="20210618 18:44:45.665"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:44:45.666" endtime="20210618 18:44:45.674"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:44:45.675" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:44:45.674" endtime="20210618 18:44:45.684"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:44:45.692" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:44:45.685" endtime="20210618 18:44:45.692"/>
</kw>
<status status="PASS" starttime="20210618 18:44:40.596" endtime="20210618 18:44:45.693"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:44:45.694" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:44:45.694" endtime="20210618 18:44:45.924"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:44:45.925" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[8]/a'.</msg>
<status status="PASS" starttime="20210618 18:44:45.924" endtime="20210618 18:44:46.150"/>
</kw>
<status status="PASS" starttime="20210618 18:44:45.693" endtime="20210618 18:44:46.151"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:44:46.152" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:44:46.151" endtime="20210618 18:44:46.376"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:44:46.377" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:44:46.376" endtime="20210618 18:44:46.603"/>
</kw>
<status status="PASS" starttime="20210618 18:44:46.151" endtime="20210618 18:44:46.603"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:44:46.604" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:44:46.604" endtime="20210618 18:44:46.859"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:44:47.012" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2060%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2060%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:44:46.860" endtime="20210618 18:44:47.012"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:45:02.027" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:44:47.013" endtime="20210618 18:45:02.027"/>
</kw>
<status status="PASS" starttime="20210618 18:44:46.603" endtime="20210618 18:45:02.028"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:45:02.028" endtime="20210618 18:45:02.032"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:45:02.032" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:45:02.032" endtime="20210618 18:45:02.269"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:45:04.279" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:45:02.270" endtime="20210618 18:45:04.279"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:45:04.279" endtime="20210618 18:45:05.511"/>
</kw>
<status status="PASS" starttime="20210618 18:45:02.028" endtime="20210618 18:45:05.511"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:45:05.513" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:45:05.513" endtime="20210618 18:45:05.515"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:45:05.649" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:51:43 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:45:05.515" endtime="20210618 18:45:05.649"/>
</kw>
<status status="PASS" starttime="20210618 18:45:05.512" endtime="20210618 18:45:05.650"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:45:05.653" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:45:05.754" level="INFO">ARC_WLAN_5G_Channel=60
#</msg>
<msg timestamp="20210618 18:45:05.755" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=60
#</msg>
<status status="PASS" starttime="20210618 18:45:05.651" endtime="20210618 18:45:05.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:45:05.755" level="INFO">ARC_WLAN_5G_Channel=60
#</msg>
<status status="PASS" starttime="20210618 18:45:05.755" endtime="20210618 18:45:05.755"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:45:05.756" level="INFO">${result_5Ghz} = ['60']</msg>
<status status="PASS" starttime="20210618 18:45:05.755" endtime="20210618 18:45:05.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:45:05.757" level="INFO">5Ghz Channel ID from console is 60</msg>
<status status="PASS" starttime="20210618 18:45:05.756" endtime="20210618 18:45:05.757"/>
</kw>
<msg timestamp="20210618 18:45:05.758" level="INFO">${5Ghz_ChannelID_Console} = 60</msg>
<status status="PASS" starttime="20210618 18:45:05.650" endtime="20210618 18:45:05.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:45:05.758" level="INFO">Channel ID from Console is 60</msg>
<status status="PASS" starttime="20210618 18:45:05.758" endtime="20210618 18:45:05.758"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:45:05.758" endtime="20210618 18:45:05.759"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:45:05.759" endtime="20210618 18:45:05.759"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:46:05.766" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 18:45:05.759" endtime="20210618 18:46:05.766"/>
</kw>
<status status="PASS" starttime="20210618 18:45:05.759" endtime="20210618 18:46:05.766"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:46:05.767" endtime="20210618 18:46:05.767"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:46:05.766" endtime="20210618 18:46:05.767"/>
</branch>
<status status="PASS" starttime="20210618 18:45:05.759" endtime="20210618 18:46:05.767"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:46:05.768" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:46:05.774" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:46:06.419" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:46:05.767" endtime="20210618 18:46:06.419"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:46:06.420" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:46:06.425" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:46:07.069" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:46:07.070" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:46:06.419" endtime="20210618 18:46:07.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:46:07.071" level="INFO">
  
&gt; SSID 4 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 60 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 18:46:07.070" endtime="20210618 18:46:07.071"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:46:07.074" level="INFO">${Analyser_ChannelID_5Ghz} = ['60', '4']</msg>
<status status="PASS" starttime="20210618 18:46:07.072" endtime="20210618 18:46:07.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:46:07.076" level="INFO">Analyser Channel IDs are 60 and 4</msg>
<status status="PASS" starttime="20210618 18:46:07.074" endtime="20210618 18:46:07.077"/>
</kw>
<msg timestamp="20210618 18:46:07.078" level="INFO">${5Ghz_ChannelID_Analyser} = ['60', '4']</msg>
<status status="PASS" starttime="20210618 18:46:05.767" endtime="20210618 18:46:07.078"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:46:07.079" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:46:07.079" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:46:07.078" endtime="20210618 18:46:07.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:46:07.079" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:46:07.079" endtime="20210618 18:46:07.079"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:46:07.079" endtime="20210618 18:46:07.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:46:07.080" level="INFO">['60', '4']</msg>
<status status="PASS" starttime="20210618 18:46:07.080" endtime="20210618 18:46:07.080"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:46:07.080" endtime="20210618 18:46:07.080"/>
</kw>
<status status="PASS" starttime="20210618 18:44:40.595" endtime="20210618 18:46:07.081"/>
</kw>
<status status="PASS" starttime="20210618 18:44:16.532" endtime="20210618 18:46:07.081"/>
</test>
<test id="s1-t19" name="Verify setting 5GHz ChannelID 64 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:46:07.085" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:46:07.113" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-134.log</msg>
<status status="PASS" starttime="20210618 18:46:07.084" endtime="20210618 18:46:17.363"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:46:17.363" endtime="20210618 18:46:17.636"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:46:19.644" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:46:17.637" endtime="20210618 18:46:19.644"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:46:19.645" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:46:19.954" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:46:19.644" endtime="20210618 18:46:19.974"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:46:21.976" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:46:19.974" endtime="20210618 18:46:21.976"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:46:21.978" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:46:21.976" endtime="20210618 18:46:24.095"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:46:29.106" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:46:24.095" endtime="20210618 18:46:29.106"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:46:29.107" endtime="20210618 18:46:29.117"/>
</kw>
<status status="PASS" starttime="20210618 18:46:07.084" endtime="20210618 18:46:29.117"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>64</arg>
<arg>9</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:46:29.118" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:46:29.118" endtime="20210618 18:46:29.164"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:46:34.177" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:46:29.165" endtime="20210618 18:46:34.177"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:46:34.177" endtime="20210618 18:46:34.184"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:46:34.185" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:46:34.185" endtime="20210618 18:46:34.193"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:46:34.200" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:46:34.193" endtime="20210618 18:46:34.201"/>
</kw>
<status status="PASS" starttime="20210618 18:46:29.118" endtime="20210618 18:46:34.201"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:46:34.202" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:46:34.202" endtime="20210618 18:46:34.437"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:46:34.437" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[9]/a'.</msg>
<status status="PASS" starttime="20210618 18:46:34.437" endtime="20210618 18:46:34.665"/>
</kw>
<status status="PASS" starttime="20210618 18:46:34.202" endtime="20210618 18:46:34.665"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:46:34.666" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:46:34.666" endtime="20210618 18:46:34.891"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:46:34.891" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:46:34.891" endtime="20210618 18:46:35.118"/>
</kw>
<status status="PASS" starttime="20210618 18:46:34.666" endtime="20210618 18:46:35.119"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:46:35.120" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:46:35.120" endtime="20210618 18:46:35.392"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:46:35.589" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2064%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2064%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:46:35.393" endtime="20210618 18:46:35.589"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:46:50.591" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:46:35.590" endtime="20210618 18:46:50.591"/>
</kw>
<status status="PASS" starttime="20210618 18:46:35.119" endtime="20210618 18:46:50.591"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:46:50.592" endtime="20210618 18:46:50.595"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:46:50.596" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:46:50.595" endtime="20210618 18:46:50.836"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:46:52.843" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:46:50.836" endtime="20210618 18:46:52.843"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:46:52.843" endtime="20210618 18:46:54.063"/>
</kw>
<status status="PASS" starttime="20210618 18:46:50.591" endtime="20210618 18:46:54.064"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:46:54.064" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:46:54.064" endtime="20210618 18:46:54.066"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:46:54.213" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:53:31 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:46:54.066" endtime="20210618 18:46:54.213"/>
</kw>
<status status="PASS" starttime="20210618 18:46:54.064" endtime="20210618 18:46:54.214"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:46:54.259" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:46:54.306" level="INFO">ARC_WLAN_5G_Channel=64
#</msg>
<msg timestamp="20210618 18:46:54.306" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=64
#</msg>
<status status="PASS" starttime="20210618 18:46:54.214" endtime="20210618 18:46:54.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:46:54.307" level="INFO">ARC_WLAN_5G_Channel=64
#</msg>
<status status="PASS" starttime="20210618 18:46:54.306" endtime="20210618 18:46:54.307"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:46:54.307" level="INFO">${result_5Ghz} = ['64']</msg>
<status status="PASS" starttime="20210618 18:46:54.307" endtime="20210618 18:46:54.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:46:54.308" level="INFO">5Ghz Channel ID from console is 64</msg>
<status status="PASS" starttime="20210618 18:46:54.307" endtime="20210618 18:46:54.308"/>
</kw>
<msg timestamp="20210618 18:46:54.309" level="INFO">${5Ghz_ChannelID_Console} = 64</msg>
<status status="PASS" starttime="20210618 18:46:54.214" endtime="20210618 18:46:54.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:46:54.310" level="INFO">Channel ID from Console is 64</msg>
<status status="PASS" starttime="20210618 18:46:54.310" endtime="20210618 18:46:54.310"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:46:54.310" endtime="20210618 18:46:54.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:46:54.310" endtime="20210618 18:46:54.311"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:47:54.324" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 18:46:54.311" endtime="20210618 18:47:54.324"/>
</kw>
<status status="PASS" starttime="20210618 18:46:54.311" endtime="20210618 18:47:54.324"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:47:54.325" endtime="20210618 18:47:54.325"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:47:54.324" endtime="20210618 18:47:54.325"/>
</branch>
<status status="PASS" starttime="20210618 18:46:54.311" endtime="20210618 18:47:54.325"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:47:54.326" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:47:54.330" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:47:54.961" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:47:54.325" endtime="20210618 18:47:54.961"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:47:54.962" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:47:54.970" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:47:55.569" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:47:55.569" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:47:54.961" endtime="20210618 18:47:55.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:47:55.571" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 98%  
           Radio type         : 802.11ac
           Channel            : 64 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 18:47:55.569" endtime="20210618 18:47:55.571"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:47:55.573" level="INFO">${Analyser_ChannelID_5Ghz} = ['64', '4']</msg>
<status status="PASS" starttime="20210618 18:47:55.572" endtime="20210618 18:47:55.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:47:55.575" level="INFO">Analyser Channel IDs are 64 and 4</msg>
<status status="PASS" starttime="20210618 18:47:55.573" endtime="20210618 18:47:55.575"/>
</kw>
<msg timestamp="20210618 18:47:55.576" level="INFO">${5Ghz_ChannelID_Analyser} = ['64', '4']</msg>
<status status="PASS" starttime="20210618 18:47:54.325" endtime="20210618 18:47:55.576"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:47:55.577" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:47:55.577" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:47:55.577" endtime="20210618 18:47:55.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:47:55.577" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:47:55.577" endtime="20210618 18:47:55.577"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:47:55.578" endtime="20210618 18:47:55.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:47:55.578" level="INFO">['64', '4']</msg>
<status status="PASS" starttime="20210618 18:47:55.578" endtime="20210618 18:47:55.578"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:47:55.578" endtime="20210618 18:47:55.579"/>
</kw>
<status status="PASS" starttime="20210618 18:46:29.117" endtime="20210618 18:47:55.579"/>
</kw>
<status status="PASS" starttime="20210618 18:46:07.083" endtime="20210618 18:47:55.579"/>
</test>
<test id="s1-t20" name="Verify setting 5GHz ChannelID 100 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:47:55.586" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:47:55.605" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-135.log</msg>
<status status="PASS" starttime="20210618 18:47:55.585" endtime="20210618 18:48:06.097"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:48:06.097" endtime="20210618 18:48:06.395"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:48:08.405" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:48:06.395" endtime="20210618 18:48:08.405"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:48:08.406" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:48:08.701" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:48:08.405" endtime="20210618 18:48:08.720"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:48:10.721" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:48:08.720" endtime="20210618 18:48:10.721"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:48:10.722" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:48:10.721" endtime="20210618 18:48:12.758"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:48:17.760" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:48:12.758" endtime="20210618 18:48:17.760"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:48:17.760" endtime="20210618 18:48:17.767"/>
</kw>
<status status="PASS" starttime="20210618 18:47:55.584" endtime="20210618 18:48:17.768"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>100</arg>
<arg>10</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:48:17.770" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:48:17.769" endtime="20210618 18:48:17.829"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:48:22.843" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:48:17.830" endtime="20210618 18:48:22.844"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:48:22.844" endtime="20210618 18:48:22.850"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:48:22.851" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:48:22.851" endtime="20210618 18:48:22.859"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:48:22.866" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:48:22.860" endtime="20210618 18:48:22.866"/>
</kw>
<status status="PASS" starttime="20210618 18:48:17.769" endtime="20210618 18:48:22.867"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:48:22.867" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:48:22.867" endtime="20210618 18:48:23.103"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:48:23.103" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[10]/a'.</msg>
<status status="PASS" starttime="20210618 18:48:23.103" endtime="20210618 18:48:23.329"/>
</kw>
<status status="PASS" starttime="20210618 18:48:22.867" endtime="20210618 18:48:23.329"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:48:23.330" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:48:23.330" endtime="20210618 18:48:23.556"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:48:23.557" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:48:23.556" endtime="20210618 18:48:23.785"/>
</kw>
<status status="PASS" starttime="20210618 18:48:23.329" endtime="20210618 18:48:23.785"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:48:23.786" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:48:23.786" endtime="20210618 18:48:24.042"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:48:24.227" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20100%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20100%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:48:24.042" endtime="20210618 18:48:24.227"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:48:39.237" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:48:24.227" endtime="20210618 18:48:39.237"/>
</kw>
<status status="PASS" starttime="20210618 18:48:23.786" endtime="20210618 18:48:39.237"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:48:39.238" endtime="20210618 18:48:39.242"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:48:39.243" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:48:39.243" endtime="20210618 18:48:39.481"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:48:41.486" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:48:39.481" endtime="20210618 18:48:41.486"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:48:41.486" endtime="20210618 18:48:42.856"/>
</kw>
<status status="PASS" starttime="20210618 18:48:39.238" endtime="20210618 18:48:42.857"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:48:42.858" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:48:42.858" endtime="20210618 18:48:42.859"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:48:43.002" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:55:20 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:48:42.859" endtime="20210618 18:48:43.002"/>
</kw>
<status status="PASS" starttime="20210618 18:48:42.857" endtime="20210618 18:48:43.003"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:48:43.006" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:48:43.108" level="INFO">ARC_WLAN_5G_Channel=100
#</msg>
<msg timestamp="20210618 18:48:43.108" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=100
#</msg>
<status status="PASS" starttime="20210618 18:48:43.003" endtime="20210618 18:48:43.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:48:43.109" level="INFO">ARC_WLAN_5G_Channel=100
#</msg>
<status status="PASS" starttime="20210618 18:48:43.109" endtime="20210618 18:48:43.109"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:48:43.109" level="INFO">${result_5Ghz} = ['100']</msg>
<status status="PASS" starttime="20210618 18:48:43.109" endtime="20210618 18:48:43.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:48:43.111" level="INFO">5Ghz Channel ID from console is 100</msg>
<status status="PASS" starttime="20210618 18:48:43.110" endtime="20210618 18:48:43.111"/>
</kw>
<msg timestamp="20210618 18:48:43.111" level="INFO">${5Ghz_ChannelID_Console} = 100</msg>
<status status="PASS" starttime="20210618 18:48:43.003" endtime="20210618 18:48:43.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:48:43.112" level="INFO">Channel ID from Console is 100</msg>
<status status="PASS" starttime="20210618 18:48:43.112" endtime="20210618 18:48:43.112"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:48:43.112" endtime="20210618 18:48:43.113"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:48:43.114" endtime="20210618 18:48:43.115"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:48:43.115" endtime="20210618 18:48:43.115"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:48:43.115" endtime="20210618 18:48:43.115"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:51:13.126" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 18:48:43.116" endtime="20210618 18:51:13.126"/>
</kw>
<status status="PASS" starttime="20210618 18:48:43.115" endtime="20210618 18:51:13.126"/>
</branch>
<status status="PASS" starttime="20210618 18:48:43.115" endtime="20210618 18:51:13.126"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:51:13.137" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:51:13.141" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:51:13.729" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:51:13.127" endtime="20210618 18:51:13.729"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:51:13.731" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:51:13.735" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:51:14.338" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:51:14.338" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:51:13.730" endtime="20210618 18:51:14.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:51:14.339" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 9 : VGV75194AB277
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 50:7e:5d:4a:b2:77
           Signal             : 28%  

</msg>
<status status="PASS" starttime="20210618 18:51:14.338" endtime="20210618 18:51:14.340"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:51:14.341" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 18:51:14.340" endtime="20210618 18:51:14.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:51:14.343" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 18:51:14.341" endtime="20210618 18:51:14.343"/>
</kw>
<status status="FAIL" starttime="20210618 18:51:13.127" endtime="20210618 18:51:14.344"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 18:51:14.344" endtime="20210618 18:51:14.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 18:51:14.344" endtime="20210618 18:51:14.344"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 18:51:14.344" endtime="20210618 18:51:14.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 18:51:14.344" endtime="20210618 18:51:14.344"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 18:51:14.344" endtime="20210618 18:51:14.345"/>
</kw>
<status status="FAIL" starttime="20210618 18:48:17.769" endtime="20210618 18:51:14.345"/>
</kw>
<status status="FAIL" starttime="20210618 18:47:55.583" endtime="20210618 18:51:14.345">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t21" name="Verify setting 5GHz ChannelID 104 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:51:14.352" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:51:14.378" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-136.log</msg>
<status status="PASS" starttime="20210618 18:51:14.352" endtime="20210618 18:51:24.818"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:51:24.819" endtime="20210618 18:51:25.296"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:51:27.306" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:51:25.297" endtime="20210618 18:51:27.306"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:51:27.307" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:51:27.601" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:51:27.306" endtime="20210618 18:51:27.620"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:51:29.622" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:51:27.621" endtime="20210618 18:51:29.622"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:51:29.623" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:51:29.622" endtime="20210618 18:51:31.693"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:51:36.707" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:51:31.693" endtime="20210618 18:51:36.707"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:51:36.707" endtime="20210618 18:51:36.715"/>
</kw>
<status status="PASS" starttime="20210618 18:51:14.351" endtime="20210618 18:51:36.715"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>104</arg>
<arg>11</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:51:36.717" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:51:36.717" endtime="20210618 18:51:36.763"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:51:41.771" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:51:36.763" endtime="20210618 18:51:41.771"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:51:41.771" endtime="20210618 18:51:41.781"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:51:41.782" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:51:41.781" endtime="20210618 18:51:41.790"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:51:41.798" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:51:41.790" endtime="20210618 18:51:41.798"/>
</kw>
<status status="PASS" starttime="20210618 18:51:36.717" endtime="20210618 18:51:41.798"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:51:41.800" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:51:41.799" endtime="20210618 18:51:42.028"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:51:42.029" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[11]/a'.</msg>
<status status="PASS" starttime="20210618 18:51:42.029" endtime="20210618 18:51:42.255"/>
</kw>
<status status="PASS" starttime="20210618 18:51:41.799" endtime="20210618 18:51:42.255"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:51:42.256" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:51:42.256" endtime="20210618 18:51:42.484"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:51:42.484" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:51:42.484" endtime="20210618 18:51:42.711"/>
</kw>
<status status="PASS" starttime="20210618 18:51:42.256" endtime="20210618 18:51:42.712"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:51:42.712" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:51:42.712" endtime="20210618 18:51:42.968"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:51:43.311" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20104%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20104%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:51:42.969" endtime="20210618 18:51:43.311"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:51:58.315" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:51:43.311" endtime="20210618 18:51:58.315"/>
</kw>
<status status="PASS" starttime="20210618 18:51:42.712" endtime="20210618 18:51:58.316"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:51:58.317" endtime="20210618 18:51:58.320"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:51:58.320" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:51:58.320" endtime="20210618 18:51:58.764"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:52:00.776" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:51:58.764" endtime="20210618 18:52:00.776"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:52:00.776" endtime="20210618 18:52:02.024"/>
</kw>
<status status="PASS" starttime="20210618 18:51:58.316" endtime="20210618 18:52:02.024"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:52:02.025" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:52:02.025" endtime="20210618 18:52:02.026"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:52:02.175" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 09:58:39 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:52:02.026" endtime="20210618 18:52:02.175"/>
</kw>
<status status="PASS" starttime="20210618 18:52:02.025" endtime="20210618 18:52:02.175"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:52:02.179" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:52:02.281" level="INFO">ARC_WLAN_5G_Channel=104
#</msg>
<msg timestamp="20210618 18:52:02.281" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=104
#</msg>
<status status="PASS" starttime="20210618 18:52:02.176" endtime="20210618 18:52:02.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:52:02.282" level="INFO">ARC_WLAN_5G_Channel=104
#</msg>
<status status="PASS" starttime="20210618 18:52:02.282" endtime="20210618 18:52:02.282"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:52:02.282" level="INFO">${result_5Ghz} = ['104']</msg>
<status status="PASS" starttime="20210618 18:52:02.282" endtime="20210618 18:52:02.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:52:02.284" level="INFO">5Ghz Channel ID from console is 104</msg>
<status status="PASS" starttime="20210618 18:52:02.283" endtime="20210618 18:52:02.284"/>
</kw>
<msg timestamp="20210618 18:52:02.285" level="INFO">${5Ghz_ChannelID_Console} = 104</msg>
<status status="PASS" starttime="20210618 18:52:02.176" endtime="20210618 18:52:02.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:52:02.285" level="INFO">Channel ID from Console is 104</msg>
<status status="PASS" starttime="20210618 18:52:02.285" endtime="20210618 18:52:02.285"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:52:02.285" endtime="20210618 18:52:02.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:52:02.286" endtime="20210618 18:52:02.286"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:52:02.287" endtime="20210618 18:52:02.287"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:52:02.286" endtime="20210618 18:52:02.287"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:54:32.300" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 18:52:02.287" endtime="20210618 18:54:32.300"/>
</kw>
<status status="PASS" starttime="20210618 18:52:02.287" endtime="20210618 18:54:32.300"/>
</branch>
<status status="PASS" starttime="20210618 18:52:02.286" endtime="20210618 18:54:32.300"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:54:32.301" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:54:32.305" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:54:32.905" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:54:32.301" endtime="20210618 18:54:32.905"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:54:32.906" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:54:32.910" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:54:33.489" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:54:33.490" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:54:32.906" endtime="20210618 18:54:33.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:54:33.491" level="INFO">
  
&gt; SSID 2 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 104 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 18:54:33.490" endtime="20210618 18:54:33.491"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:54:33.492" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '104']</msg>
<status status="PASS" starttime="20210618 18:54:33.491" endtime="20210618 18:54:33.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:54:33.494" level="INFO">Analyser Channel IDs are 4 and 104</msg>
<status status="PASS" starttime="20210618 18:54:33.492" endtime="20210618 18:54:33.494"/>
</kw>
<msg timestamp="20210618 18:54:33.496" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '104']</msg>
<status status="PASS" starttime="20210618 18:54:32.300" endtime="20210618 18:54:33.496"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:54:33.497" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:54:33.497" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:54:33.496" endtime="20210618 18:54:33.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:54:33.498" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:54:33.498" endtime="20210618 18:54:33.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:54:33.499" endtime="20210618 18:54:33.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:54:33.499" level="INFO">['4', '104']</msg>
<status status="PASS" starttime="20210618 18:54:33.499" endtime="20210618 18:54:33.499"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:54:33.500" endtime="20210618 18:54:33.500"/>
</kw>
<status status="PASS" starttime="20210618 18:51:36.716" endtime="20210618 18:54:33.501"/>
</kw>
<status status="PASS" starttime="20210618 18:51:14.350" endtime="20210618 18:54:33.501"/>
</test>
<test id="s1-t22" name="Verify setting 5GHz ChannelID 108 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:54:33.507" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:54:33.539" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-137.log</msg>
<status status="PASS" starttime="20210618 18:54:33.506" endtime="20210618 18:54:43.912"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:54:43.913" endtime="20210618 18:54:44.192"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:54:46.202" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:54:44.193" endtime="20210618 18:54:46.202"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:54:46.203" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:54:46.512" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:54:46.202" endtime="20210618 18:54:46.531"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:54:48.535" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:54:46.532" endtime="20210618 18:54:48.535"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:54:48.536" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:54:48.535" endtime="20210618 18:54:50.367"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:54:55.373" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:54:50.368" endtime="20210618 18:54:55.373"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:54:55.373" endtime="20210618 18:54:55.381"/>
</kw>
<status status="PASS" starttime="20210618 18:54:33.505" endtime="20210618 18:54:55.381"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>108</arg>
<arg>12</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:54:55.383" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:54:55.383" endtime="20210618 18:54:55.434"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:55:00.442" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:54:55.435" endtime="20210618 18:55:00.442"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:55:00.442" endtime="20210618 18:55:00.448"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:55:00.449" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:55:00.449" endtime="20210618 18:55:00.457"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:55:00.467" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:55:00.458" endtime="20210618 18:55:00.467"/>
</kw>
<status status="PASS" starttime="20210618 18:54:55.382" endtime="20210618 18:55:00.468"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:55:00.469" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:55:00.468" endtime="20210618 18:55:00.699"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:55:00.700" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[12]/a'.</msg>
<status status="PASS" starttime="20210618 18:55:00.700" endtime="20210618 18:55:00.925"/>
</kw>
<status status="PASS" starttime="20210618 18:55:00.468" endtime="20210618 18:55:00.925"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:55:00.926" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:55:00.926" endtime="20210618 18:55:01.166"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:55:01.167" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:55:01.167" endtime="20210618 18:55:01.393"/>
</kw>
<status status="PASS" starttime="20210618 18:55:00.926" endtime="20210618 18:55:01.393"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:55:01.394" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:55:01.394" endtime="20210618 18:55:01.648"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:55:01.861" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20108%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20108%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:55:01.648" endtime="20210618 18:55:01.862"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:55:16.879" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:55:01.863" endtime="20210618 18:55:16.879"/>
</kw>
<status status="PASS" starttime="20210618 18:55:01.393" endtime="20210618 18:55:16.879"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:55:16.880" endtime="20210618 18:55:16.884"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:55:16.884" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:55:16.884" endtime="20210618 18:55:17.272"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:55:19.280" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:55:17.272" endtime="20210618 18:55:19.280"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:55:19.280" endtime="20210618 18:55:20.508"/>
</kw>
<status status="PASS" starttime="20210618 18:55:16.880" endtime="20210618 18:55:20.508"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:55:20.509" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:55:20.509" endtime="20210618 18:55:20.513"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:55:20.664" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:01:58 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:55:20.513" endtime="20210618 18:55:20.664"/>
</kw>
<status status="PASS" starttime="20210618 18:55:20.508" endtime="20210618 18:55:20.665"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:55:20.667" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:55:20.770" level="INFO">ARC_WLAN_5G_Channel=108
#</msg>
<msg timestamp="20210618 18:55:20.770" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=108
#</msg>
<status status="PASS" starttime="20210618 18:55:20.665" endtime="20210618 18:55:20.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:55:20.771" level="INFO">ARC_WLAN_5G_Channel=108
#</msg>
<status status="PASS" starttime="20210618 18:55:20.771" endtime="20210618 18:55:20.771"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:55:20.772" level="INFO">${result_5Ghz} = ['108']</msg>
<status status="PASS" starttime="20210618 18:55:20.771" endtime="20210618 18:55:20.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:55:20.773" level="INFO">5Ghz Channel ID from console is 108</msg>
<status status="PASS" starttime="20210618 18:55:20.772" endtime="20210618 18:55:20.773"/>
</kw>
<msg timestamp="20210618 18:55:20.773" level="INFO">${5Ghz_ChannelID_Console} = 108</msg>
<status status="PASS" starttime="20210618 18:55:20.665" endtime="20210618 18:55:20.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:55:20.774" level="INFO">Channel ID from Console is 108</msg>
<status status="PASS" starttime="20210618 18:55:20.774" endtime="20210618 18:55:20.774"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:55:20.774" endtime="20210618 18:55:20.774"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:55:20.774" endtime="20210618 18:55:20.775"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:55:20.775" endtime="20210618 18:55:20.775"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:55:20.775" endtime="20210618 18:55:20.775"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:57:50.785" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 18:55:20.775" endtime="20210618 18:57:50.785"/>
</kw>
<status status="PASS" starttime="20210618 18:55:20.775" endtime="20210618 18:57:50.785"/>
</branch>
<status status="PASS" starttime="20210618 18:55:20.775" endtime="20210618 18:57:50.785"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:57:50.786" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:57:50.790" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:57:51.451" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 18:57:50.786" endtime="20210618 18:57:51.451"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 18:57:51.452" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 18:57:51.455" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 18:57:52.070" level="INFO">Process completed.</msg>
<msg timestamp="20210618 18:57:52.070" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 18:57:51.451" endtime="20210618 18:57:52.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:57:52.072" level="INFO">
  
&gt; SSID 12 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 108 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 18:57:52.071" endtime="20210618 18:57:52.072"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:57:52.073" level="INFO">${Analyser_ChannelID_5Ghz} = ['108', '4']</msg>
<status status="PASS" starttime="20210618 18:57:52.072" endtime="20210618 18:57:52.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:57:52.075" level="INFO">Analyser Channel IDs are 108 and 4</msg>
<status status="PASS" starttime="20210618 18:57:52.073" endtime="20210618 18:57:52.075"/>
</kw>
<msg timestamp="20210618 18:57:52.077" level="INFO">${5Ghz_ChannelID_Analyser} = ['108', '4']</msg>
<status status="PASS" starttime="20210618 18:57:50.786" endtime="20210618 18:57:52.077"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 18:57:52.078" level="INFO">Length is 2</msg>
<msg timestamp="20210618 18:57:52.079" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 18:57:52.077" endtime="20210618 18:57:52.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:57:52.080" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 18:57:52.079" endtime="20210618 18:57:52.080"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 18:57:52.080" endtime="20210618 18:57:52.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:57:52.081" level="INFO">['108', '4']</msg>
<status status="PASS" starttime="20210618 18:57:52.080" endtime="20210618 18:57:52.081"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 18:57:52.081" endtime="20210618 18:57:52.081"/>
</kw>
<status status="PASS" starttime="20210618 18:54:55.382" endtime="20210618 18:57:52.081"/>
</kw>
<status status="PASS" starttime="20210618 18:54:33.504" endtime="20210618 18:57:52.082"/>
</test>
<test id="s1-t23" name="Verify setting 5GHz ChannelID 112 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 18:57:52.086" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 18:57:52.117" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-138.log</msg>
<status status="PASS" starttime="20210618 18:57:52.085" endtime="20210618 18:58:02.395"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 18:58:02.396" endtime="20210618 18:58:02.677"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:58:04.685" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:58:02.678" endtime="20210618 18:58:04.685"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 18:58:04.686" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 18:58:05.004" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 18:58:04.685" endtime="20210618 18:58:05.023"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:58:07.028" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:58:05.023" endtime="20210618 18:58:07.028"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:58:07.029" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 18:58:07.028" endtime="20210618 18:58:09.036"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:58:14.041" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:58:09.036" endtime="20210618 18:58:14.041"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:58:14.041" endtime="20210618 18:58:14.048"/>
</kw>
<status status="PASS" starttime="20210618 18:57:52.085" endtime="20210618 18:58:14.049"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>112</arg>
<arg>13</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:58:14.053" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 18:58:14.053" endtime="20210618 18:58:14.096"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:58:19.106" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 18:58:14.097" endtime="20210618 18:58:19.107"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 18:58:19.107" endtime="20210618 18:58:19.115"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 18:58:19.115" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 18:58:19.115" endtime="20210618 18:58:19.127"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 18:58:19.135" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 18:58:19.127" endtime="20210618 18:58:19.135"/>
</kw>
<status status="PASS" starttime="20210618 18:58:14.052" endtime="20210618 18:58:19.135"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:58:19.137" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:58:19.137" endtime="20210618 18:58:19.380"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:58:19.381" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[13]/a'.</msg>
<status status="PASS" starttime="20210618 18:58:19.380" endtime="20210618 18:58:19.610"/>
</kw>
<status status="PASS" starttime="20210618 18:58:19.136" endtime="20210618 18:58:19.610"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:58:19.611" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 18:58:19.611" endtime="20210618 18:58:19.838"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:58:19.840" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 18:58:19.839" endtime="20210618 18:58:20.065"/>
</kw>
<status status="PASS" starttime="20210618 18:58:19.610" endtime="20210618 18:58:20.065"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:58:20.066" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 18:58:20.066" endtime="20210618 18:58:20.309"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 18:58:20.511" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20112%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20112%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 18:58:20.310" endtime="20210618 18:58:20.512"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:58:35.518" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 18:58:20.513" endtime="20210618 18:58:35.519"/>
</kw>
<status status="PASS" starttime="20210618 18:58:20.066" endtime="20210618 18:58:35.519"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 18:58:35.519" endtime="20210618 18:58:35.524"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 18:58:35.525" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 18:58:35.524" endtime="20210618 18:58:35.761"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 18:58:37.777" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 18:58:35.761" endtime="20210618 18:58:37.777"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 18:58:37.777" endtime="20210618 18:58:39.048"/>
</kw>
<status status="PASS" starttime="20210618 18:58:35.519" endtime="20210618 18:58:39.048"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 18:58:39.049" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 18:58:39.048" endtime="20210618 18:58:39.050"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 18:58:39.193" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:05:16 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 18:58:39.050" endtime="20210618 18:58:39.193"/>
</kw>
<status status="PASS" starttime="20210618 18:58:39.048" endtime="20210618 18:58:39.193"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 18:58:39.197" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 18:58:39.298" level="INFO">ARC_WLAN_5G_Channel=112
#</msg>
<msg timestamp="20210618 18:58:39.298" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=112
#</msg>
<status status="PASS" starttime="20210618 18:58:39.194" endtime="20210618 18:58:39.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:58:39.299" level="INFO">ARC_WLAN_5G_Channel=112
#</msg>
<status status="PASS" starttime="20210618 18:58:39.299" endtime="20210618 18:58:39.299"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 18:58:39.299" level="INFO">${result_5Ghz} = ['112']</msg>
<status status="PASS" starttime="20210618 18:58:39.299" endtime="20210618 18:58:39.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:58:39.300" level="INFO">5Ghz Channel ID from console is 112</msg>
<status status="PASS" starttime="20210618 18:58:39.300" endtime="20210618 18:58:39.300"/>
</kw>
<msg timestamp="20210618 18:58:39.301" level="INFO">${5Ghz_ChannelID_Console} = 112</msg>
<status status="PASS" starttime="20210618 18:58:39.194" endtime="20210618 18:58:39.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 18:58:39.302" level="INFO">Channel ID from Console is 112</msg>
<status status="PASS" starttime="20210618 18:58:39.301" endtime="20210618 18:58:39.302"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 18:58:39.302" endtime="20210618 18:58:39.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 18:58:39.302" endtime="20210618 18:58:39.303"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 18:58:39.303" endtime="20210618 18:58:39.303"/>
</kw>
<status status="NOT RUN" starttime="20210618 18:58:39.303" endtime="20210618 18:58:39.303"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:01:09.310" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 18:58:39.303" endtime="20210618 19:01:09.310"/>
</kw>
<status status="PASS" starttime="20210618 18:58:39.303" endtime="20210618 19:01:09.311"/>
</branch>
<status status="PASS" starttime="20210618 18:58:39.303" endtime="20210618 19:01:09.311"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:01:09.315" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:01:09.320" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:01:09.929" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:01:09.315" endtime="20210618 19:01:09.929"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:01:09.931" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:01:09.934" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:01:10.517" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:01:10.517" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:01:09.930" endtime="20210618 19:01:10.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:01:10.519" level="INFO">
  
&gt; SSID 3 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 112 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 19:01:10.518" endtime="20210618 19:01:10.519"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:01:10.520" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '112']</msg>
<status status="PASS" starttime="20210618 19:01:10.519" endtime="20210618 19:01:10.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:01:10.522" level="INFO">Analyser Channel IDs are 4 and 112</msg>
<status status="PASS" starttime="20210618 19:01:10.520" endtime="20210618 19:01:10.522"/>
</kw>
<msg timestamp="20210618 19:01:10.524" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '112']</msg>
<status status="PASS" starttime="20210618 19:01:09.314" endtime="20210618 19:01:10.524"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:01:10.524" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:01:10.524" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:01:10.524" endtime="20210618 19:01:10.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:01:10.525" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:01:10.525" endtime="20210618 19:01:10.525"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:01:10.525" endtime="20210618 19:01:10.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:01:10.526" level="INFO">['4', '112']</msg>
<status status="PASS" starttime="20210618 19:01:10.526" endtime="20210618 19:01:10.526"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:01:10.527" endtime="20210618 19:01:10.528"/>
</kw>
<status status="PASS" starttime="20210618 18:58:14.050" endtime="20210618 19:01:10.529"/>
</kw>
<status status="PASS" starttime="20210618 18:57:52.084" endtime="20210618 19:01:10.529"/>
</test>
<test id="s1-t24" name="Verify setting 5GHz ChannelID 116 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:01:10.534" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:01:10.563" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-139.log</msg>
<status status="PASS" starttime="20210618 19:01:10.533" endtime="20210618 19:01:20.795"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:01:20.795" endtime="20210618 19:01:21.281"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:01:23.296" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:01:21.282" endtime="20210618 19:01:23.296"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:01:23.297" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:01:23.593" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:01:23.296" endtime="20210618 19:01:23.613"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:01:25.625" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:01:23.614" endtime="20210618 19:01:25.626"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:01:25.627" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:01:25.626" endtime="20210618 19:01:27.482"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:01:32.485" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:01:27.482" endtime="20210618 19:01:32.485"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:01:32.485" endtime="20210618 19:01:32.493"/>
</kw>
<status status="PASS" starttime="20210618 19:01:10.532" endtime="20210618 19:01:32.493"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>116</arg>
<arg>14</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:01:32.495" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:01:32.495" endtime="20210618 19:01:32.544"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:01:37.550" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:01:32.544" endtime="20210618 19:01:37.550"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:01:37.550" endtime="20210618 19:01:37.562"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:01:37.563" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:01:37.563" endtime="20210618 19:01:37.573"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:01:37.581" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:01:37.573" endtime="20210618 19:01:37.581"/>
</kw>
<status status="PASS" starttime="20210618 19:01:32.495" endtime="20210618 19:01:37.581"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:01:37.582" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:01:37.582" endtime="20210618 19:01:37.807"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:01:37.810" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[14]/a'.</msg>
<status status="PASS" starttime="20210618 19:01:37.808" endtime="20210618 19:01:38.033"/>
</kw>
<status status="PASS" starttime="20210618 19:01:37.581" endtime="20210618 19:01:38.034"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:01:38.035" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:01:38.034" endtime="20210618 19:01:38.260"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:01:38.261" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 19:01:38.260" endtime="20210618 19:01:38.486"/>
</kw>
<status status="PASS" starttime="20210618 19:01:38.034" endtime="20210618 19:01:38.486"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:01:38.488" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:01:38.487" endtime="20210618 19:01:38.745"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:01:38.976" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20116%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20116%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:01:38.745" endtime="20210618 19:01:38.977"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:01:53.984" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:01:38.978" endtime="20210618 19:01:53.984"/>
</kw>
<status status="PASS" starttime="20210618 19:01:38.487" endtime="20210618 19:01:53.985"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:01:53.986" endtime="20210618 19:01:53.991"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:01:53.991" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:01:53.991" endtime="20210618 19:01:54.228"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:01:56.234" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:01:54.228" endtime="20210618 19:01:56.234"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:01:56.234" endtime="20210618 19:01:57.623"/>
</kw>
<status status="PASS" starttime="20210618 19:01:53.985" endtime="20210618 19:01:57.623"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:01:57.625" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:01:57.625" endtime="20210618 19:01:57.627"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:01:57.770" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:08:35 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:01:57.627" endtime="20210618 19:01:57.770"/>
</kw>
<status status="PASS" starttime="20210618 19:01:57.624" endtime="20210618 19:01:57.771"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:01:57.773" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:01:57.875" level="INFO">ARC_WLAN_5G_Channel=116
#</msg>
<msg timestamp="20210618 19:01:57.876" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=116
#</msg>
<status status="PASS" starttime="20210618 19:01:57.771" endtime="20210618 19:01:57.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:01:57.876" level="INFO">ARC_WLAN_5G_Channel=116
#</msg>
<status status="PASS" starttime="20210618 19:01:57.876" endtime="20210618 19:01:57.876"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:01:57.877" level="INFO">${result_5Ghz} = ['116']</msg>
<status status="PASS" starttime="20210618 19:01:57.876" endtime="20210618 19:01:57.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:01:57.878" level="INFO">5Ghz Channel ID from console is 116</msg>
<status status="PASS" starttime="20210618 19:01:57.877" endtime="20210618 19:01:57.878"/>
</kw>
<msg timestamp="20210618 19:01:57.878" level="INFO">${5Ghz_ChannelID_Console} = 116</msg>
<status status="PASS" starttime="20210618 19:01:57.771" endtime="20210618 19:01:57.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:01:57.879" level="INFO">Channel ID from Console is 116</msg>
<status status="PASS" starttime="20210618 19:01:57.879" endtime="20210618 19:01:57.879"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:01:57.879" endtime="20210618 19:01:57.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:01:57.879" endtime="20210618 19:01:57.880"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:01:57.880" endtime="20210618 19:01:57.880"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:01:57.880" endtime="20210618 19:01:57.880"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:04:27.886" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:01:57.880" endtime="20210618 19:04:27.886"/>
</kw>
<status status="PASS" starttime="20210618 19:01:57.880" endtime="20210618 19:04:27.886"/>
</branch>
<status status="PASS" starttime="20210618 19:01:57.880" endtime="20210618 19:04:27.886"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:04:27.888" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:04:27.892" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:04:28.494" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:04:27.887" endtime="20210618 19:04:28.495"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:04:28.495" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:04:28.498" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:04:29.096" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:04:29.097" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:04:28.495" endtime="20210618 19:04:29.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:04:29.098" level="INFO">
  
&gt; SSID 2 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 3 : Ziggo26361
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 70:54:d2:a4:51:73
           Signal             : 60%  

</msg>
<status status="PASS" starttime="20210618 19:04:29.097" endtime="20210618 19:04:29.098"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:04:29.100" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 19:04:29.099" endtime="20210618 19:04:29.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:04:29.102" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 19:04:29.100" endtime="20210618 19:04:29.102"/>
</kw>
<status status="FAIL" starttime="20210618 19:04:27.887" endtime="20210618 19:04:29.102"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 19:04:29.102" endtime="20210618 19:04:29.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:04:29.103" endtime="20210618 19:04:29.103"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 19:04:29.103" endtime="20210618 19:04:29.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:04:29.103" endtime="20210618 19:04:29.103"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 19:04:29.103" endtime="20210618 19:04:29.103"/>
</kw>
<status status="FAIL" starttime="20210618 19:01:32.494" endtime="20210618 19:04:29.103"/>
</kw>
<status status="FAIL" starttime="20210618 19:01:10.531" endtime="20210618 19:04:29.104">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t25" name="Verify setting 5GHz ChannelID 120 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:04:29.109" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:04:29.136" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-140.log</msg>
<status status="PASS" starttime="20210618 19:04:29.107" endtime="20210618 19:04:39.495"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:04:39.495" endtime="20210618 19:04:39.910"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:04:41.918" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:04:39.910" endtime="20210618 19:04:41.918"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:04:41.919" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:04:42.214" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:04:41.919" endtime="20210618 19:04:42.234"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:04:44.235" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:04:42.234" endtime="20210618 19:04:44.235"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:04:44.236" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:04:44.235" endtime="20210618 19:04:46.132"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:04:51.138" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:04:46.133" endtime="20210618 19:04:51.138"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:04:51.138" endtime="20210618 19:04:51.147"/>
</kw>
<status status="PASS" starttime="20210618 19:04:29.107" endtime="20210618 19:04:51.147"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>120</arg>
<arg>15</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:04:51.151" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:04:51.150" endtime="20210618 19:04:51.208"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:04:56.218" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:04:51.209" endtime="20210618 19:04:56.218"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:04:56.218" endtime="20210618 19:04:56.225"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:04:56.226" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:04:56.225" endtime="20210618 19:04:56.234"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:04:56.242" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:04:56.234" endtime="20210618 19:04:56.242"/>
</kw>
<status status="PASS" starttime="20210618 19:04:51.149" endtime="20210618 19:04:56.242"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:04:56.243" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:04:56.243" endtime="20210618 19:04:56.477"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:04:56.478" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[15]/a'.</msg>
<status status="PASS" starttime="20210618 19:04:56.478" endtime="20210618 19:04:56.701"/>
</kw>
<status status="PASS" starttime="20210618 19:04:56.242" endtime="20210618 19:04:56.701"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:04:56.704" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:04:56.703" endtime="20210618 19:04:56.930"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:04:56.931" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 19:04:56.931" endtime="20210618 19:04:57.169"/>
</kw>
<status status="PASS" starttime="20210618 19:04:56.701" endtime="20210618 19:04:57.170"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:04:57.172" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:04:57.171" endtime="20210618 19:04:57.427"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:04:57.634" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20120%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20120%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:04:57.428" endtime="20210618 19:04:57.634"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:05:12.642" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:04:57.635" endtime="20210618 19:05:12.642"/>
</kw>
<status status="PASS" starttime="20210618 19:04:57.170" endtime="20210618 19:05:12.642"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:05:12.643" endtime="20210618 19:05:12.647"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:05:12.648" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:05:12.648" endtime="20210618 19:05:13.075"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:05:15.087" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:05:13.075" endtime="20210618 19:05:15.088"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:05:15.088" endtime="20210618 19:05:16.342"/>
</kw>
<status status="PASS" starttime="20210618 19:05:12.643" endtime="20210618 19:05:16.343"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:05:16.344" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:05:16.344" endtime="20210618 19:05:16.346"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:05:16.492" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:11:54 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:05:16.346" endtime="20210618 19:05:16.492"/>
</kw>
<status status="PASS" starttime="20210618 19:05:16.343" endtime="20210618 19:05:16.492"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:05:16.495" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:05:16.550" level="INFO">ARC_WLAN_5G_Channel=120
#</msg>
<msg timestamp="20210618 19:05:16.550" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=120
#</msg>
<status status="PASS" starttime="20210618 19:05:16.493" endtime="20210618 19:05:16.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:05:16.551" level="INFO">ARC_WLAN_5G_Channel=120
#</msg>
<status status="PASS" starttime="20210618 19:05:16.551" endtime="20210618 19:05:16.551"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:05:16.551" level="INFO">${result_5Ghz} = ['120']</msg>
<status status="PASS" starttime="20210618 19:05:16.551" endtime="20210618 19:05:16.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:05:16.552" level="INFO">5Ghz Channel ID from console is 120</msg>
<status status="PASS" starttime="20210618 19:05:16.552" endtime="20210618 19:05:16.552"/>
</kw>
<msg timestamp="20210618 19:05:16.553" level="INFO">${5Ghz_ChannelID_Console} = 120</msg>
<status status="PASS" starttime="20210618 19:05:16.492" endtime="20210618 19:05:16.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:05:16.554" level="INFO">Channel ID from Console is 120</msg>
<status status="PASS" starttime="20210618 19:05:16.553" endtime="20210618 19:05:16.554"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:05:16.554" endtime="20210618 19:05:16.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:05:16.554" endtime="20210618 19:05:16.555"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:05:16.555" endtime="20210618 19:05:16.555"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:05:16.555" endtime="20210618 19:05:16.555"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:07:46.564" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:05:16.555" endtime="20210618 19:07:46.564"/>
</kw>
<status status="PASS" starttime="20210618 19:05:16.555" endtime="20210618 19:07:46.564"/>
</branch>
<status status="PASS" starttime="20210618 19:05:16.555" endtime="20210618 19:07:46.564"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:07:46.566" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:07:46.569" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:07:47.226" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:07:46.565" endtime="20210618 19:07:47.226"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:07:47.227" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:07:47.231" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:07:47.869" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:07:47.870" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:07:47.227" endtime="20210618 19:07:47.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:07:47.871" level="INFO">
  
&gt; SSID 18 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 19:07:47.870" endtime="20210618 19:07:47.871"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:07:47.872" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 19:07:47.871" endtime="20210618 19:07:47.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:07:47.877" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 19:07:47.872" endtime="20210618 19:07:47.877"/>
</kw>
<status status="FAIL" starttime="20210618 19:07:46.564" endtime="20210618 19:07:47.877"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 19:07:47.877" endtime="20210618 19:07:47.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:07:47.877" endtime="20210618 19:07:47.877"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 19:07:47.877" endtime="20210618 19:07:47.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:07:47.878" endtime="20210618 19:07:47.878"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 19:07:47.878" endtime="20210618 19:07:47.878"/>
</kw>
<status status="FAIL" starttime="20210618 19:04:51.149" endtime="20210618 19:07:47.878"/>
</kw>
<status status="FAIL" starttime="20210618 19:04:29.106" endtime="20210618 19:07:47.879">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t26" name="Verify setting 5GHz ChannelID 124 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:07:47.882" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:07:47.907" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-141.log</msg>
<status status="PASS" starttime="20210618 19:07:47.882" endtime="20210618 19:07:58.999"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:07:59.000" endtime="20210618 19:07:59.288"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:08:01.292" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:07:59.289" endtime="20210618 19:08:01.292"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:08:01.293" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:08:01.591" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:08:01.292" endtime="20210618 19:08:01.614"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:08:03.626" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:08:01.614" endtime="20210618 19:08:03.626"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:08:03.627" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:08:03.626" endtime="20210618 19:08:05.221"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:08:10.231" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:08:05.221" endtime="20210618 19:08:10.231"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:08:10.231" endtime="20210618 19:08:10.240"/>
</kw>
<status status="PASS" starttime="20210618 19:07:47.882" endtime="20210618 19:08:10.240"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>124</arg>
<arg>16</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:08:10.242" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:08:10.242" endtime="20210618 19:08:10.302"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:08:15.318" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:08:10.303" endtime="20210618 19:08:15.318"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:08:15.319" endtime="20210618 19:08:15.326"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:08:15.327" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:08:15.326" endtime="20210618 19:08:15.334"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:08:15.342" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:08:15.335" endtime="20210618 19:08:15.343"/>
</kw>
<status status="PASS" starttime="20210618 19:08:10.242" endtime="20210618 19:08:15.343"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:08:15.344" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:08:15.344" endtime="20210618 19:08:15.576"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:08:15.577" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[16]/a'.</msg>
<status status="PASS" starttime="20210618 19:08:15.577" endtime="20210618 19:08:15.802"/>
</kw>
<status status="PASS" starttime="20210618 19:08:15.343" endtime="20210618 19:08:15.803"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:08:15.804" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:08:15.804" endtime="20210618 19:08:16.030"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:08:16.031" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 19:08:16.030" endtime="20210618 19:08:16.257"/>
</kw>
<status status="PASS" starttime="20210618 19:08:15.803" endtime="20210618 19:08:16.257"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:08:16.258" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:08:16.258" endtime="20210618 19:08:16.514"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:08:16.730" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20124%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20124%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:08:16.514" endtime="20210618 19:08:16.731"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:08:31.739" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:08:16.732" endtime="20210618 19:08:31.739"/>
</kw>
<status status="PASS" starttime="20210618 19:08:16.258" endtime="20210618 19:08:31.740"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:08:31.741" endtime="20210618 19:08:31.745"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:08:31.746" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:08:31.745" endtime="20210618 19:08:31.996"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:08:34.005" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:08:31.997" endtime="20210618 19:08:34.006"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:08:34.006" endtime="20210618 19:08:35.387"/>
</kw>
<status status="PASS" starttime="20210618 19:08:31.740" endtime="20210618 19:08:35.387"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:08:35.389" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:08:35.388" endtime="20210618 19:08:35.391"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:08:35.540" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:15:13 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:08:35.391" endtime="20210618 19:08:35.540"/>
</kw>
<status status="PASS" starttime="20210618 19:08:35.387" endtime="20210618 19:08:35.540"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:08:35.544" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:08:35.644" level="INFO">ARC_WLAN_5G_Channel=124
#</msg>
<msg timestamp="20210618 19:08:35.644" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=124
#</msg>
<status status="PASS" starttime="20210618 19:08:35.541" endtime="20210618 19:08:35.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:08:35.645" level="INFO">ARC_WLAN_5G_Channel=124
#</msg>
<status status="PASS" starttime="20210618 19:08:35.645" endtime="20210618 19:08:35.645"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:08:35.645" level="INFO">${result_5Ghz} = ['124']</msg>
<status status="PASS" starttime="20210618 19:08:35.645" endtime="20210618 19:08:35.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:08:35.646" level="INFO">5Ghz Channel ID from console is 124</msg>
<status status="PASS" starttime="20210618 19:08:35.646" endtime="20210618 19:08:35.647"/>
</kw>
<msg timestamp="20210618 19:08:35.647" level="INFO">${5Ghz_ChannelID_Console} = 124</msg>
<status status="PASS" starttime="20210618 19:08:35.540" endtime="20210618 19:08:35.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:08:35.648" level="INFO">Channel ID from Console is 124</msg>
<status status="PASS" starttime="20210618 19:08:35.648" endtime="20210618 19:08:35.648"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:08:35.648" endtime="20210618 19:08:35.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:08:35.648" endtime="20210618 19:08:35.650"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:08:35.651" endtime="20210618 19:08:35.651"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:08:35.651" endtime="20210618 19:08:35.651"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:11:05.661" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:08:35.651" endtime="20210618 19:11:05.661"/>
</kw>
<status status="PASS" starttime="20210618 19:08:35.651" endtime="20210618 19:11:05.661"/>
</branch>
<status status="PASS" starttime="20210618 19:08:35.650" endtime="20210618 19:11:05.661"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:11:05.663" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:11:05.666" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:11:06.319" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:11:05.662" endtime="20210618 19:11:06.319"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:11:06.320" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:11:06.324" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:11:06.966" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:11:06.967" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:11:06.319" endtime="20210618 19:11:06.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:11:06.968" level="INFO">
  
&gt; SSID 10 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 19:11:06.967" endtime="20210618 19:11:06.968"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:11:06.969" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 19:11:06.968" endtime="20210618 19:11:06.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:11:06.971" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 19:11:06.969" endtime="20210618 19:11:06.971"/>
</kw>
<status status="FAIL" starttime="20210618 19:11:05.662" endtime="20210618 19:11:06.971"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 19:11:06.971" endtime="20210618 19:11:06.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:11:06.971" endtime="20210618 19:11:06.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 19:11:06.972" endtime="20210618 19:11:06.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:11:06.972" endtime="20210618 19:11:06.972"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 19:11:06.972" endtime="20210618 19:11:06.972"/>
</kw>
<status status="FAIL" starttime="20210618 19:08:10.241" endtime="20210618 19:11:06.972"/>
</kw>
<status status="FAIL" starttime="20210618 19:07:47.880" endtime="20210618 19:11:06.976">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t27" name="Verify setting 5GHz ChannelID 128 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:11:06.981" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:11:07.018" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-142.log</msg>
<status status="PASS" starttime="20210618 19:11:06.981" endtime="20210618 19:11:17.248"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:11:17.248" endtime="20210618 19:11:17.539"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:11:19.541" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:11:17.540" endtime="20210618 19:11:19.541"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:11:19.542" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:11:19.839" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:11:19.541" endtime="20210618 19:11:19.858"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:11:21.859" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:11:19.858" endtime="20210618 19:11:21.859"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:11:21.860" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:11:21.859" endtime="20210618 19:11:23.680"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:11:28.681" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:11:23.680" endtime="20210618 19:11:28.681"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:11:28.681" endtime="20210618 19:11:28.689"/>
</kw>
<status status="PASS" starttime="20210618 19:11:06.980" endtime="20210618 19:11:28.689"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>128</arg>
<arg>17</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:11:28.691" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:11:28.691" endtime="20210618 19:11:28.742"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:11:33.749" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:11:28.742" endtime="20210618 19:11:33.749"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:11:33.750" endtime="20210618 19:11:33.757"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:11:33.758" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:11:33.757" endtime="20210618 19:11:33.767"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:11:33.775" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:11:33.767" endtime="20210618 19:11:33.775"/>
</kw>
<status status="PASS" starttime="20210618 19:11:28.691" endtime="20210618 19:11:33.776"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:11:33.777" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:11:33.777" endtime="20210618 19:11:34.025"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:11:34.025" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[17]/a'.</msg>
<status status="PASS" starttime="20210618 19:11:34.025" endtime="20210618 19:11:34.249"/>
</kw>
<status status="PASS" starttime="20210618 19:11:33.776" endtime="20210618 19:11:34.249"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:11:34.251" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:11:34.249" endtime="20210618 19:11:34.476"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:11:34.477" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 19:11:34.476" endtime="20210618 19:11:34.703"/>
</kw>
<status status="PASS" starttime="20210618 19:11:34.249" endtime="20210618 19:11:34.703"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:11:34.704" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:11:34.703" endtime="20210618 19:11:34.958"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:11:35.115" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20128%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20128%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:11:34.959" endtime="20210618 19:11:35.115"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:11:50.117" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:11:35.115" endtime="20210618 19:11:50.118"/>
</kw>
<status status="PASS" starttime="20210618 19:11:34.703" endtime="20210618 19:11:50.118"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:11:50.118" endtime="20210618 19:11:50.122"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:11:50.123" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:11:50.122" endtime="20210618 19:11:50.375"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:11:52.385" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:11:50.375" endtime="20210618 19:11:52.385"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:11:52.386" endtime="20210618 19:11:53.587"/>
</kw>
<status status="PASS" starttime="20210618 19:11:50.118" endtime="20210618 19:11:53.588"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:11:53.589" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:11:53.589" endtime="20210618 19:11:53.590"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:11:53.724" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:18:31 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:11:53.590" endtime="20210618 19:11:53.724"/>
</kw>
<status status="PASS" starttime="20210618 19:11:53.588" endtime="20210618 19:11:53.724"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:11:53.777" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:11:53.829" level="INFO">ARC_WLAN_5G_Channel=128
#</msg>
<msg timestamp="20210618 19:11:53.829" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=128
#</msg>
<status status="PASS" starttime="20210618 19:11:53.725" endtime="20210618 19:11:53.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:11:53.830" level="INFO">ARC_WLAN_5G_Channel=128
#</msg>
<status status="PASS" starttime="20210618 19:11:53.830" endtime="20210618 19:11:53.830"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:11:53.831" level="INFO">${result_5Ghz} = ['128']</msg>
<status status="PASS" starttime="20210618 19:11:53.830" endtime="20210618 19:11:53.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:11:53.832" level="INFO">5Ghz Channel ID from console is 128</msg>
<status status="PASS" starttime="20210618 19:11:53.831" endtime="20210618 19:11:53.832"/>
</kw>
<msg timestamp="20210618 19:11:53.833" level="INFO">${5Ghz_ChannelID_Console} = 128</msg>
<status status="PASS" starttime="20210618 19:11:53.725" endtime="20210618 19:11:53.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:11:53.833" level="INFO">Channel ID from Console is 128</msg>
<status status="PASS" starttime="20210618 19:11:53.833" endtime="20210618 19:11:53.833"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:11:53.833" endtime="20210618 19:11:53.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:11:53.834" endtime="20210618 19:11:53.834"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:11:53.835" endtime="20210618 19:11:53.835"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:11:53.834" endtime="20210618 19:11:53.835"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:14:23.842" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:11:53.835" endtime="20210618 19:14:23.842"/>
</kw>
<status status="PASS" starttime="20210618 19:11:53.835" endtime="20210618 19:14:23.842"/>
</branch>
<status status="PASS" starttime="20210618 19:11:53.834" endtime="20210618 19:14:23.842"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:14:23.843" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:14:23.847" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:14:24.483" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:14:23.843" endtime="20210618 19:14:24.483"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:14:24.484" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:14:24.489" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:14:25.085" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:14:25.085" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:14:24.484" endtime="20210618 19:14:25.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:14:25.089" level="INFO">
  
&gt; SSID 13 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 14 : 
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 6a:30:d9:0e:11:b9
           Signal             : 43%  

</msg>
<status status="PASS" starttime="20210618 19:14:25.086" endtime="20210618 19:14:25.090"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:14:25.091" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 19:14:25.090" endtime="20210618 19:14:25.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:14:25.093" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 19:14:25.091" endtime="20210618 19:14:25.093"/>
</kw>
<status status="FAIL" starttime="20210618 19:14:23.842" endtime="20210618 19:14:25.093"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 19:14:25.093" endtime="20210618 19:14:25.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:14:25.093" endtime="20210618 19:14:25.093"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 19:14:25.094" endtime="20210618 19:14:25.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:14:25.094" endtime="20210618 19:14:25.094"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 19:14:25.094" endtime="20210618 19:14:25.094"/>
</kw>
<status status="FAIL" starttime="20210618 19:11:28.690" endtime="20210618 19:14:25.094"/>
</kw>
<status status="FAIL" starttime="20210618 19:11:06.979" endtime="20210618 19:14:25.095">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t28" name="Verify setting 5GHz ChannelID 132 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:14:25.109" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:14:25.135" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-143.log</msg>
<status status="PASS" starttime="20210618 19:14:25.107" endtime="20210618 19:14:35.359"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:14:35.359" endtime="20210618 19:14:35.809"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:14:37.823" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:14:35.810" endtime="20210618 19:14:37.823"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:14:37.824" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:14:38.121" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:14:37.823" endtime="20210618 19:14:38.141"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:14:40.143" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:14:38.141" endtime="20210618 19:14:40.143"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:14:40.144" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:14:40.144" endtime="20210618 19:14:41.980"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:14:46.983" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:14:41.980" endtime="20210618 19:14:46.983"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:14:46.983" endtime="20210618 19:14:46.992"/>
</kw>
<status status="PASS" starttime="20210618 19:14:25.103" endtime="20210618 19:14:46.992"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>132</arg>
<arg>18</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:14:46.996" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:14:46.995" endtime="20210618 19:14:47.041"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:14:52.043" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:14:47.042" endtime="20210618 19:14:52.043"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:14:52.044" endtime="20210618 19:14:52.056"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:14:52.056" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:14:52.056" endtime="20210618 19:14:52.067"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:14:52.074" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:14:52.067" endtime="20210618 19:14:52.074"/>
</kw>
<status status="PASS" starttime="20210618 19:14:46.994" endtime="20210618 19:14:52.075"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:14:52.076" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:14:52.075" endtime="20210618 19:14:52.321"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:14:52.322" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[18]/a'.</msg>
<status status="PASS" starttime="20210618 19:14:52.321" endtime="20210618 19:14:52.560"/>
</kw>
<status status="PASS" starttime="20210618 19:14:52.075" endtime="20210618 19:14:52.560"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:14:52.561" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:14:52.561" endtime="20210618 19:14:52.788"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:14:52.789" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 19:14:52.788" endtime="20210618 19:14:53.015"/>
</kw>
<status status="PASS" starttime="20210618 19:14:52.561" endtime="20210618 19:14:53.015"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:14:53.017" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:14:53.016" endtime="20210618 19:14:53.270"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:14:53.465" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20132%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20132%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:14:53.271" endtime="20210618 19:14:53.465"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:15:08.473" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:14:53.465" endtime="20210618 19:15:08.473"/>
</kw>
<status status="PASS" starttime="20210618 19:14:53.015" endtime="20210618 19:15:08.473"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:15:08.474" endtime="20210618 19:15:08.478"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:15:08.478" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:15:08.478" endtime="20210618 19:15:08.717"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:15:10.733" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:15:08.717" endtime="20210618 19:15:10.734"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:15:10.735" endtime="20210618 19:15:11.958"/>
</kw>
<status status="PASS" starttime="20210618 19:15:08.474" endtime="20210618 19:15:11.958"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:15:11.959" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:15:11.958" endtime="20210618 19:15:11.960"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:15:12.101" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:21:49 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:15:11.960" endtime="20210618 19:15:12.101"/>
</kw>
<status status="PASS" starttime="20210618 19:15:11.958" endtime="20210618 19:15:12.102"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:15:12.106" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:15:12.208" level="INFO">ARC_WLAN_5G_Channel=132
#</msg>
<msg timestamp="20210618 19:15:12.208" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=132
#</msg>
<status status="PASS" starttime="20210618 19:15:12.103" endtime="20210618 19:15:12.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:15:12.209" level="INFO">ARC_WLAN_5G_Channel=132
#</msg>
<status status="PASS" starttime="20210618 19:15:12.209" endtime="20210618 19:15:12.209"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:15:12.210" level="INFO">${result_5Ghz} = ['132']</msg>
<status status="PASS" starttime="20210618 19:15:12.209" endtime="20210618 19:15:12.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:15:12.211" level="INFO">5Ghz Channel ID from console is 132</msg>
<status status="PASS" starttime="20210618 19:15:12.210" endtime="20210618 19:15:12.211"/>
</kw>
<msg timestamp="20210618 19:15:12.212" level="INFO">${5Ghz_ChannelID_Console} = 132</msg>
<status status="PASS" starttime="20210618 19:15:12.102" endtime="20210618 19:15:12.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:15:12.212" level="INFO">Channel ID from Console is 132</msg>
<status status="PASS" starttime="20210618 19:15:12.212" endtime="20210618 19:15:12.212"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:15:12.212" endtime="20210618 19:15:12.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:15:12.213" endtime="20210618 19:15:12.213"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:15:12.214" endtime="20210618 19:15:12.214"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:15:12.213" endtime="20210618 19:15:12.214"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:17:42.220" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:15:12.214" endtime="20210618 19:17:42.220"/>
</kw>
<status status="PASS" starttime="20210618 19:15:12.214" endtime="20210618 19:17:42.220"/>
</branch>
<status status="PASS" starttime="20210618 19:15:12.213" endtime="20210618 19:17:42.220"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:17:42.221" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:17:42.225" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:17:42.859" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:17:42.221" endtime="20210618 19:17:42.859"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:17:42.860" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:17:42.863" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:17:43.450" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:17:43.450" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:17:42.859" endtime="20210618 19:17:43.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:17:43.452" level="INFO">
  
&gt; SSID 5 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 132 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 19:17:43.450" endtime="20210618 19:17:43.452"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:17:43.455" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '132']</msg>
<status status="PASS" starttime="20210618 19:17:43.452" endtime="20210618 19:17:43.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:17:43.457" level="INFO">Analyser Channel IDs are 4 and 132</msg>
<status status="PASS" starttime="20210618 19:17:43.455" endtime="20210618 19:17:43.457"/>
</kw>
<msg timestamp="20210618 19:17:43.459" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '132']</msg>
<status status="PASS" starttime="20210618 19:17:42.220" endtime="20210618 19:17:43.459"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:17:43.459" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:17:43.459" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:17:43.459" endtime="20210618 19:17:43.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:17:43.460" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:17:43.460" endtime="20210618 19:17:43.460"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:17:43.460" endtime="20210618 19:17:43.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:17:43.461" level="INFO">['4', '132']</msg>
<status status="PASS" starttime="20210618 19:17:43.461" endtime="20210618 19:17:43.461"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:17:43.461" endtime="20210618 19:17:43.462"/>
</kw>
<status status="PASS" starttime="20210618 19:14:46.993" endtime="20210618 19:17:43.462"/>
</kw>
<status status="PASS" starttime="20210618 19:14:25.102" endtime="20210618 19:17:43.462"/>
</test>
<test id="s1-t29" name="Verify setting 5GHz ChannelID 136 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:17:43.478" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:17:43.499" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-144.log</msg>
<status status="PASS" starttime="20210618 19:17:43.477" endtime="20210618 19:17:53.360"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:17:53.360" endtime="20210618 19:17:53.652"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:17:55.659" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:17:53.653" endtime="20210618 19:17:55.659"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:17:55.660" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:17:55.969" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:17:55.659" endtime="20210618 19:17:55.988"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:17:58.000" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:17:55.989" endtime="20210618 19:17:58.001"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:17:58.002" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:17:58.002" endtime="20210618 19:17:59.882"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:18:04.887" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:17:59.882" endtime="20210618 19:18:04.887"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:18:04.887" endtime="20210618 19:18:04.899"/>
</kw>
<status status="PASS" starttime="20210618 19:17:43.477" endtime="20210618 19:18:04.899"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>136</arg>
<arg>19</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:18:04.901" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:18:04.901" endtime="20210618 19:18:04.951"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:18:09.966" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:18:04.951" endtime="20210618 19:18:09.966"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:18:09.967" endtime="20210618 19:18:09.973"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:18:09.973" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:18:09.973" endtime="20210618 19:18:09.982"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:18:09.991" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:18:09.983" endtime="20210618 19:18:09.991"/>
</kw>
<status status="PASS" starttime="20210618 19:18:04.901" endtime="20210618 19:18:09.991"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:18:09.992" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:18:09.992" endtime="20210618 19:18:10.223"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:18:10.224" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[19]/a'.</msg>
<status status="PASS" starttime="20210618 19:18:10.224" endtime="20210618 19:18:10.451"/>
</kw>
<status status="PASS" starttime="20210618 19:18:09.992" endtime="20210618 19:18:10.451"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:18:10.452" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:18:10.452" endtime="20210618 19:18:10.679"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:18:10.681" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 19:18:10.679" endtime="20210618 19:18:10.908"/>
</kw>
<status status="PASS" starttime="20210618 19:18:10.451" endtime="20210618 19:18:10.908"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:18:10.909" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:18:10.909" endtime="20210618 19:18:11.154"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:18:11.383" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20136%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20136%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:18:11.155" endtime="20210618 19:18:11.383"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:18:26.390" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:18:11.383" endtime="20210618 19:18:26.390"/>
</kw>
<status status="PASS" starttime="20210618 19:18:10.908" endtime="20210618 19:18:26.390"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:18:26.391" endtime="20210618 19:18:26.395"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:18:26.396" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:18:26.395" endtime="20210618 19:18:26.631"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:18:28.639" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:18:26.632" endtime="20210618 19:18:28.639"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:18:28.639" endtime="20210618 19:18:29.874"/>
</kw>
<status status="PASS" starttime="20210618 19:18:26.391" endtime="20210618 19:18:29.874"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:18:29.875" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:18:29.875" endtime="20210618 19:18:29.876"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:18:30.009" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:25:07 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:18:29.876" endtime="20210618 19:18:30.009"/>
</kw>
<status status="PASS" starttime="20210618 19:18:29.874" endtime="20210618 19:18:30.010"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:18:30.055" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:18:30.101" level="INFO">ARC_WLAN_5G_Channel=136
#</msg>
<msg timestamp="20210618 19:18:30.101" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=136
#</msg>
<status status="PASS" starttime="20210618 19:18:30.010" endtime="20210618 19:18:30.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:18:30.102" level="INFO">ARC_WLAN_5G_Channel=136
#</msg>
<status status="PASS" starttime="20210618 19:18:30.101" endtime="20210618 19:18:30.102"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:18:30.102" level="INFO">${result_5Ghz} = ['136']</msg>
<status status="PASS" starttime="20210618 19:18:30.102" endtime="20210618 19:18:30.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:18:30.103" level="INFO">5Ghz Channel ID from console is 136</msg>
<status status="PASS" starttime="20210618 19:18:30.103" endtime="20210618 19:18:30.104"/>
</kw>
<msg timestamp="20210618 19:18:30.104" level="INFO">${5Ghz_ChannelID_Console} = 136</msg>
<status status="PASS" starttime="20210618 19:18:30.010" endtime="20210618 19:18:30.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:18:30.105" level="INFO">Channel ID from Console is 136</msg>
<status status="PASS" starttime="20210618 19:18:30.104" endtime="20210618 19:18:30.105"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:18:30.105" endtime="20210618 19:18:30.105"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:18:30.105" endtime="20210618 19:18:30.106"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:18:30.106" endtime="20210618 19:18:30.106"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:18:30.106" endtime="20210618 19:18:30.106"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:21:00.109" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:18:30.106" endtime="20210618 19:21:00.109"/>
</kw>
<status status="PASS" starttime="20210618 19:18:30.106" endtime="20210618 19:21:00.109"/>
</branch>
<status status="PASS" starttime="20210618 19:18:30.106" endtime="20210618 19:21:00.109"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:21:00.111" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:21:00.116" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:21:00.702" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:21:00.111" endtime="20210618 19:21:00.702"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:21:00.703" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:21:00.706" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:21:01.335" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:21:01.336" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:21:00.702" endtime="20210618 19:21:01.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:21:01.337" level="INFO">
  
&gt; SSID 2 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 136 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 19:21:01.336" endtime="20210618 19:21:01.337"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:21:01.338" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '136']</msg>
<status status="PASS" starttime="20210618 19:21:01.338" endtime="20210618 19:21:01.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:21:01.341" level="INFO">Analyser Channel IDs are 4 and 136</msg>
<status status="PASS" starttime="20210618 19:21:01.339" endtime="20210618 19:21:01.341"/>
</kw>
<msg timestamp="20210618 19:21:01.342" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '136']</msg>
<status status="PASS" starttime="20210618 19:21:00.110" endtime="20210618 19:21:01.342"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:21:01.343" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:21:01.343" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:21:01.342" endtime="20210618 19:21:01.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:21:01.343" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:21:01.343" endtime="20210618 19:21:01.343"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:21:01.343" endtime="20210618 19:21:01.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:21:01.344" level="INFO">['4', '136']</msg>
<status status="PASS" starttime="20210618 19:21:01.344" endtime="20210618 19:21:01.344"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:21:01.344" endtime="20210618 19:21:01.345"/>
</kw>
<status status="PASS" starttime="20210618 19:18:04.900" endtime="20210618 19:21:01.345"/>
</kw>
<status status="PASS" starttime="20210618 19:17:43.475" endtime="20210618 19:21:01.345"/>
</test>
<test id="s1-t30" name="Verify setting 5GHz ChannelID 140 with Bandwith 20/40 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:21:01.349" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:21:01.375" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-145.log</msg>
<status status="PASS" starttime="20210618 19:21:01.349" endtime="20210618 19:21:11.388"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:21:11.389" endtime="20210618 19:21:11.818"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:21:13.830" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:21:11.818" endtime="20210618 19:21:13.831"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:21:13.833" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:21:14.138" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:21:13.832" endtime="20210618 19:21:14.158"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:21:16.162" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:21:14.158" endtime="20210618 19:21:16.162"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:21:16.163" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:21:16.162" endtime="20210618 19:21:18.016"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:21:23.030" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:21:18.016" endtime="20210618 19:21:23.030"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:21:23.030" endtime="20210618 19:21:23.038"/>
</kw>
<status status="PASS" starttime="20210618 19:21:01.348" endtime="20210618 19:21:23.038"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>140</arg>
<arg>20</arg>
<arg>2</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:21:23.041" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:21:23.041" endtime="20210618 19:21:23.091"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:21:28.096" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:21:23.092" endtime="20210618 19:21:28.096"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:21:28.096" endtime="20210618 19:21:28.103"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:21:28.103" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:21:28.103" endtime="20210618 19:21:28.112"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:21:28.119" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:21:28.112" endtime="20210618 19:21:28.119"/>
</kw>
<status status="PASS" starttime="20210618 19:21:23.040" endtime="20210618 19:21:28.120"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:21:28.121" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:21:28.120" endtime="20210618 19:21:28.355"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:21:28.355" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[20]/a'.</msg>
<status status="PASS" starttime="20210618 19:21:28.355" endtime="20210618 19:21:28.581"/>
</kw>
<status status="PASS" starttime="20210618 19:21:28.120" endtime="20210618 19:21:28.582"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:21:28.582" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:21:28.582" endtime="20210618 19:21:28.810"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:21:28.811" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 19:21:28.810" endtime="20210618 19:21:29.034"/>
</kw>
<status status="PASS" starttime="20210618 19:21:28.582" endtime="20210618 19:21:29.035"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:21:29.035" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:21:29.035" endtime="20210618 19:21:29.291"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:21:29.475" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20140%20with%20Bandwith%2020/40%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20140%20with%20Bandwith%2020/40%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:21:29.291" endtime="20210618 19:21:29.475"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:21:44.484" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:21:29.476" endtime="20210618 19:21:44.484"/>
</kw>
<status status="PASS" starttime="20210618 19:21:29.035" endtime="20210618 19:21:44.485"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:21:44.485" endtime="20210618 19:21:44.489"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:21:44.489" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:21:44.489" endtime="20210618 19:21:44.934"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:21:46.945" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:21:44.935" endtime="20210618 19:21:46.945"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:21:46.945" endtime="20210618 19:21:48.154"/>
</kw>
<status status="PASS" starttime="20210618 19:21:44.485" endtime="20210618 19:21:48.155"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:21:48.156" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:21:48.155" endtime="20210618 19:21:48.156"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:21:48.299" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:28:25 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:21:48.157" endtime="20210618 19:21:48.300"/>
</kw>
<status status="PASS" starttime="20210618 19:21:48.155" endtime="20210618 19:21:48.300"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:21:48.303" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:21:48.405" level="INFO">ARC_WLAN_5G_Channel=140
#</msg>
<msg timestamp="20210618 19:21:48.405" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=140
#</msg>
<status status="PASS" starttime="20210618 19:21:48.300" endtime="20210618 19:21:48.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:21:48.406" level="INFO">ARC_WLAN_5G_Channel=140
#</msg>
<status status="PASS" starttime="20210618 19:21:48.406" endtime="20210618 19:21:48.406"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:21:48.407" level="INFO">${result_5Ghz} = ['140']</msg>
<status status="PASS" starttime="20210618 19:21:48.406" endtime="20210618 19:21:48.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:21:48.408" level="INFO">5Ghz Channel ID from console is 140</msg>
<status status="PASS" starttime="20210618 19:21:48.407" endtime="20210618 19:21:48.408"/>
</kw>
<msg timestamp="20210618 19:21:48.409" level="INFO">${5Ghz_ChannelID_Console} = 140</msg>
<status status="PASS" starttime="20210618 19:21:48.300" endtime="20210618 19:21:48.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:21:48.410" level="INFO">Channel ID from Console is 140</msg>
<status status="PASS" starttime="20210618 19:21:48.410" endtime="20210618 19:21:48.410"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:21:48.410" endtime="20210618 19:21:48.410"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:21:48.410" endtime="20210618 19:21:48.411"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:21:48.411" endtime="20210618 19:21:48.411"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:21:48.411" endtime="20210618 19:21:48.411"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:24:18.418" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:21:48.411" endtime="20210618 19:24:18.418"/>
</kw>
<status status="PASS" starttime="20210618 19:21:48.411" endtime="20210618 19:24:18.418"/>
</branch>
<status status="PASS" starttime="20210618 19:21:48.411" endtime="20210618 19:24:18.418"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:24:18.419" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:24:18.423" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:24:19.014" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:24:18.419" endtime="20210618 19:24:19.014"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:24:19.016" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:24:19.020" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:24:19.597" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:24:19.597" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:24:19.015" endtime="20210618 19:24:19.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:24:19.599" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 9 : KPN Fon
      Network type            : Infrastructure
      Authentication          : Open
      Encryption              : None 
      BSSID 1                 : 72:6a:b0:0d:03:64
           Signal             : 99%  

</msg>
<status status="PASS" starttime="20210618 19:24:19.597" endtime="20210618 19:24:19.599"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:24:19.601" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 19:24:19.600" endtime="20210618 19:24:19.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:24:19.603" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 19:24:19.601" endtime="20210618 19:24:19.603"/>
</kw>
<status status="FAIL" starttime="20210618 19:24:18.418" endtime="20210618 19:24:19.604"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 19:24:19.604" endtime="20210618 19:24:19.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:24:19.604" endtime="20210618 19:24:19.604"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 19:24:19.604" endtime="20210618 19:24:19.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:24:19.605" endtime="20210618 19:24:19.605"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 19:24:19.605" endtime="20210618 19:24:19.605"/>
</kw>
<status status="FAIL" starttime="20210618 19:21:23.039" endtime="20210618 19:24:19.605"/>
</kw>
<status status="FAIL" starttime="20210618 19:21:01.347" endtime="20210618 19:24:19.606">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t31" name="Verify setting 5GHz ChannelID 36 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:24:19.609" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:24:19.638" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-146.log</msg>
<status status="PASS" starttime="20210618 19:24:19.609" endtime="20210618 19:24:30.431"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:24:30.431" endtime="20210618 19:24:30.696"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:24:32.710" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:24:30.696" endtime="20210618 19:24:32.710"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:24:32.711" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:24:33.009" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:24:32.710" endtime="20210618 19:24:33.027"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:24:35.036" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:24:33.028" endtime="20210618 19:24:35.036"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:24:35.037" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:24:35.036" endtime="20210618 19:24:37.046"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:24:42.061" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:24:37.046" endtime="20210618 19:24:42.061"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:24:42.061" endtime="20210618 19:24:42.069"/>
</kw>
<status status="PASS" starttime="20210618 19:24:19.608" endtime="20210618 19:24:42.069"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>36</arg>
<arg>2</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:24:42.071" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:24:42.070" endtime="20210618 19:24:42.118"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:24:47.124" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:24:42.119" endtime="20210618 19:24:47.124"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:24:47.124" endtime="20210618 19:24:47.132"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:24:47.132" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:24:47.132" endtime="20210618 19:24:47.141"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:24:47.149" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:24:47.141" endtime="20210618 19:24:47.150"/>
</kw>
<status status="PASS" starttime="20210618 19:24:42.070" endtime="20210618 19:24:47.150"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:24:47.151" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:24:47.150" endtime="20210618 19:24:47.384"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:24:47.385" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 19:24:47.384" endtime="20210618 19:24:47.611"/>
</kw>
<status status="PASS" starttime="20210618 19:24:47.150" endtime="20210618 19:24:47.611"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:24:47.612" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:24:47.612" endtime="20210618 19:24:47.837"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:24:47.838" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:24:47.838" endtime="20210618 19:24:48.066"/>
</kw>
<status status="PASS" starttime="20210618 19:24:47.611" endtime="20210618 19:24:48.066"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:24:48.067" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:24:48.066" endtime="20210618 19:24:48.320"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:24:48.492" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2036%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2036%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:24:48.320" endtime="20210618 19:24:48.492"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:25:03.505" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:24:48.492" endtime="20210618 19:25:03.505"/>
</kw>
<status status="PASS" starttime="20210618 19:24:48.066" endtime="20210618 19:25:03.506"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:25:03.506" endtime="20210618 19:25:03.510"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:25:03.511" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:25:03.511" endtime="20210618 19:25:03.939"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:25:05.950" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:25:03.940" endtime="20210618 19:25:05.950"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:25:05.950" endtime="20210618 19:25:07.189"/>
</kw>
<status status="PASS" starttime="20210618 19:25:03.506" endtime="20210618 19:25:07.189"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:25:07.190" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:25:07.189" endtime="20210618 19:25:07.191"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:25:07.333" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:31:44 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:25:07.191" endtime="20210618 19:25:07.333"/>
</kw>
<status status="PASS" starttime="20210618 19:25:07.189" endtime="20210618 19:25:07.334"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:25:07.337" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:25:07.446" level="INFO">ARC_WLAN_5G_Channel=36
#</msg>
<msg timestamp="20210618 19:25:07.446" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=36
#</msg>
<status status="PASS" starttime="20210618 19:25:07.334" endtime="20210618 19:25:07.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:25:07.449" level="INFO">ARC_WLAN_5G_Channel=36
#</msg>
<status status="PASS" starttime="20210618 19:25:07.447" endtime="20210618 19:25:07.450"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:25:07.451" level="INFO">${result_5Ghz} = ['36']</msg>
<status status="PASS" starttime="20210618 19:25:07.450" endtime="20210618 19:25:07.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:25:07.452" level="INFO">5Ghz Channel ID from console is 36</msg>
<status status="PASS" starttime="20210618 19:25:07.451" endtime="20210618 19:25:07.452"/>
</kw>
<msg timestamp="20210618 19:25:07.453" level="INFO">${5Ghz_ChannelID_Console} = 36</msg>
<status status="PASS" starttime="20210618 19:25:07.334" endtime="20210618 19:25:07.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:25:07.453" level="INFO">Channel ID from Console is 36</msg>
<status status="PASS" starttime="20210618 19:25:07.453" endtime="20210618 19:25:07.453"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:25:07.453" endtime="20210618 19:25:07.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:25:07.454" endtime="20210618 19:25:07.454"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:26:07.459" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 19:25:07.455" endtime="20210618 19:26:07.459"/>
</kw>
<status status="PASS" starttime="20210618 19:25:07.455" endtime="20210618 19:26:07.459"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:26:07.459" endtime="20210618 19:26:07.459"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:26:07.459" endtime="20210618 19:26:07.459"/>
</branch>
<status status="PASS" starttime="20210618 19:25:07.455" endtime="20210618 19:26:07.460"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:26:07.460" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:26:07.464" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:26:08.048" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:26:07.460" endtime="20210618 19:26:08.048"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:26:08.049" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:26:08.052" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:26:08.668" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:26:08.668" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:26:08.048" endtime="20210618 19:26:08.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:26:08.670" level="INFO">
  
&gt; SSID 6 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 36 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 19:26:08.669" endtime="20210618 19:26:08.670"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:26:08.671" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '36']</msg>
<status status="PASS" starttime="20210618 19:26:08.670" endtime="20210618 19:26:08.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:26:08.673" level="INFO">Analyser Channel IDs are 4 and 36</msg>
<status status="PASS" starttime="20210618 19:26:08.671" endtime="20210618 19:26:08.673"/>
</kw>
<msg timestamp="20210618 19:26:08.677" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '36']</msg>
<status status="PASS" starttime="20210618 19:26:07.460" endtime="20210618 19:26:08.677"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:26:08.677" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:26:08.677" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:26:08.677" endtime="20210618 19:26:08.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:26:08.678" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:26:08.678" endtime="20210618 19:26:08.678"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:26:08.678" endtime="20210618 19:26:08.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:26:08.679" level="INFO">['4', '36']</msg>
<status status="PASS" starttime="20210618 19:26:08.679" endtime="20210618 19:26:08.679"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:26:08.679" endtime="20210618 19:26:08.679"/>
</kw>
<status status="PASS" starttime="20210618 19:24:42.070" endtime="20210618 19:26:08.679"/>
</kw>
<status status="PASS" starttime="20210618 19:24:19.607" endtime="20210618 19:26:08.680"/>
</test>
<test id="s1-t32" name="Verify setting 5GHz ChannelID 40 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:26:08.683" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:26:08.705" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-147.log</msg>
<status status="PASS" starttime="20210618 19:26:08.683" endtime="20210618 19:26:18.372"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:26:18.372" endtime="20210618 19:26:18.658"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:26:20.663" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:26:18.659" endtime="20210618 19:26:20.663"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:26:20.664" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:26:20.973" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:26:20.663" endtime="20210618 19:26:20.993"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:26:23.005" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:26:20.993" endtime="20210618 19:26:23.006"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:26:23.007" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:26:23.006" endtime="20210618 19:26:25.464"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:26:30.476" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:26:25.464" endtime="20210618 19:26:30.476"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:26:30.476" endtime="20210618 19:26:30.486"/>
</kw>
<status status="PASS" starttime="20210618 19:26:08.683" endtime="20210618 19:26:30.486"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>40</arg>
<arg>3</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:26:30.488" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:26:30.488" endtime="20210618 19:26:30.543"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:26:35.557" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:26:30.543" endtime="20210618 19:26:35.557"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:26:35.557" endtime="20210618 19:26:35.564"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:26:35.565" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:26:35.564" endtime="20210618 19:26:35.574"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:26:35.581" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:26:35.575" endtime="20210618 19:26:35.581"/>
</kw>
<status status="PASS" starttime="20210618 19:26:30.488" endtime="20210618 19:26:35.581"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:26:35.583" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:26:35.582" endtime="20210618 19:26:35.817"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:26:35.818" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:26:35.817" endtime="20210618 19:26:36.045"/>
</kw>
<status status="PASS" starttime="20210618 19:26:35.582" endtime="20210618 19:26:36.045"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:26:36.046" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:26:36.045" endtime="20210618 19:26:36.272"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:26:36.273" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:26:36.273" endtime="20210618 19:26:36.499"/>
</kw>
<status status="PASS" starttime="20210618 19:26:36.045" endtime="20210618 19:26:36.499"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:26:36.500" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:26:36.500" endtime="20210618 19:26:36.757"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:26:36.965" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2040%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2040%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:26:36.757" endtime="20210618 19:26:36.966"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:26:51.972" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:26:36.966" endtime="20210618 19:26:51.972"/>
</kw>
<status status="PASS" starttime="20210618 19:26:36.499" endtime="20210618 19:26:51.972"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:26:51.974" endtime="20210618 19:26:51.977"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:26:51.978" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:26:51.978" endtime="20210618 19:26:52.215"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:26:54.229" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:26:52.215" endtime="20210618 19:26:54.229"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:26:54.229" endtime="20210618 19:26:55.437"/>
</kw>
<status status="PASS" starttime="20210618 19:26:51.973" endtime="20210618 19:26:55.437"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:26:55.438" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:26:55.437" endtime="20210618 19:26:55.440"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:26:55.596" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:33:33 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:26:55.441" endtime="20210618 19:26:55.597"/>
</kw>
<status status="PASS" starttime="20210618 19:26:55.437" endtime="20210618 19:26:55.597"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:26:55.602" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:26:55.703" level="INFO">ARC_WLAN_5G_Channel=40
#</msg>
<msg timestamp="20210618 19:26:55.704" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=40
#</msg>
<status status="PASS" starttime="20210618 19:26:55.598" endtime="20210618 19:26:55.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:26:55.705" level="INFO">ARC_WLAN_5G_Channel=40
#</msg>
<status status="PASS" starttime="20210618 19:26:55.704" endtime="20210618 19:26:55.706"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:26:55.710" level="INFO">${result_5Ghz} = ['40']</msg>
<status status="PASS" starttime="20210618 19:26:55.707" endtime="20210618 19:26:55.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:26:55.712" level="INFO">5Ghz Channel ID from console is 40</msg>
<status status="PASS" starttime="20210618 19:26:55.710" endtime="20210618 19:26:55.712"/>
</kw>
<msg timestamp="20210618 19:26:55.714" level="INFO">${5Ghz_ChannelID_Console} = 40</msg>
<status status="PASS" starttime="20210618 19:26:55.597" endtime="20210618 19:26:55.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:26:55.714" level="INFO">Channel ID from Console is 40</msg>
<status status="PASS" starttime="20210618 19:26:55.714" endtime="20210618 19:26:55.714"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:26:55.715" endtime="20210618 19:26:55.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:26:55.715" endtime="20210618 19:26:55.715"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:27:55.729" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 19:26:55.716" endtime="20210618 19:27:55.729"/>
</kw>
<status status="PASS" starttime="20210618 19:26:55.716" endtime="20210618 19:27:55.729"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:27:55.729" endtime="20210618 19:27:55.729"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:27:55.729" endtime="20210618 19:27:55.730"/>
</branch>
<status status="PASS" starttime="20210618 19:26:55.715" endtime="20210618 19:27:55.730"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:27:55.731" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:27:55.735" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:27:56.331" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:27:55.730" endtime="20210618 19:27:56.331"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:27:56.335" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:27:56.339" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:27:57.003" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:27:57.004" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:27:56.332" endtime="20210618 19:27:57.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:27:57.005" level="INFO">
  
&gt; SSID 4 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 19:27:57.004" endtime="20210618 19:27:57.005"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:27:57.006" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '40']</msg>
<status status="PASS" starttime="20210618 19:27:57.005" endtime="20210618 19:27:57.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:27:57.008" level="INFO">Analyser Channel IDs are 4 and 40</msg>
<status status="PASS" starttime="20210618 19:27:57.007" endtime="20210618 19:27:57.008"/>
</kw>
<msg timestamp="20210618 19:27:57.010" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '40']</msg>
<status status="PASS" starttime="20210618 19:27:55.730" endtime="20210618 19:27:57.010"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:27:57.010" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:27:57.010" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:27:57.010" endtime="20210618 19:27:57.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:27:57.011" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:27:57.011" endtime="20210618 19:27:57.011"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:27:57.011" endtime="20210618 19:27:57.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:27:57.012" level="INFO">['4', '40']</msg>
<status status="PASS" starttime="20210618 19:27:57.012" endtime="20210618 19:27:57.012"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:27:57.012" endtime="20210618 19:27:57.013"/>
</kw>
<status status="PASS" starttime="20210618 19:26:30.487" endtime="20210618 19:27:57.013"/>
</kw>
<status status="PASS" starttime="20210618 19:26:08.682" endtime="20210618 19:27:57.013"/>
</test>
<test id="s1-t33" name="Verify setting 5GHz ChannelID 44 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:27:57.019" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:27:57.041" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-148.log</msg>
<status status="PASS" starttime="20210618 19:27:57.018" endtime="20210618 19:28:06.941"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:28:06.942" endtime="20210618 19:28:07.236"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:28:09.240" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:28:07.237" endtime="20210618 19:28:09.240"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:28:09.240" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:28:09.536" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:28:09.240" endtime="20210618 19:28:09.555"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:28:11.555" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:28:09.555" endtime="20210618 19:28:11.555"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:28:11.556" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:28:11.555" endtime="20210618 19:28:13.410"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:28:18.419" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:28:13.410" endtime="20210618 19:28:18.419"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:28:18.420" endtime="20210618 19:28:18.428"/>
</kw>
<status status="PASS" starttime="20210618 19:27:57.016" endtime="20210618 19:28:18.428"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>44</arg>
<arg>4</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:28:18.430" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:28:18.430" endtime="20210618 19:28:18.483"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:28:23.498" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:28:18.484" endtime="20210618 19:28:23.498"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:28:23.498" endtime="20210618 19:28:23.505"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:28:23.505" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:28:23.505" endtime="20210618 19:28:23.515"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:28:23.522" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:28:23.515" endtime="20210618 19:28:23.522"/>
</kw>
<status status="PASS" starttime="20210618 19:28:18.430" endtime="20210618 19:28:23.522"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:28:23.523" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:28:23.522" endtime="20210618 19:28:23.757"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:28:23.758" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[4]/a'.</msg>
<status status="PASS" starttime="20210618 19:28:23.757" endtime="20210618 19:28:23.997"/>
</kw>
<status status="PASS" starttime="20210618 19:28:23.522" endtime="20210618 19:28:23.998"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:28:23.999" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:28:23.998" endtime="20210618 19:28:24.226"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:28:24.226" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:28:24.226" endtime="20210618 19:28:24.453"/>
</kw>
<status status="PASS" starttime="20210618 19:28:23.998" endtime="20210618 19:28:24.454"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:28:24.455" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:28:24.455" endtime="20210618 19:28:24.710"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:28:24.924" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2044%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2044%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:28:24.712" endtime="20210618 19:28:24.924"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:28:39.934" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:28:24.925" endtime="20210618 19:28:39.934"/>
</kw>
<status status="PASS" starttime="20210618 19:28:24.454" endtime="20210618 19:28:39.934"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:28:39.935" endtime="20210618 19:28:39.939"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:28:39.939" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:28:39.939" endtime="20210618 19:28:40.179"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:28:42.184" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:28:40.179" endtime="20210618 19:28:42.184"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:28:42.184" endtime="20210618 19:28:43.454"/>
</kw>
<status status="PASS" starttime="20210618 19:28:39.935" endtime="20210618 19:28:43.455"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:28:43.455" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:28:43.455" endtime="20210618 19:28:43.456"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:28:43.595" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:35:21 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:28:43.456" endtime="20210618 19:28:43.596"/>
</kw>
<status status="PASS" starttime="20210618 19:28:43.455" endtime="20210618 19:28:43.596"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:28:43.601" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:28:43.701" level="INFO">ARC_WLAN_5G_Channel=44
#</msg>
<msg timestamp="20210618 19:28:43.701" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=44
#</msg>
<status status="PASS" starttime="20210618 19:28:43.598" endtime="20210618 19:28:43.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:28:43.702" level="INFO">ARC_WLAN_5G_Channel=44
#</msg>
<status status="PASS" starttime="20210618 19:28:43.702" endtime="20210618 19:28:43.702"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:28:43.703" level="INFO">${result_5Ghz} = ['44']</msg>
<status status="PASS" starttime="20210618 19:28:43.702" endtime="20210618 19:28:43.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:28:43.704" level="INFO">5Ghz Channel ID from console is 44</msg>
<status status="PASS" starttime="20210618 19:28:43.703" endtime="20210618 19:28:43.704"/>
</kw>
<msg timestamp="20210618 19:28:43.704" level="INFO">${5Ghz_ChannelID_Console} = 44</msg>
<status status="PASS" starttime="20210618 19:28:43.597" endtime="20210618 19:28:43.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:28:43.705" level="INFO">Channel ID from Console is 44</msg>
<status status="PASS" starttime="20210618 19:28:43.705" endtime="20210618 19:28:43.705"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:28:43.705" endtime="20210618 19:28:43.705"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:28:43.705" endtime="20210618 19:28:43.706"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:29:43.709" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 19:28:43.706" endtime="20210618 19:29:43.709"/>
</kw>
<status status="PASS" starttime="20210618 19:28:43.706" endtime="20210618 19:29:43.709"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:29:43.709" endtime="20210618 19:29:43.709"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:29:43.709" endtime="20210618 19:29:43.709"/>
</branch>
<status status="PASS" starttime="20210618 19:28:43.706" endtime="20210618 19:29:43.710"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:29:43.710" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:29:43.714" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:29:44.347" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:29:43.710" endtime="20210618 19:29:44.348"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:29:44.349" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:29:44.352" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:29:44.945" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:29:44.945" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:29:44.348" endtime="20210618 19:29:44.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:29:44.946" level="INFO">
  
&gt; SSID 9 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 44 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 19:29:44.945" endtime="20210618 19:29:44.946"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:29:44.948" level="INFO">${Analyser_ChannelID_5Ghz} = ['44', '4']</msg>
<status status="PASS" starttime="20210618 19:29:44.947" endtime="20210618 19:29:44.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:29:44.951" level="INFO">Analyser Channel IDs are 44 and 4</msg>
<status status="PASS" starttime="20210618 19:29:44.949" endtime="20210618 19:29:44.951"/>
</kw>
<msg timestamp="20210618 19:29:44.953" level="INFO">${5Ghz_ChannelID_Analyser} = ['44', '4']</msg>
<status status="PASS" starttime="20210618 19:29:43.710" endtime="20210618 19:29:44.953"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:29:44.953" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:29:44.954" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:29:44.953" endtime="20210618 19:29:44.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:29:44.954" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:29:44.954" endtime="20210618 19:29:44.954"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:29:44.954" endtime="20210618 19:29:44.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:29:44.955" level="INFO">['44', '4']</msg>
<status status="PASS" starttime="20210618 19:29:44.955" endtime="20210618 19:29:44.955"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:29:44.955" endtime="20210618 19:29:44.956"/>
</kw>
<status status="PASS" starttime="20210618 19:28:18.429" endtime="20210618 19:29:44.956"/>
</kw>
<status status="PASS" starttime="20210618 19:27:57.015" endtime="20210618 19:29:44.957"/>
</test>
<test id="s1-t34" name="Verify setting 5GHz ChannelID 48 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:29:44.964" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:29:44.985" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-149.log</msg>
<status status="PASS" starttime="20210618 19:29:44.963" endtime="20210618 19:29:54.924"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:29:54.925" endtime="20210618 19:29:55.203"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:29:57.212" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:29:55.203" endtime="20210618 19:29:57.212"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:29:57.213" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:29:57.509" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:29:57.212" endtime="20210618 19:29:57.527"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:29:59.529" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:29:57.528" endtime="20210618 19:29:59.529"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:29:59.530" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:29:59.529" endtime="20210618 19:30:01.416"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:30:06.426" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:30:01.417" endtime="20210618 19:30:06.426"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:30:06.426" endtime="20210618 19:30:06.436"/>
</kw>
<status status="PASS" starttime="20210618 19:29:44.963" endtime="20210618 19:30:06.436"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>48</arg>
<arg>5</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:30:06.438" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:30:06.437" endtime="20210618 19:30:06.489"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:30:11.490" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:30:06.490" endtime="20210618 19:30:11.490"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:30:11.490" endtime="20210618 19:30:11.498"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:30:11.499" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:30:11.499" endtime="20210618 19:30:11.510"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:30:11.517" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:30:11.510" endtime="20210618 19:30:11.517"/>
</kw>
<status status="PASS" starttime="20210618 19:30:06.437" endtime="20210618 19:30:11.518"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:30:11.520" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:30:11.520" endtime="20210618 19:30:11.747"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:30:11.748" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[5]/a'.</msg>
<status status="PASS" starttime="20210618 19:30:11.747" endtime="20210618 19:30:11.972"/>
</kw>
<status status="PASS" starttime="20210618 19:30:11.519" endtime="20210618 19:30:11.972"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:30:11.973" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:30:11.973" endtime="20210618 19:30:12.202"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:30:12.203" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:30:12.203" endtime="20210618 19:30:12.428"/>
</kw>
<status status="PASS" starttime="20210618 19:30:11.973" endtime="20210618 19:30:12.428"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:30:12.429" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:30:12.429" endtime="20210618 19:30:12.682"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:30:12.884" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2048%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2048%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:30:12.683" endtime="20210618 19:30:12.884"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:30:27.894" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:30:12.884" endtime="20210618 19:30:27.894"/>
</kw>
<status status="PASS" starttime="20210618 19:30:12.428" endtime="20210618 19:30:27.894"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:30:27.895" endtime="20210618 19:30:27.898"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:30:27.899" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:30:27.898" endtime="20210618 19:30:28.137"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:30:30.144" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:30:28.137" endtime="20210618 19:30:30.144"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:30:30.144" endtime="20210618 19:30:31.424"/>
</kw>
<status status="PASS" starttime="20210618 19:30:27.894" endtime="20210618 19:30:31.424"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:30:31.425" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:30:31.425" endtime="20210618 19:30:31.426"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:30:31.558" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:37:09 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:30:31.426" endtime="20210618 19:30:31.558"/>
</kw>
<status status="PASS" starttime="20210618 19:30:31.424" endtime="20210618 19:30:31.559"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:30:31.562" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:30:31.664" level="INFO">ARC_WLAN_5G_Channel=48
#</msg>
<msg timestamp="20210618 19:30:31.664" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=48
#</msg>
<status status="PASS" starttime="20210618 19:30:31.559" endtime="20210618 19:30:31.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:30:31.665" level="INFO">ARC_WLAN_5G_Channel=48
#</msg>
<status status="PASS" starttime="20210618 19:30:31.665" endtime="20210618 19:30:31.665"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:30:31.666" level="INFO">${result_5Ghz} = ['48']</msg>
<status status="PASS" starttime="20210618 19:30:31.665" endtime="20210618 19:30:31.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:30:31.667" level="INFO">5Ghz Channel ID from console is 48</msg>
<status status="PASS" starttime="20210618 19:30:31.666" endtime="20210618 19:30:31.667"/>
</kw>
<msg timestamp="20210618 19:30:31.668" level="INFO">${5Ghz_ChannelID_Console} = 48</msg>
<status status="PASS" starttime="20210618 19:30:31.559" endtime="20210618 19:30:31.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:30:31.669" level="INFO">Channel ID from Console is 48</msg>
<status status="PASS" starttime="20210618 19:30:31.668" endtime="20210618 19:30:31.669"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:30:31.669" endtime="20210618 19:30:31.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:30:31.669" endtime="20210618 19:30:31.670"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:31:31.681" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 19:30:31.670" endtime="20210618 19:31:31.682"/>
</kw>
<status status="PASS" starttime="20210618 19:30:31.670" endtime="20210618 19:31:31.682"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:31:31.682" endtime="20210618 19:31:31.682"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:31:31.682" endtime="20210618 19:31:31.683"/>
</branch>
<status status="PASS" starttime="20210618 19:30:31.670" endtime="20210618 19:31:31.683"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:31:31.684" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:31:31.687" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:31:32.293" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:31:31.683" endtime="20210618 19:31:32.294"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:31:32.294" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:31:32.299" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:31:32.920" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:31:32.920" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:31:32.294" endtime="20210618 19:31:32.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:31:32.922" level="INFO">
  
&gt; SSID 7 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 48 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 19:31:32.921" endtime="20210618 19:31:32.922"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:31:32.923" level="INFO">${Analyser_ChannelID_5Ghz} = ['48', '4']</msg>
<status status="PASS" starttime="20210618 19:31:32.922" endtime="20210618 19:31:32.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:31:32.925" level="INFO">Analyser Channel IDs are 48 and 4</msg>
<status status="PASS" starttime="20210618 19:31:32.923" endtime="20210618 19:31:32.925"/>
</kw>
<msg timestamp="20210618 19:31:32.927" level="INFO">${5Ghz_ChannelID_Analyser} = ['48', '4']</msg>
<status status="PASS" starttime="20210618 19:31:31.683" endtime="20210618 19:31:32.927"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:31:32.928" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:31:32.928" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:31:32.927" endtime="20210618 19:31:32.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:31:32.928" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:31:32.928" endtime="20210618 19:31:32.928"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:31:32.928" endtime="20210618 19:31:32.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:31:32.929" level="INFO">['48', '4']</msg>
<status status="PASS" starttime="20210618 19:31:32.929" endtime="20210618 19:31:32.929"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:31:32.929" endtime="20210618 19:31:32.930"/>
</kw>
<status status="PASS" starttime="20210618 19:30:06.437" endtime="20210618 19:31:32.930"/>
</kw>
<status status="PASS" starttime="20210618 19:29:44.962" endtime="20210618 19:31:32.930"/>
</test>
<test id="s1-t35" name="Verify setting 5GHz ChannelID 52 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:31:32.937" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:31:32.958" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-150.log</msg>
<status status="PASS" starttime="20210618 19:31:32.937" endtime="20210618 19:31:43.554"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:31:43.555" endtime="20210618 19:31:43.829"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:31:45.832" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:31:43.829" endtime="20210618 19:31:45.832"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:31:45.833" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:31:46.126" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:31:45.832" endtime="20210618 19:31:46.143"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:31:48.159" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:31:46.143" endtime="20210618 19:31:48.159"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:31:48.160" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:31:48.159" endtime="20210618 19:31:50.023"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:31:55.023" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:31:50.023" endtime="20210618 19:31:55.023"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:31:55.023" endtime="20210618 19:31:55.031"/>
</kw>
<status status="PASS" starttime="20210618 19:31:32.936" endtime="20210618 19:31:55.031"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>52</arg>
<arg>6</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:31:55.034" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:31:55.033" endtime="20210618 19:31:55.086"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:32:00.098" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:31:55.087" endtime="20210618 19:32:00.098"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:32:00.098" endtime="20210618 19:32:00.104"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:32:00.105" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:32:00.104" endtime="20210618 19:32:00.115"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:32:00.121" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:32:00.115" endtime="20210618 19:32:00.121"/>
</kw>
<status status="PASS" starttime="20210618 19:31:55.033" endtime="20210618 19:32:00.121"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:32:00.122" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:32:00.122" endtime="20210618 19:32:00.357"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:32:00.358" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[6]/a'.</msg>
<status status="PASS" starttime="20210618 19:32:00.357" endtime="20210618 19:32:00.583"/>
</kw>
<status status="PASS" starttime="20210618 19:32:00.122" endtime="20210618 19:32:00.583"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:32:00.584" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:32:00.584" endtime="20210618 19:32:00.812"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:32:00.813" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:32:00.812" endtime="20210618 19:32:01.040"/>
</kw>
<status status="PASS" starttime="20210618 19:32:00.583" endtime="20210618 19:32:01.040"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:32:01.041" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:32:01.040" endtime="20210618 19:32:01.298"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:32:01.526" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2052%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2052%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:32:01.298" endtime="20210618 19:32:01.526"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:32:16.528" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:32:01.526" endtime="20210618 19:32:16.528"/>
</kw>
<status status="PASS" starttime="20210618 19:32:01.040" endtime="20210618 19:32:16.528"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:32:16.529" endtime="20210618 19:32:16.532"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:32:16.532" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:32:16.532" endtime="20210618 19:32:16.773"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:32:18.778" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:32:16.773" endtime="20210618 19:32:18.779"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:32:18.779" endtime="20210618 19:32:19.968"/>
</kw>
<status status="PASS" starttime="20210618 19:32:16.528" endtime="20210618 19:32:19.969"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:32:19.970" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:32:19.969" endtime="20210618 19:32:19.971"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:32:20.118" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:38:57 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:32:19.971" endtime="20210618 19:32:20.118"/>
</kw>
<status status="PASS" starttime="20210618 19:32:19.969" endtime="20210618 19:32:20.119"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:32:20.122" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:32:20.238" level="INFO">ARC_WLAN_5G_Channel=52
#</msg>
<msg timestamp="20210618 19:32:20.238" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=52
#</msg>
<status status="PASS" starttime="20210618 19:32:20.119" endtime="20210618 19:32:20.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:32:20.239" level="INFO">ARC_WLAN_5G_Channel=52
#</msg>
<status status="PASS" starttime="20210618 19:32:20.239" endtime="20210618 19:32:20.239"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:32:20.240" level="INFO">${result_5Ghz} = ['52']</msg>
<status status="PASS" starttime="20210618 19:32:20.239" endtime="20210618 19:32:20.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:32:20.241" level="INFO">5Ghz Channel ID from console is 52</msg>
<status status="PASS" starttime="20210618 19:32:20.240" endtime="20210618 19:32:20.241"/>
</kw>
<msg timestamp="20210618 19:32:20.242" level="INFO">${5Ghz_ChannelID_Console} = 52</msg>
<status status="PASS" starttime="20210618 19:32:20.119" endtime="20210618 19:32:20.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:32:20.242" level="INFO">Channel ID from Console is 52</msg>
<status status="PASS" starttime="20210618 19:32:20.242" endtime="20210618 19:32:20.242"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:32:20.242" endtime="20210618 19:32:20.242"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:32:20.242" endtime="20210618 19:32:20.243"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:33:20.253" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 19:32:20.243" endtime="20210618 19:33:20.253"/>
</kw>
<status status="PASS" starttime="20210618 19:32:20.243" endtime="20210618 19:33:20.253"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:33:20.254" endtime="20210618 19:33:20.254"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:33:20.253" endtime="20210618 19:33:20.254"/>
</branch>
<status status="PASS" starttime="20210618 19:32:20.243" endtime="20210618 19:33:20.254"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:33:20.255" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:33:20.261" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:33:20.843" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:33:20.255" endtime="20210618 19:33:20.844"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:33:20.844" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:33:20.847" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:33:21.464" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:33:21.465" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:33:20.844" endtime="20210618 19:33:21.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:33:21.466" level="INFO">
  
&gt; SSID 2 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 52 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 19:33:21.465" endtime="20210618 19:33:21.466"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:33:21.467" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '52']</msg>
<status status="PASS" starttime="20210618 19:33:21.466" endtime="20210618 19:33:21.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:33:21.470" level="INFO">Analyser Channel IDs are 4 and 52</msg>
<status status="PASS" starttime="20210618 19:33:21.468" endtime="20210618 19:33:21.470"/>
</kw>
<msg timestamp="20210618 19:33:21.471" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '52']</msg>
<status status="PASS" starttime="20210618 19:33:20.254" endtime="20210618 19:33:21.472"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:33:21.472" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:33:21.472" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:33:21.472" endtime="20210618 19:33:21.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:33:21.472" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:33:21.472" endtime="20210618 19:33:21.472"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:33:21.473" endtime="20210618 19:33:21.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:33:21.473" level="INFO">['4', '52']</msg>
<status status="PASS" starttime="20210618 19:33:21.473" endtime="20210618 19:33:21.473"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:33:21.473" endtime="20210618 19:33:21.474"/>
</kw>
<status status="PASS" starttime="20210618 19:31:55.032" endtime="20210618 19:33:21.475"/>
</kw>
<status status="PASS" starttime="20210618 19:31:32.935" endtime="20210618 19:33:21.476"/>
</test>
<test id="s1-t36" name="Verify setting 5GHz ChannelID 56 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:33:21.480" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:33:21.502" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-151.log</msg>
<status status="PASS" starttime="20210618 19:33:21.479" endtime="20210618 19:33:31.491"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:33:31.492" endtime="20210618 19:33:31.779"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:33:33.784" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:33:31.779" endtime="20210618 19:33:33.784"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:33:33.785" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:33:34.080" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:33:33.784" endtime="20210618 19:33:34.102"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:33:36.106" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:33:34.102" endtime="20210618 19:33:36.106"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:33:36.107" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:33:36.106" endtime="20210618 19:33:38.428"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:33:43.438" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:33:38.429" endtime="20210618 19:33:43.438"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:33:43.438" endtime="20210618 19:33:43.445"/>
</kw>
<status status="PASS" starttime="20210618 19:33:21.479" endtime="20210618 19:33:43.446"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>56</arg>
<arg>7</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:33:43.449" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:33:43.449" endtime="20210618 19:33:43.506"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:33:48.506" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:33:43.506" endtime="20210618 19:33:48.506"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:33:48.506" endtime="20210618 19:33:48.513"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:33:48.514" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:33:48.513" endtime="20210618 19:33:48.524"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:33:48.530" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:33:48.524" endtime="20210618 19:33:48.530"/>
</kw>
<status status="PASS" starttime="20210618 19:33:43.448" endtime="20210618 19:33:48.531"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:33:48.531" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:33:48.531" endtime="20210618 19:33:48.766"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:33:48.767" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[7]/a'.</msg>
<status status="PASS" starttime="20210618 19:33:48.766" endtime="20210618 19:33:48.994"/>
</kw>
<status status="PASS" starttime="20210618 19:33:48.531" endtime="20210618 19:33:48.994"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:33:48.995" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:33:48.995" endtime="20210618 19:33:49.221"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:33:49.222" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:33:49.222" endtime="20210618 19:33:49.448"/>
</kw>
<status status="PASS" starttime="20210618 19:33:48.994" endtime="20210618 19:33:49.449"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:33:49.450" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:33:49.449" endtime="20210618 19:33:49.707"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:33:49.894" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2056%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2056%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:33:49.707" endtime="20210618 19:33:49.894"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:34:04.899" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:33:49.894" endtime="20210618 19:34:04.899"/>
</kw>
<status status="PASS" starttime="20210618 19:33:49.449" endtime="20210618 19:34:04.899"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:34:04.900" endtime="20210618 19:34:04.905"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:34:04.905" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:34:04.905" endtime="20210618 19:34:05.338"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:34:07.351" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:34:05.338" endtime="20210618 19:34:07.351"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:34:07.351" endtime="20210618 19:34:08.570"/>
</kw>
<status status="PASS" starttime="20210618 19:34:04.899" endtime="20210618 19:34:08.570"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:34:08.574" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:34:08.573" endtime="20210618 19:34:08.578"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:34:08.718" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:40:46 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:34:08.578" endtime="20210618 19:34:08.718"/>
</kw>
<status status="PASS" starttime="20210618 19:34:08.570" endtime="20210618 19:34:08.719"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:34:08.722" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:34:08.840" level="INFO">ARC_WLAN_5G_Channel=56
#</msg>
<msg timestamp="20210618 19:34:08.840" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=56
#</msg>
<status status="PASS" starttime="20210618 19:34:08.719" endtime="20210618 19:34:08.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:34:08.841" level="INFO">ARC_WLAN_5G_Channel=56
#</msg>
<status status="PASS" starttime="20210618 19:34:08.841" endtime="20210618 19:34:08.841"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:34:08.842" level="INFO">${result_5Ghz} = ['56']</msg>
<status status="PASS" starttime="20210618 19:34:08.841" endtime="20210618 19:34:08.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:34:08.843" level="INFO">5Ghz Channel ID from console is 56</msg>
<status status="PASS" starttime="20210618 19:34:08.842" endtime="20210618 19:34:08.843"/>
</kw>
<msg timestamp="20210618 19:34:08.844" level="INFO">${5Ghz_ChannelID_Console} = 56</msg>
<status status="PASS" starttime="20210618 19:34:08.719" endtime="20210618 19:34:08.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:34:08.844" level="INFO">Channel ID from Console is 56</msg>
<status status="PASS" starttime="20210618 19:34:08.844" endtime="20210618 19:34:08.844"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:34:08.845" endtime="20210618 19:34:08.845"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:34:08.845" endtime="20210618 19:34:08.845"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:35:08.861" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 19:34:08.846" endtime="20210618 19:35:08.861"/>
</kw>
<status status="PASS" starttime="20210618 19:34:08.846" endtime="20210618 19:35:08.861"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:35:08.862" endtime="20210618 19:35:08.862"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:35:08.862" endtime="20210618 19:35:08.862"/>
</branch>
<status status="PASS" starttime="20210618 19:34:08.845" endtime="20210618 19:35:08.862"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:35:08.863" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:35:08.868" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:35:09.477" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:35:08.862" endtime="20210618 19:35:09.477"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:35:09.478" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:35:09.481" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:35:10.125" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:35:10.125" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:35:09.477" endtime="20210618 19:35:10.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:35:10.126" level="INFO">
  
&gt; SSID 9 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 56 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 19:35:10.125" endtime="20210618 19:35:10.126"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:35:10.128" level="INFO">${Analyser_ChannelID_5Ghz} = ['56', '4']</msg>
<status status="PASS" starttime="20210618 19:35:10.127" endtime="20210618 19:35:10.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:35:10.130" level="INFO">Analyser Channel IDs are 56 and 4</msg>
<status status="PASS" starttime="20210618 19:35:10.128" endtime="20210618 19:35:10.130"/>
</kw>
<msg timestamp="20210618 19:35:10.132" level="INFO">${5Ghz_ChannelID_Analyser} = ['56', '4']</msg>
<status status="PASS" starttime="20210618 19:35:08.862" endtime="20210618 19:35:10.132"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:35:10.132" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:35:10.133" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:35:10.132" endtime="20210618 19:35:10.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:35:10.135" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:35:10.134" endtime="20210618 19:35:10.135"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:35:10.135" endtime="20210618 19:35:10.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:35:10.136" level="INFO">['56', '4']</msg>
<status status="PASS" starttime="20210618 19:35:10.136" endtime="20210618 19:35:10.136"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:35:10.136" endtime="20210618 19:35:10.137"/>
</kw>
<status status="PASS" starttime="20210618 19:33:43.447" endtime="20210618 19:35:10.137"/>
</kw>
<status status="PASS" starttime="20210618 19:33:21.478" endtime="20210618 19:35:10.137"/>
</test>
<test id="s1-t37" name="Verify setting 5GHz ChannelID 60 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:35:10.141" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:35:10.164" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-152.log</msg>
<status status="PASS" starttime="20210618 19:35:10.140" endtime="20210618 19:35:20.168"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:35:20.169" endtime="20210618 19:35:20.618"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:35:22.628" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:35:20.619" endtime="20210618 19:35:22.628"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:35:22.631" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:35:22.922" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:35:22.629" endtime="20210618 19:35:22.942"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:35:24.944" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:35:22.942" endtime="20210618 19:35:24.944"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:35:24.945" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:35:24.944" endtime="20210618 19:35:26.764"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:35:31.778" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:35:26.765" endtime="20210618 19:35:31.778"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:35:31.778" endtime="20210618 19:35:31.787"/>
</kw>
<status status="PASS" starttime="20210618 19:35:10.140" endtime="20210618 19:35:31.787"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>60</arg>
<arg>8</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:35:31.791" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:35:31.790" endtime="20210618 19:35:31.851"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:35:36.865" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:35:31.851" endtime="20210618 19:35:36.865"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:35:36.865" endtime="20210618 19:35:36.871"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:35:36.872" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:35:36.872" endtime="20210618 19:35:36.881"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:35:36.888" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:35:36.881" endtime="20210618 19:35:36.888"/>
</kw>
<status status="PASS" starttime="20210618 19:35:31.790" endtime="20210618 19:35:36.888"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:35:36.889" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:35:36.889" endtime="20210618 19:35:37.122"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:35:37.123" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[8]/a'.</msg>
<status status="PASS" starttime="20210618 19:35:37.122" endtime="20210618 19:35:37.349"/>
</kw>
<status status="PASS" starttime="20210618 19:35:36.888" endtime="20210618 19:35:37.350"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:35:37.351" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:35:37.351" endtime="20210618 19:35:37.577"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:35:37.578" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:35:37.577" endtime="20210618 19:35:37.804"/>
</kw>
<status status="PASS" starttime="20210618 19:35:37.350" endtime="20210618 19:35:37.805"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:35:37.805" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:35:37.805" endtime="20210618 19:35:38.064"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:35:38.241" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2060%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2060%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:35:38.065" endtime="20210618 19:35:38.241"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:35:53.251" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:35:38.241" endtime="20210618 19:35:53.251"/>
</kw>
<status status="PASS" starttime="20210618 19:35:37.805" endtime="20210618 19:35:53.251"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:35:53.251" endtime="20210618 19:35:53.255"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:35:53.255" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:35:53.255" endtime="20210618 19:35:53.493"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:35:55.503" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:35:53.493" endtime="20210618 19:35:55.503"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:35:55.503" endtime="20210618 19:35:56.982"/>
</kw>
<status status="PASS" starttime="20210618 19:35:53.251" endtime="20210618 19:35:56.982"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:35:56.983" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:35:56.983" endtime="20210618 19:35:56.984"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:35:57.124" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:42:34 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:35:56.984" endtime="20210618 19:35:57.124"/>
</kw>
<status status="PASS" starttime="20210618 19:35:56.982" endtime="20210618 19:35:57.125"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:35:57.128" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:35:57.244" level="INFO">ARC_WLAN_5G_Channel=60
#</msg>
<msg timestamp="20210618 19:35:57.245" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=60
#</msg>
<status status="PASS" starttime="20210618 19:35:57.125" endtime="20210618 19:35:57.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:35:57.246" level="INFO">ARC_WLAN_5G_Channel=60
#</msg>
<status status="PASS" starttime="20210618 19:35:57.245" endtime="20210618 19:35:57.246"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:35:57.249" level="INFO">${result_5Ghz} = ['60']</msg>
<status status="PASS" starttime="20210618 19:35:57.247" endtime="20210618 19:35:57.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:35:57.251" level="INFO">5Ghz Channel ID from console is 60</msg>
<status status="PASS" starttime="20210618 19:35:57.250" endtime="20210618 19:35:57.251"/>
</kw>
<msg timestamp="20210618 19:35:57.252" level="INFO">${5Ghz_ChannelID_Console} = 60</msg>
<status status="PASS" starttime="20210618 19:35:57.125" endtime="20210618 19:35:57.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:35:57.253" level="INFO">Channel ID from Console is 60</msg>
<status status="PASS" starttime="20210618 19:35:57.253" endtime="20210618 19:35:57.253"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:35:57.253" endtime="20210618 19:35:57.253"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:35:57.253" endtime="20210618 19:35:57.254"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:36:57.258" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 19:35:57.254" endtime="20210618 19:36:57.258"/>
</kw>
<status status="PASS" starttime="20210618 19:35:57.254" endtime="20210618 19:36:57.258"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:36:57.259" endtime="20210618 19:36:57.259"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:36:57.259" endtime="20210618 19:36:57.259"/>
</branch>
<status status="PASS" starttime="20210618 19:35:57.254" endtime="20210618 19:36:57.259"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:36:57.260" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:36:57.264" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:36:57.883" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:36:57.260" endtime="20210618 19:36:57.883"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:36:57.884" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:36:57.887" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:36:58.494" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:36:58.494" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:36:57.884" endtime="20210618 19:36:58.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:36:58.496" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 60 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 19:36:58.495" endtime="20210618 19:36:58.496"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:36:58.497" level="INFO">${Analyser_ChannelID_5Ghz} = ['60', '4']</msg>
<status status="PASS" starttime="20210618 19:36:58.496" endtime="20210618 19:36:58.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:36:58.499" level="INFO">Analyser Channel IDs are 60 and 4</msg>
<status status="PASS" starttime="20210618 19:36:58.497" endtime="20210618 19:36:58.499"/>
</kw>
<msg timestamp="20210618 19:36:58.501" level="INFO">${5Ghz_ChannelID_Analyser} = ['60', '4']</msg>
<status status="PASS" starttime="20210618 19:36:57.259" endtime="20210618 19:36:58.501"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:36:58.501" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:36:58.501" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:36:58.501" endtime="20210618 19:36:58.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:36:58.502" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:36:58.501" endtime="20210618 19:36:58.502"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:36:58.502" endtime="20210618 19:36:58.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:36:58.503" level="INFO">['60', '4']</msg>
<status status="PASS" starttime="20210618 19:36:58.502" endtime="20210618 19:36:58.503"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:36:58.503" endtime="20210618 19:36:58.504"/>
</kw>
<status status="PASS" starttime="20210618 19:35:31.788" endtime="20210618 19:36:58.504"/>
</kw>
<status status="PASS" starttime="20210618 19:35:10.139" endtime="20210618 19:36:58.505"/>
</test>
<test id="s1-t38" name="Verify setting 5GHz ChannelID 64 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:36:58.512" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:36:58.531" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-153.log</msg>
<status status="PASS" starttime="20210618 19:36:58.511" endtime="20210618 19:37:09.197"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:37:09.197" endtime="20210618 19:37:09.623"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:37:11.631" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:37:09.624" endtime="20210618 19:37:11.631"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:37:11.635" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:37:11.943" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:37:11.631" endtime="20210618 19:37:11.967"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:37:13.978" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:37:11.967" endtime="20210618 19:37:13.978"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:37:13.979" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:37:13.978" endtime="20210618 19:37:15.895"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:37:20.900" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:37:15.895" endtime="20210618 19:37:20.900"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:37:20.900" endtime="20210618 19:37:20.910"/>
</kw>
<status status="PASS" starttime="20210618 19:36:58.511" endtime="20210618 19:37:20.910"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>64</arg>
<arg>9</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:37:20.912" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:37:20.912" endtime="20210618 19:37:20.965"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:37:25.980" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:37:20.965" endtime="20210618 19:37:25.980"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:37:25.980" endtime="20210618 19:37:25.988"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:37:25.988" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:37:25.988" endtime="20210618 19:37:25.996"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:37:26.007" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:37:25.997" endtime="20210618 19:37:26.007"/>
</kw>
<status status="PASS" starttime="20210618 19:37:20.911" endtime="20210618 19:37:26.007"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:37:26.008" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:37:26.008" endtime="20210618 19:37:26.238"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:37:26.239" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[9]/a'.</msg>
<status status="PASS" starttime="20210618 19:37:26.239" endtime="20210618 19:37:26.465"/>
</kw>
<status status="PASS" starttime="20210618 19:37:26.007" endtime="20210618 19:37:26.465"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:37:26.466" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:37:26.465" endtime="20210618 19:37:26.693"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:37:26.694" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:37:26.694" endtime="20210618 19:37:26.920"/>
</kw>
<status status="PASS" starttime="20210618 19:37:26.465" endtime="20210618 19:37:26.921"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:37:26.922" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:37:26.922" endtime="20210618 19:37:27.177"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:37:27.334" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2064%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2064%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:37:27.177" endtime="20210618 19:37:27.334"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:37:42.342" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:37:27.334" endtime="20210618 19:37:42.342"/>
</kw>
<status status="PASS" starttime="20210618 19:37:26.922" endtime="20210618 19:37:42.342"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:37:42.343" endtime="20210618 19:37:42.347"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:37:42.347" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:37:42.347" endtime="20210618 19:37:42.774"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:37:44.779" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:37:42.775" endtime="20210618 19:37:44.779"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:37:44.779" endtime="20210618 19:37:46.137"/>
</kw>
<status status="PASS" starttime="20210618 19:37:42.343" endtime="20210618 19:37:46.137"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:37:46.139" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:37:46.138" endtime="20210618 19:37:46.141"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:37:46.285" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:44:23 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:37:46.141" endtime="20210618 19:37:46.285"/>
</kw>
<status status="PASS" starttime="20210618 19:37:46.138" endtime="20210618 19:37:46.286"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:37:46.293" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:37:46.403" level="INFO">ARC_WLAN_5G_Channel=64
#</msg>
<msg timestamp="20210618 19:37:46.403" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=64
#</msg>
<status status="PASS" starttime="20210618 19:37:46.287" endtime="20210618 19:37:46.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:37:46.404" level="INFO">ARC_WLAN_5G_Channel=64
#</msg>
<status status="PASS" starttime="20210618 19:37:46.404" endtime="20210618 19:37:46.404"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:37:46.408" level="INFO">${result_5Ghz} = ['64']</msg>
<status status="PASS" starttime="20210618 19:37:46.404" endtime="20210618 19:37:46.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:37:46.409" level="INFO">5Ghz Channel ID from console is 64</msg>
<status status="PASS" starttime="20210618 19:37:46.408" endtime="20210618 19:37:46.409"/>
</kw>
<msg timestamp="20210618 19:37:46.410" level="INFO">${5Ghz_ChannelID_Console} = 64</msg>
<status status="PASS" starttime="20210618 19:37:46.286" endtime="20210618 19:37:46.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:37:46.410" level="INFO">Channel ID from Console is 64</msg>
<status status="PASS" starttime="20210618 19:37:46.410" endtime="20210618 19:37:46.410"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:37:46.410" endtime="20210618 19:37:46.411"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:37:46.411" endtime="20210618 19:37:46.411"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:38:46.421" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 19:37:46.411" endtime="20210618 19:38:46.421"/>
</kw>
<status status="PASS" starttime="20210618 19:37:46.411" endtime="20210618 19:38:46.421"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:38:46.422" endtime="20210618 19:38:46.422"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:38:46.421" endtime="20210618 19:38:46.422"/>
</branch>
<status status="PASS" starttime="20210618 19:37:46.411" endtime="20210618 19:38:46.422"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:38:46.423" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:38:46.426" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:38:47.023" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:38:46.422" endtime="20210618 19:38:47.023"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:38:47.023" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:38:47.026" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:38:47.612" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:38:47.612" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:38:47.023" endtime="20210618 19:38:47.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:38:47.614" level="INFO">
  
&gt; SSID 4 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 64 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 19:38:47.613" endtime="20210618 19:38:47.614"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:38:47.615" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '64']</msg>
<status status="PASS" starttime="20210618 19:38:47.614" endtime="20210618 19:38:47.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:38:47.617" level="INFO">Analyser Channel IDs are 4 and 64</msg>
<status status="PASS" starttime="20210618 19:38:47.615" endtime="20210618 19:38:47.617"/>
</kw>
<msg timestamp="20210618 19:38:47.620" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '64']</msg>
<status status="PASS" starttime="20210618 19:38:46.422" endtime="20210618 19:38:47.620"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:38:47.621" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:38:47.621" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:38:47.621" endtime="20210618 19:38:47.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:38:47.622" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:38:47.621" endtime="20210618 19:38:47.622"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:38:47.622" endtime="20210618 19:38:47.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:38:47.623" level="INFO">['4', '64']</msg>
<status status="PASS" starttime="20210618 19:38:47.622" endtime="20210618 19:38:47.623"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:38:47.623" endtime="20210618 19:38:47.623"/>
</kw>
<status status="PASS" starttime="20210618 19:37:20.911" endtime="20210618 19:38:47.623"/>
</kw>
<status status="PASS" starttime="20210618 19:36:58.506" endtime="20210618 19:38:47.624"/>
</test>
<test id="s1-t39" name="Verify setting 5GHz ChannelID 100 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:38:47.627" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:38:47.648" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-154.log</msg>
<status status="PASS" starttime="20210618 19:38:47.627" endtime="20210618 19:38:57.816"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:38:57.816" endtime="20210618 19:38:58.096"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:39:00.106" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:38:58.097" endtime="20210618 19:39:00.106"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:39:00.107" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:39:00.403" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:39:00.106" endtime="20210618 19:39:00.422"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:39:02.424" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:39:00.422" endtime="20210618 19:39:02.424"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:39:02.425" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:39:02.424" endtime="20210618 19:39:04.345"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:39:09.356" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:39:04.346" endtime="20210618 19:39:09.356"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:39:09.357" endtime="20210618 19:39:09.365"/>
</kw>
<status status="PASS" starttime="20210618 19:38:47.626" endtime="20210618 19:39:09.365"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>100</arg>
<arg>10</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:39:09.367" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:39:09.367" endtime="20210618 19:39:09.414"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:39:14.423" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:39:09.414" endtime="20210618 19:39:14.423"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:39:14.423" endtime="20210618 19:39:14.431"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:39:14.432" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:39:14.432" endtime="20210618 19:39:14.440"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:39:14.448" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:39:14.440" endtime="20210618 19:39:14.448"/>
</kw>
<status status="PASS" starttime="20210618 19:39:09.367" endtime="20210618 19:39:14.448"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:39:14.449" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:39:14.449" endtime="20210618 19:39:14.682"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:39:14.682" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[10]/a'.</msg>
<status status="PASS" starttime="20210618 19:39:14.682" endtime="20210618 19:39:14.909"/>
</kw>
<status status="PASS" starttime="20210618 19:39:14.448" endtime="20210618 19:39:14.910"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:39:14.911" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:39:14.911" endtime="20210618 19:39:15.137"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:39:15.138" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:39:15.138" endtime="20210618 19:39:15.365"/>
</kw>
<status status="PASS" starttime="20210618 19:39:14.910" endtime="20210618 19:39:15.365"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:39:15.366" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:39:15.366" endtime="20210618 19:39:15.623"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:39:15.794" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20100%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20100%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:39:15.623" endtime="20210618 19:39:15.794"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:39:30.808" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:39:15.794" endtime="20210618 19:39:30.808"/>
</kw>
<status status="PASS" starttime="20210618 19:39:15.365" endtime="20210618 19:39:30.809"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:39:30.810" endtime="20210618 19:39:30.818"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:39:30.819" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:39:30.819" endtime="20210618 19:39:31.064"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:39:33.067" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:39:31.065" endtime="20210618 19:39:33.067"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:39:33.067" endtime="20210618 19:39:34.163"/>
</kw>
<status status="PASS" starttime="20210618 19:39:30.809" endtime="20210618 19:39:34.163"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:39:34.165" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:39:34.165" endtime="20210618 19:39:34.166"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:39:34.315" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:46:11 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:39:34.166" endtime="20210618 19:39:34.315"/>
</kw>
<status status="PASS" starttime="20210618 19:39:34.164" endtime="20210618 19:39:34.316"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:39:34.318" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:39:34.419" level="INFO">ARC_WLAN_5G_Channel=100
#</msg>
<msg timestamp="20210618 19:39:34.419" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=100
#</msg>
<status status="PASS" starttime="20210618 19:39:34.316" endtime="20210618 19:39:34.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:39:34.420" level="INFO">ARC_WLAN_5G_Channel=100
#</msg>
<status status="PASS" starttime="20210618 19:39:34.420" endtime="20210618 19:39:34.420"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:39:34.421" level="INFO">${result_5Ghz} = ['100']</msg>
<status status="PASS" starttime="20210618 19:39:34.420" endtime="20210618 19:39:34.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:39:34.422" level="INFO">5Ghz Channel ID from console is 100</msg>
<status status="PASS" starttime="20210618 19:39:34.421" endtime="20210618 19:39:34.422"/>
</kw>
<msg timestamp="20210618 19:39:34.423" level="INFO">${5Ghz_ChannelID_Console} = 100</msg>
<status status="PASS" starttime="20210618 19:39:34.316" endtime="20210618 19:39:34.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:39:34.423" level="INFO">Channel ID from Console is 100</msg>
<status status="PASS" starttime="20210618 19:39:34.423" endtime="20210618 19:39:34.423"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:39:34.423" endtime="20210618 19:39:34.424"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:39:34.424" endtime="20210618 19:39:34.424"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:39:34.424" endtime="20210618 19:39:34.425"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:39:34.424" endtime="20210618 19:39:34.425"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:42:04.427" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:39:34.425" endtime="20210618 19:42:04.427"/>
</kw>
<status status="PASS" starttime="20210618 19:39:34.425" endtime="20210618 19:42:04.427"/>
</branch>
<status status="PASS" starttime="20210618 19:39:34.424" endtime="20210618 19:42:04.427"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:42:04.429" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:42:04.436" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:42:05.076" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:42:04.428" endtime="20210618 19:42:05.076"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:42:05.077" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:42:05.080" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:42:05.684" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:42:05.685" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:42:05.076" endtime="20210618 19:42:05.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:42:05.686" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 98%  
           Radio type         : 802.11ac
           Channel            : 100 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 19:42:05.685" endtime="20210618 19:42:05.686"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:42:05.688" level="INFO">${Analyser_ChannelID_5Ghz} = ['100', '4']</msg>
<status status="PASS" starttime="20210618 19:42:05.686" endtime="20210618 19:42:05.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:42:05.689" level="INFO">Analyser Channel IDs are 100 and 4</msg>
<status status="PASS" starttime="20210618 19:42:05.688" endtime="20210618 19:42:05.690"/>
</kw>
<msg timestamp="20210618 19:42:05.691" level="INFO">${5Ghz_ChannelID_Analyser} = ['100', '4']</msg>
<status status="PASS" starttime="20210618 19:42:04.427" endtime="20210618 19:42:05.691"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:42:05.692" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:42:05.692" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:42:05.691" endtime="20210618 19:42:05.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:42:05.692" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:42:05.692" endtime="20210618 19:42:05.692"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:42:05.692" endtime="20210618 19:42:05.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:42:05.693" level="INFO">['100', '4']</msg>
<status status="PASS" starttime="20210618 19:42:05.693" endtime="20210618 19:42:05.693"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:42:05.693" endtime="20210618 19:42:05.693"/>
</kw>
<status status="PASS" starttime="20210618 19:39:09.366" endtime="20210618 19:42:05.694"/>
</kw>
<status status="PASS" starttime="20210618 19:38:47.625" endtime="20210618 19:42:05.694"/>
</test>
<test id="s1-t40" name="Verify setting 5GHz ChannelID 104 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:42:05.700" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:42:05.729" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-155.log</msg>
<status status="PASS" starttime="20210618 19:42:05.697" endtime="20210618 19:42:16.043"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:42:16.044" endtime="20210618 19:42:16.328"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:42:18.330" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:42:16.328" endtime="20210618 19:42:18.330"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:42:18.331" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:42:18.625" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:42:18.331" endtime="20210618 19:42:18.642"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:42:20.648" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:42:18.642" endtime="20210618 19:42:20.648"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:42:20.649" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:42:20.649" endtime="20210618 19:42:22.483"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:42:27.496" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:42:22.484" endtime="20210618 19:42:27.496"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:42:27.496" endtime="20210618 19:42:27.505"/>
</kw>
<status status="PASS" starttime="20210618 19:42:05.697" endtime="20210618 19:42:27.505"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>104</arg>
<arg>11</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:42:27.507" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:42:27.507" endtime="20210618 19:42:27.564"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:42:32.568" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:42:27.565" endtime="20210618 19:42:32.568"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:42:32.568" endtime="20210618 19:42:32.576"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:42:32.577" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:42:32.576" endtime="20210618 19:42:32.585"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:42:32.591" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:42:32.585" endtime="20210618 19:42:32.591"/>
</kw>
<status status="PASS" starttime="20210618 19:42:27.507" endtime="20210618 19:42:32.592"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:42:32.594" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:42:32.593" endtime="20210618 19:42:32.829"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:42:32.830" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[11]/a'.</msg>
<status status="PASS" starttime="20210618 19:42:32.830" endtime="20210618 19:42:33.069"/>
</kw>
<status status="PASS" starttime="20210618 19:42:32.592" endtime="20210618 19:42:33.069"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:42:33.070" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:42:33.070" endtime="20210618 19:42:33.295"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:42:33.296" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:42:33.296" endtime="20210618 19:42:33.520"/>
</kw>
<status status="PASS" starttime="20210618 19:42:33.069" endtime="20210618 19:42:33.520"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:42:33.521" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:42:33.521" endtime="20210618 19:42:33.778"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:42:33.977" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20104%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20104%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:42:33.778" endtime="20210618 19:42:33.977"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:42:48.981" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:42:33.978" endtime="20210618 19:42:48.981"/>
</kw>
<status status="PASS" starttime="20210618 19:42:33.520" endtime="20210618 19:42:48.981"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:42:48.982" endtime="20210618 19:42:48.985"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:42:48.986" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:42:48.985" endtime="20210618 19:42:49.404"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:42:51.415" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:42:49.405" endtime="20210618 19:42:51.415"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:42:51.415" endtime="20210618 19:42:52.798"/>
</kw>
<status status="PASS" starttime="20210618 19:42:48.981" endtime="20210618 19:42:52.798"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:42:52.800" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:42:52.799" endtime="20210618 19:42:52.801"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:42:52.965" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:49:30 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:42:52.802" endtime="20210618 19:42:52.965"/>
</kw>
<status status="PASS" starttime="20210618 19:42:52.798" endtime="20210618 19:42:52.965"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:42:52.968" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:42:53.069" level="INFO">ARC_WLAN_5G_Channel=104
#</msg>
<msg timestamp="20210618 19:42:53.069" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=104
#</msg>
<status status="PASS" starttime="20210618 19:42:52.966" endtime="20210618 19:42:53.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:42:53.070" level="INFO">ARC_WLAN_5G_Channel=104
#</msg>
<status status="PASS" starttime="20210618 19:42:53.070" endtime="20210618 19:42:53.070"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:42:53.071" level="INFO">${result_5Ghz} = ['104']</msg>
<status status="PASS" starttime="20210618 19:42:53.070" endtime="20210618 19:42:53.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:42:53.072" level="INFO">5Ghz Channel ID from console is 104</msg>
<status status="PASS" starttime="20210618 19:42:53.071" endtime="20210618 19:42:53.072"/>
</kw>
<msg timestamp="20210618 19:42:53.073" level="INFO">${5Ghz_ChannelID_Console} = 104</msg>
<status status="PASS" starttime="20210618 19:42:52.965" endtime="20210618 19:42:53.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:42:53.073" level="INFO">Channel ID from Console is 104</msg>
<status status="PASS" starttime="20210618 19:42:53.073" endtime="20210618 19:42:53.073"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:42:53.073" endtime="20210618 19:42:53.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:42:53.073" endtime="20210618 19:42:53.074"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:42:53.074" endtime="20210618 19:42:53.074"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:42:53.074" endtime="20210618 19:42:53.074"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:45:23.087" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:42:53.074" endtime="20210618 19:45:23.087"/>
</kw>
<status status="PASS" starttime="20210618 19:42:53.074" endtime="20210618 19:45:23.087"/>
</branch>
<status status="PASS" starttime="20210618 19:42:53.074" endtime="20210618 19:45:23.087"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:45:23.088" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:45:23.092" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:45:23.766" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:45:23.088" endtime="20210618 19:45:23.766"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:45:23.767" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:45:23.770" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:45:24.392" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:45:24.392" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:45:23.767" endtime="20210618 19:45:24.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:45:24.394" level="INFO">
  
&gt; SSID 3 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 4 : Schanshoek9
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 84:9c:a6:6c:23:ff
           Signal             : 68%  

</msg>
<status status="PASS" starttime="20210618 19:45:24.392" endtime="20210618 19:45:24.394"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:45:24.395" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 19:45:24.394" endtime="20210618 19:45:24.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:45:24.397" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 19:45:24.395" endtime="20210618 19:45:24.397"/>
</kw>
<status status="FAIL" starttime="20210618 19:45:23.088" endtime="20210618 19:45:24.398"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 19:45:24.398" endtime="20210618 19:45:24.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:45:24.399" endtime="20210618 19:45:24.399"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 19:45:24.399" endtime="20210618 19:45:24.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:45:24.399" endtime="20210618 19:45:24.399"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 19:45:24.399" endtime="20210618 19:45:24.399"/>
</kw>
<status status="FAIL" starttime="20210618 19:42:27.506" endtime="20210618 19:45:24.400"/>
</kw>
<status status="FAIL" starttime="20210618 19:42:05.696" endtime="20210618 19:45:24.400">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t41" name="Verify setting 5GHz ChannelID 108 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:45:24.404" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:45:24.430" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-156.log</msg>
<status status="PASS" starttime="20210618 19:45:24.404" endtime="20210618 19:45:34.333"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:45:34.333" endtime="20210618 19:45:34.732"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:45:36.736" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:45:34.733" endtime="20210618 19:45:36.736"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:45:36.737" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:45:37.039" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:45:36.736" endtime="20210618 19:45:37.059"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:45:39.062" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:45:37.060" endtime="20210618 19:45:39.062"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:45:39.064" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:45:39.063" endtime="20210618 19:45:41.160"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:45:46.160" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:45:41.160" endtime="20210618 19:45:46.160"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:45:46.160" endtime="20210618 19:45:46.170"/>
</kw>
<status status="PASS" starttime="20210618 19:45:24.403" endtime="20210618 19:45:46.170"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>108</arg>
<arg>12</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:45:46.172" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:45:46.172" endtime="20210618 19:45:46.222"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:45:51.228" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:45:46.223" endtime="20210618 19:45:51.228"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:45:51.228" endtime="20210618 19:45:51.235"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:45:51.236" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:45:51.235" endtime="20210618 19:45:51.245"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:45:51.253" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:45:51.246" endtime="20210618 19:45:51.253"/>
</kw>
<status status="PASS" starttime="20210618 19:45:46.172" endtime="20210618 19:45:51.253"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:45:51.255" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:45:51.254" endtime="20210618 19:45:51.500"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:45:51.501" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[12]/a'.</msg>
<status status="PASS" starttime="20210618 19:45:51.501" endtime="20210618 19:45:51.728"/>
</kw>
<status status="PASS" starttime="20210618 19:45:51.253" endtime="20210618 19:45:51.728"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:45:51.730" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:45:51.730" endtime="20210618 19:45:51.968"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:45:51.969" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:45:51.968" endtime="20210618 19:45:52.196"/>
</kw>
<status status="PASS" starttime="20210618 19:45:51.729" endtime="20210618 19:45:52.196"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:45:52.197" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:45:52.197" endtime="20210618 19:45:52.456"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:45:52.641" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20108%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20108%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:45:52.456" endtime="20210618 19:45:52.642"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:46:07.651" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:45:52.642" endtime="20210618 19:46:07.651"/>
</kw>
<status status="PASS" starttime="20210618 19:45:52.196" endtime="20210618 19:46:07.651"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:46:07.652" endtime="20210618 19:46:07.655"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:46:07.656" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:46:07.655" endtime="20210618 19:46:07.897"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:46:09.902" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:46:07.898" endtime="20210618 19:46:09.902"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:46:09.902" endtime="20210618 19:46:11.132"/>
</kw>
<status status="PASS" starttime="20210618 19:46:07.652" endtime="20210618 19:46:11.133"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:46:11.134" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:46:11.133" endtime="20210618 19:46:11.135"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:46:11.268" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:52:48 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:46:11.135" endtime="20210618 19:46:11.268"/>
</kw>
<status status="PASS" starttime="20210618 19:46:11.133" endtime="20210618 19:46:11.268"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:46:11.272" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:46:11.375" level="INFO">ARC_WLAN_5G_Channel=108
#</msg>
<msg timestamp="20210618 19:46:11.375" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=108
#</msg>
<status status="PASS" starttime="20210618 19:46:11.269" endtime="20210618 19:46:11.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:46:11.376" level="INFO">ARC_WLAN_5G_Channel=108
#</msg>
<status status="PASS" starttime="20210618 19:46:11.376" endtime="20210618 19:46:11.376"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:46:11.377" level="INFO">${result_5Ghz} = ['108']</msg>
<status status="PASS" starttime="20210618 19:46:11.376" endtime="20210618 19:46:11.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:46:11.379" level="INFO">5Ghz Channel ID from console is 108</msg>
<status status="PASS" starttime="20210618 19:46:11.377" endtime="20210618 19:46:11.380"/>
</kw>
<msg timestamp="20210618 19:46:11.380" level="INFO">${5Ghz_ChannelID_Console} = 108</msg>
<status status="PASS" starttime="20210618 19:46:11.268" endtime="20210618 19:46:11.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:46:11.381" level="INFO">Channel ID from Console is 108</msg>
<status status="PASS" starttime="20210618 19:46:11.381" endtime="20210618 19:46:11.381"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:46:11.381" endtime="20210618 19:46:11.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:46:11.381" endtime="20210618 19:46:11.382"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:46:11.382" endtime="20210618 19:46:11.382"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:46:11.382" endtime="20210618 19:46:11.382"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:48:41.384" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:46:11.382" endtime="20210618 19:48:41.384"/>
</kw>
<status status="PASS" starttime="20210618 19:46:11.382" endtime="20210618 19:48:41.384"/>
</branch>
<status status="PASS" starttime="20210618 19:46:11.382" endtime="20210618 19:48:41.384"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:48:41.388" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:48:41.398" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:48:42.068" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:48:41.386" endtime="20210618 19:48:42.068"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:48:42.070" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:48:42.073" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:48:42.656" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:48:42.657" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:48:42.069" endtime="20210618 19:48:42.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:48:42.658" level="INFO">
  
&gt; SSID 2 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 108 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 19:48:42.657" endtime="20210618 19:48:42.658"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:48:42.659" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '108']</msg>
<status status="PASS" starttime="20210618 19:48:42.658" endtime="20210618 19:48:42.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:48:42.661" level="INFO">Analyser Channel IDs are 4 and 108</msg>
<status status="PASS" starttime="20210618 19:48:42.660" endtime="20210618 19:48:42.662"/>
</kw>
<msg timestamp="20210618 19:48:42.665" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '108']</msg>
<status status="PASS" starttime="20210618 19:48:41.385" endtime="20210618 19:48:42.665"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:48:42.666" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:48:42.666" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:48:42.665" endtime="20210618 19:48:42.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:48:42.666" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:48:42.666" endtime="20210618 19:48:42.666"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:48:42.666" endtime="20210618 19:48:42.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:48:42.667" level="INFO">['4', '108']</msg>
<status status="PASS" starttime="20210618 19:48:42.667" endtime="20210618 19:48:42.667"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:48:42.667" endtime="20210618 19:48:42.668"/>
</kw>
<status status="PASS" starttime="20210618 19:45:46.171" endtime="20210618 19:48:42.668"/>
</kw>
<status status="PASS" starttime="20210618 19:45:24.402" endtime="20210618 19:48:42.668"/>
</test>
<test id="s1-t42" name="Verify setting 5GHz ChannelID 112 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:48:42.672" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:48:42.694" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-157.log</msg>
<status status="PASS" starttime="20210618 19:48:42.671" endtime="20210618 19:48:52.911"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:48:52.911" endtime="20210618 19:48:53.194"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:48:55.211" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:48:53.195" endtime="20210618 19:48:55.211"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:48:55.215" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:48:55.513" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:48:55.211" endtime="20210618 19:48:55.536"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:48:57.545" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:48:55.536" endtime="20210618 19:48:57.545"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:48:57.546" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:48:57.546" endtime="20210618 19:48:59.425"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:49:04.427" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:48:59.425" endtime="20210618 19:49:04.427"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:49:04.427" endtime="20210618 19:49:04.437"/>
</kw>
<status status="PASS" starttime="20210618 19:48:42.671" endtime="20210618 19:49:04.437"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>112</arg>
<arg>13</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:49:04.438" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:49:04.438" endtime="20210618 19:49:04.484"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:49:09.490" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:49:04.485" endtime="20210618 19:49:09.491"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:49:09.491" endtime="20210618 19:49:09.501"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:49:09.502" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:49:09.501" endtime="20210618 19:49:09.517"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:49:09.528" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:49:09.518" endtime="20210618 19:49:09.528"/>
</kw>
<status status="PASS" starttime="20210618 19:49:04.438" endtime="20210618 19:49:09.529"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:49:09.530" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:49:09.529" endtime="20210618 19:49:09.763"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:49:09.763" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[13]/a'.</msg>
<status status="PASS" starttime="20210618 19:49:09.763" endtime="20210618 19:49:09.993"/>
</kw>
<status status="PASS" starttime="20210618 19:49:09.529" endtime="20210618 19:49:09.993"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:49:09.995" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:49:09.995" endtime="20210618 19:49:10.217"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:49:10.218" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:49:10.217" endtime="20210618 19:49:10.448"/>
</kw>
<status status="PASS" starttime="20210618 19:49:09.994" endtime="20210618 19:49:10.448"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:49:10.449" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:49:10.448" endtime="20210618 19:49:10.718"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:49:10.863" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20112%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20112%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:49:10.718" endtime="20210618 19:49:10.864"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:49:25.870" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:49:10.864" endtime="20210618 19:49:25.870"/>
</kw>
<status status="PASS" starttime="20210618 19:49:10.448" endtime="20210618 19:49:25.871"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:49:25.873" endtime="20210618 19:49:25.877"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:49:25.878" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:49:25.877" endtime="20210618 19:49:26.129"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:49:28.145" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:49:26.129" endtime="20210618 19:49:28.145"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:49:28.145" endtime="20210618 19:49:29.418"/>
</kw>
<status status="PASS" starttime="20210618 19:49:25.871" endtime="20210618 19:49:29.418"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:49:29.419" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:49:29.419" endtime="20210618 19:49:29.420"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:49:29.561" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:56:07 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:49:29.420" endtime="20210618 19:49:29.561"/>
</kw>
<status status="PASS" starttime="20210618 19:49:29.418" endtime="20210618 19:49:29.561"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:49:29.565" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:49:29.665" level="INFO">ARC_WLAN_5G_Channel=112
#</msg>
<msg timestamp="20210618 19:49:29.665" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=112
#</msg>
<status status="PASS" starttime="20210618 19:49:29.562" endtime="20210618 19:49:29.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:49:29.666" level="INFO">ARC_WLAN_5G_Channel=112
#</msg>
<status status="PASS" starttime="20210618 19:49:29.666" endtime="20210618 19:49:29.666"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:49:29.667" level="INFO">${result_5Ghz} = ['112']</msg>
<status status="PASS" starttime="20210618 19:49:29.666" endtime="20210618 19:49:29.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:49:29.668" level="INFO">5Ghz Channel ID from console is 112</msg>
<status status="PASS" starttime="20210618 19:49:29.667" endtime="20210618 19:49:29.668"/>
</kw>
<msg timestamp="20210618 19:49:29.669" level="INFO">${5Ghz_ChannelID_Console} = 112</msg>
<status status="PASS" starttime="20210618 19:49:29.561" endtime="20210618 19:49:29.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:49:29.669" level="INFO">Channel ID from Console is 112</msg>
<status status="PASS" starttime="20210618 19:49:29.669" endtime="20210618 19:49:29.669"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:49:29.669" endtime="20210618 19:49:29.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:49:29.669" endtime="20210618 19:49:29.670"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:49:29.670" endtime="20210618 19:49:29.670"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:49:29.670" endtime="20210618 19:49:29.670"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:51:59.672" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:49:29.670" endtime="20210618 19:51:59.673"/>
</kw>
<status status="PASS" starttime="20210618 19:49:29.670" endtime="20210618 19:51:59.673"/>
</branch>
<status status="PASS" starttime="20210618 19:49:29.670" endtime="20210618 19:51:59.673"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:51:59.675" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:51:59.682" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:52:00.316" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:51:59.674" endtime="20210618 19:52:00.317"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:52:00.318" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:52:00.321" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:52:00.930" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:52:00.930" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:52:00.317" endtime="20210618 19:52:00.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:52:00.932" level="INFO">
  
&gt; SSID 2 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 112 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 19:52:00.931" endtime="20210618 19:52:00.932"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:52:00.934" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '112']</msg>
<status status="PASS" starttime="20210618 19:52:00.933" endtime="20210618 19:52:00.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:52:00.936" level="INFO">Analyser Channel IDs are 4 and 112</msg>
<status status="PASS" starttime="20210618 19:52:00.934" endtime="20210618 19:52:00.936"/>
</kw>
<msg timestamp="20210618 19:52:00.938" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '112']</msg>
<status status="PASS" starttime="20210618 19:51:59.673" endtime="20210618 19:52:00.938"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 19:52:00.938" level="INFO">Length is 2</msg>
<msg timestamp="20210618 19:52:00.938" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 19:52:00.938" endtime="20210618 19:52:00.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:52:00.939" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 19:52:00.939" endtime="20210618 19:52:00.939"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 19:52:00.939" endtime="20210618 19:52:00.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:52:00.940" level="INFO">['4', '112']</msg>
<status status="PASS" starttime="20210618 19:52:00.940" endtime="20210618 19:52:00.940"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 19:52:00.940" endtime="20210618 19:52:00.940"/>
</kw>
<status status="PASS" starttime="20210618 19:49:04.437" endtime="20210618 19:52:00.940"/>
</kw>
<status status="PASS" starttime="20210618 19:48:42.670" endtime="20210618 19:52:00.941"/>
</test>
<test id="s1-t43" name="Verify setting 5GHz ChannelID 116 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:52:00.947" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:52:00.975" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-158.log</msg>
<status status="PASS" starttime="20210618 19:52:00.946" endtime="20210618 19:52:11.318"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:52:11.318" endtime="20210618 19:52:11.782"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:52:13.788" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:52:11.782" endtime="20210618 19:52:13.788"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:52:13.792" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:52:14.082" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:52:13.788" endtime="20210618 19:52:14.110"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:52:16.119" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:52:14.110" endtime="20210618 19:52:16.119"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:52:16.120" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:52:16.119" endtime="20210618 19:52:17.969"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:52:22.972" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:52:17.969" endtime="20210618 19:52:22.972"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:52:22.973" endtime="20210618 19:52:22.985"/>
</kw>
<status status="PASS" starttime="20210618 19:52:00.946" endtime="20210618 19:52:22.985"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>116</arg>
<arg>14</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:52:22.988" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:52:22.988" endtime="20210618 19:52:23.045"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:52:28.056" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:52:23.046" endtime="20210618 19:52:28.056"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:52:28.056" endtime="20210618 19:52:28.063"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:52:28.064" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:52:28.063" endtime="20210618 19:52:28.073"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:52:28.080" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:52:28.073" endtime="20210618 19:52:28.080"/>
</kw>
<status status="PASS" starttime="20210618 19:52:22.987" endtime="20210618 19:52:28.080"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:52:28.081" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:52:28.081" endtime="20210618 19:52:28.316"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:52:28.317" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[14]/a'.</msg>
<status status="PASS" starttime="20210618 19:52:28.317" endtime="20210618 19:52:28.544"/>
</kw>
<status status="PASS" starttime="20210618 19:52:28.080" endtime="20210618 19:52:28.544"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:52:28.545" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:52:28.545" endtime="20210618 19:52:28.769"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:52:28.770" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:52:28.769" endtime="20210618 19:52:28.997"/>
</kw>
<status status="PASS" starttime="20210618 19:52:28.544" endtime="20210618 19:52:28.997"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:52:28.998" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:52:28.998" endtime="20210618 19:52:29.238"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:52:29.423" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20116%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20116%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:52:29.238" endtime="20210618 19:52:29.423"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:52:44.424" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:52:29.423" endtime="20210618 19:52:44.424"/>
</kw>
<status status="PASS" starttime="20210618 19:52:28.997" endtime="20210618 19:52:44.425"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:52:44.425" endtime="20210618 19:52:44.429"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:52:44.429" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:52:44.429" endtime="20210618 19:52:44.668"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:52:46.673" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:52:44.668" endtime="20210618 19:52:46.673"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:52:46.673" endtime="20210618 19:52:47.924"/>
</kw>
<status status="PASS" starttime="20210618 19:52:44.425" endtime="20210618 19:52:47.925"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:52:47.927" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:52:47.926" endtime="20210618 19:52:47.928"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:52:48.072" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 10:59:25 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:52:47.929" endtime="20210618 19:52:48.072"/>
</kw>
<status status="PASS" starttime="20210618 19:52:47.925" endtime="20210618 19:52:48.073"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:52:48.076" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:52:48.178" level="INFO">ARC_WLAN_5G_Channel=116
#</msg>
<msg timestamp="20210618 19:52:48.178" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=116
#</msg>
<status status="PASS" starttime="20210618 19:52:48.073" endtime="20210618 19:52:48.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:52:48.179" level="INFO">ARC_WLAN_5G_Channel=116
#</msg>
<status status="PASS" starttime="20210618 19:52:48.179" endtime="20210618 19:52:48.179"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:52:48.180" level="INFO">${result_5Ghz} = ['116']</msg>
<status status="PASS" starttime="20210618 19:52:48.179" endtime="20210618 19:52:48.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:52:48.181" level="INFO">5Ghz Channel ID from console is 116</msg>
<status status="PASS" starttime="20210618 19:52:48.180" endtime="20210618 19:52:48.181"/>
</kw>
<msg timestamp="20210618 19:52:48.181" level="INFO">${5Ghz_ChannelID_Console} = 116</msg>
<status status="PASS" starttime="20210618 19:52:48.073" endtime="20210618 19:52:48.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:52:48.182" level="INFO">Channel ID from Console is 116</msg>
<status status="PASS" starttime="20210618 19:52:48.182" endtime="20210618 19:52:48.182"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:52:48.182" endtime="20210618 19:52:48.182"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:52:48.182" endtime="20210618 19:52:48.183"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:52:48.183" endtime="20210618 19:52:48.183"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:52:48.183" endtime="20210618 19:52:48.183"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:55:18.184" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:52:48.183" endtime="20210618 19:55:18.184"/>
</kw>
<status status="PASS" starttime="20210618 19:52:48.183" endtime="20210618 19:55:18.184"/>
</branch>
<status status="PASS" starttime="20210618 19:52:48.183" endtime="20210618 19:55:18.184"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:55:18.185" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:55:18.189" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:55:18.813" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:55:18.185" endtime="20210618 19:55:18.814"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:55:18.814" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:55:18.818" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:55:19.419" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:55:19.419" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:55:18.814" endtime="20210618 19:55:19.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:55:19.421" level="INFO">
  
&gt; SSID 5 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 6 : 
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 72:6a:b0:0d:03:67
           Signal             : 98%  

</msg>
<status status="PASS" starttime="20210618 19:55:19.420" endtime="20210618 19:55:19.421"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:55:19.422" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 19:55:19.421" endtime="20210618 19:55:19.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:55:19.424" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 19:55:19.422" endtime="20210618 19:55:19.424"/>
</kw>
<status status="FAIL" starttime="20210618 19:55:18.184" endtime="20210618 19:55:19.424"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 19:55:19.424" endtime="20210618 19:55:19.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:55:19.424" endtime="20210618 19:55:19.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 19:55:19.424" endtime="20210618 19:55:19.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:55:19.424" endtime="20210618 19:55:19.425"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 19:55:19.425" endtime="20210618 19:55:19.425"/>
</kw>
<status status="FAIL" starttime="20210618 19:52:22.986" endtime="20210618 19:55:19.425"/>
</kw>
<status status="FAIL" starttime="20210618 19:52:00.943" endtime="20210618 19:55:19.428">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t44" name="Verify setting 5GHz ChannelID 120 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:55:19.432" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:55:19.458" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-159.log</msg>
<status status="PASS" starttime="20210618 19:55:19.432" endtime="20210618 19:55:29.455"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:55:29.455" endtime="20210618 19:55:29.738"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:55:31.748" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:55:29.738" endtime="20210618 19:55:31.748"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:55:31.749" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:55:32.060" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:55:31.748" endtime="20210618 19:55:32.081"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:55:34.081" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:55:32.081" endtime="20210618 19:55:34.081"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:55:34.082" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:55:34.081" endtime="20210618 19:55:36.323"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:55:41.337" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:55:36.324" endtime="20210618 19:55:41.337"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:55:41.337" endtime="20210618 19:55:41.345"/>
</kw>
<status status="PASS" starttime="20210618 19:55:19.431" endtime="20210618 19:55:41.346"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>120</arg>
<arg>15</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:55:41.351" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:55:41.351" endtime="20210618 19:55:41.402"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:55:46.404" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:55:41.403" endtime="20210618 19:55:46.404"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:55:46.405" endtime="20210618 19:55:46.411"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:55:46.411" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:55:46.411" endtime="20210618 19:55:46.420"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:55:46.427" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:55:46.420" endtime="20210618 19:55:46.427"/>
</kw>
<status status="PASS" starttime="20210618 19:55:41.350" endtime="20210618 19:55:46.428"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:55:46.429" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:55:46.428" endtime="20210618 19:55:46.661"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:55:46.662" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[15]/a'.</msg>
<status status="PASS" starttime="20210618 19:55:46.661" endtime="20210618 19:55:46.890"/>
</kw>
<status status="PASS" starttime="20210618 19:55:46.428" endtime="20210618 19:55:46.891"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:55:46.892" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:55:46.892" endtime="20210618 19:55:47.116"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:55:47.117" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:55:47.116" endtime="20210618 19:55:47.344"/>
</kw>
<status status="PASS" starttime="20210618 19:55:46.891" endtime="20210618 19:55:47.344"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:55:47.345" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:55:47.345" endtime="20210618 19:55:47.586"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:55:47.770" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20120%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20120%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:55:47.586" endtime="20210618 19:55:47.770"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:56:02.777" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:55:47.771" endtime="20210618 19:56:02.777"/>
</kw>
<status status="PASS" starttime="20210618 19:55:47.345" endtime="20210618 19:56:02.777"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:56:02.778" endtime="20210618 19:56:02.782"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:56:02.782" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:56:02.782" endtime="20210618 19:56:03.021"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:56:05.032" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:56:03.022" endtime="20210618 19:56:05.032"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:56:05.032" endtime="20210618 19:56:06.240"/>
</kw>
<status status="PASS" starttime="20210618 19:56:02.778" endtime="20210618 19:56:06.240"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:56:06.241" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:56:06.241" endtime="20210618 19:56:06.242"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:56:06.384" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:02:44 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:56:06.243" endtime="20210618 19:56:06.384"/>
</kw>
<status status="PASS" starttime="20210618 19:56:06.241" endtime="20210618 19:56:06.384"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:56:06.388" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:56:06.491" level="INFO">ARC_WLAN_5G_Channel=120
#</msg>
<msg timestamp="20210618 19:56:06.492" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=120
#</msg>
<status status="PASS" starttime="20210618 19:56:06.385" endtime="20210618 19:56:06.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:56:06.495" level="INFO">ARC_WLAN_5G_Channel=120
#</msg>
<status status="PASS" starttime="20210618 19:56:06.492" endtime="20210618 19:56:06.495"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:56:06.496" level="INFO">${result_5Ghz} = ['120']</msg>
<status status="PASS" starttime="20210618 19:56:06.495" endtime="20210618 19:56:06.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:56:06.497" level="INFO">5Ghz Channel ID from console is 120</msg>
<status status="PASS" starttime="20210618 19:56:06.496" endtime="20210618 19:56:06.498"/>
</kw>
<msg timestamp="20210618 19:56:06.499" level="INFO">${5Ghz_ChannelID_Console} = 120</msg>
<status status="PASS" starttime="20210618 19:56:06.385" endtime="20210618 19:56:06.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:56:06.499" level="INFO">Channel ID from Console is 120</msg>
<status status="PASS" starttime="20210618 19:56:06.499" endtime="20210618 19:56:06.499"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:56:06.499" endtime="20210618 19:56:06.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:56:06.500" endtime="20210618 19:56:06.500"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:56:06.501" endtime="20210618 19:56:06.501"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:56:06.501" endtime="20210618 19:56:06.501"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:58:36.512" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:56:06.501" endtime="20210618 19:58:36.512"/>
</kw>
<status status="PASS" starttime="20210618 19:56:06.501" endtime="20210618 19:58:36.512"/>
</branch>
<status status="PASS" starttime="20210618 19:56:06.500" endtime="20210618 19:58:36.512"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:58:36.514" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:58:36.518" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:58:37.186" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 19:58:36.513" endtime="20210618 19:58:37.187"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 19:58:37.187" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 19:58:37.191" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 19:58:37.785" level="INFO">Process completed.</msg>
<msg timestamp="20210618 19:58:37.785" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 19:58:37.187" endtime="20210618 19:58:37.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:58:37.786" level="INFO">
  
&gt; SSID 4 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 98%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 5 : VRV95170E11BB
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : bc:30:d9:0e:11:bb
           Signal             : 46%  

</msg>
<status status="PASS" starttime="20210618 19:58:37.785" endtime="20210618 19:58:37.786"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:58:37.788" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 19:58:37.787" endtime="20210618 19:58:37.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:58:37.791" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 19:58:37.788" endtime="20210618 19:58:37.792"/>
</kw>
<status status="FAIL" starttime="20210618 19:58:36.513" endtime="20210618 19:58:37.793"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 19:58:37.793" endtime="20210618 19:58:37.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:58:37.793" endtime="20210618 19:58:37.793"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 19:58:37.793" endtime="20210618 19:58:37.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 19:58:37.793" endtime="20210618 19:58:37.793"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 19:58:37.794" endtime="20210618 19:58:37.794"/>
</kw>
<status status="FAIL" starttime="20210618 19:55:41.346" endtime="20210618 19:58:37.794"/>
</kw>
<status status="FAIL" starttime="20210618 19:55:19.430" endtime="20210618 19:58:37.794">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t45" name="Verify setting 5GHz ChannelID 124 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 19:58:37.798" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 19:58:37.832" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-160.log</msg>
<status status="PASS" starttime="20210618 19:58:37.798" endtime="20210618 19:58:48.788"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 19:58:48.788" endtime="20210618 19:58:49.074"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:58:51.089" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:58:49.075" endtime="20210618 19:58:51.089"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 19:58:51.090" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 19:58:51.384" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 19:58:51.090" endtime="20210618 19:58:51.401"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:58:53.406" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:58:51.401" endtime="20210618 19:58:53.406"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:58:53.407" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 19:58:53.406" endtime="20210618 19:58:55.221"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:59:00.228" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:58:55.221" endtime="20210618 19:59:00.228"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:59:00.228" endtime="20210618 19:59:00.241"/>
</kw>
<status status="PASS" starttime="20210618 19:58:37.797" endtime="20210618 19:59:00.241"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>124</arg>
<arg>16</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:59:00.242" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 19:59:00.242" endtime="20210618 19:59:00.305"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:59:05.317" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 19:59:00.305" endtime="20210618 19:59:05.317"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 19:59:05.318" endtime="20210618 19:59:05.328"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 19:59:05.329" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 19:59:05.328" endtime="20210618 19:59:05.339"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 19:59:05.346" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 19:59:05.339" endtime="20210618 19:59:05.346"/>
</kw>
<status status="PASS" starttime="20210618 19:59:00.242" endtime="20210618 19:59:05.346"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:59:05.347" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:59:05.347" endtime="20210618 19:59:05.576"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:59:05.577" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[16]/a'.</msg>
<status status="PASS" starttime="20210618 19:59:05.577" endtime="20210618 19:59:05.805"/>
</kw>
<status status="PASS" starttime="20210618 19:59:05.346" endtime="20210618 19:59:05.806"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:59:05.807" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 19:59:05.806" endtime="20210618 19:59:06.032"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:59:06.033" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 19:59:06.033" endtime="20210618 19:59:06.260"/>
</kw>
<status status="PASS" starttime="20210618 19:59:05.806" endtime="20210618 19:59:06.260"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:59:06.261" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 19:59:06.261" endtime="20210618 19:59:06.517"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 19:59:06.720" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20124%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20124%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 19:59:06.518" endtime="20210618 19:59:06.721"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:59:21.728" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 19:59:06.721" endtime="20210618 19:59:21.728"/>
</kw>
<status status="PASS" starttime="20210618 19:59:06.261" endtime="20210618 19:59:21.729"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 19:59:21.729" endtime="20210618 19:59:21.733"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 19:59:21.733" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 19:59:21.733" endtime="20210618 19:59:22.143"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 19:59:24.150" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 19:59:22.143" endtime="20210618 19:59:24.150"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 19:59:24.150" endtime="20210618 19:59:25.473"/>
</kw>
<status status="PASS" starttime="20210618 19:59:21.729" endtime="20210618 19:59:25.473"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 19:59:25.475" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 19:59:25.474" endtime="20210618 19:59:25.476"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 19:59:25.610" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:06:03 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 19:59:25.476" endtime="20210618 19:59:25.610"/>
</kw>
<status status="PASS" starttime="20210618 19:59:25.474" endtime="20210618 19:59:25.610"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 19:59:25.612" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 19:59:25.717" level="INFO">ARC_WLAN_5G_Channel=124
#</msg>
<msg timestamp="20210618 19:59:25.717" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=124
#</msg>
<status status="PASS" starttime="20210618 19:59:25.611" endtime="20210618 19:59:25.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:59:25.717" level="INFO">ARC_WLAN_5G_Channel=124
#</msg>
<status status="PASS" starttime="20210618 19:59:25.717" endtime="20210618 19:59:25.717"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 19:59:25.718" level="INFO">${result_5Ghz} = ['124']</msg>
<status status="PASS" starttime="20210618 19:59:25.717" endtime="20210618 19:59:25.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:59:25.719" level="INFO">5Ghz Channel ID from console is 124</msg>
<status status="PASS" starttime="20210618 19:59:25.718" endtime="20210618 19:59:25.719"/>
</kw>
<msg timestamp="20210618 19:59:25.720" level="INFO">${5Ghz_ChannelID_Console} = 124</msg>
<status status="PASS" starttime="20210618 19:59:25.610" endtime="20210618 19:59:25.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 19:59:25.720" level="INFO">Channel ID from Console is 124</msg>
<status status="PASS" starttime="20210618 19:59:25.720" endtime="20210618 19:59:25.720"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 19:59:25.720" endtime="20210618 19:59:25.720"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 19:59:25.721" endtime="20210618 19:59:25.721"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 19:59:25.722" endtime="20210618 19:59:25.722"/>
</kw>
<status status="NOT RUN" starttime="20210618 19:59:25.722" endtime="20210618 19:59:25.723"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:01:55.736" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 19:59:25.723" endtime="20210618 20:01:55.736"/>
</kw>
<status status="PASS" starttime="20210618 19:59:25.723" endtime="20210618 20:01:55.736"/>
</branch>
<status status="PASS" starttime="20210618 19:59:25.722" endtime="20210618 20:01:55.736"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:01:55.737" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:01:55.742" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:01:56.399" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:01:55.737" endtime="20210618 20:01:56.399"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:01:56.400" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:01:56.403" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:01:57.077" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:01:57.077" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:01:56.399" endtime="20210618 20:01:57.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:01:57.079" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 98%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 9 : 
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 72:6a:b0:0d:03:67
           Signal             : 90%  

</msg>
<status status="PASS" starttime="20210618 20:01:57.078" endtime="20210618 20:01:57.079"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:01:57.080" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 20:01:57.079" endtime="20210618 20:01:57.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:01:57.082" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 20:01:57.080" endtime="20210618 20:01:57.083"/>
</kw>
<status status="FAIL" starttime="20210618 20:01:55.736" endtime="20210618 20:01:57.083"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 20:01:57.083" endtime="20210618 20:01:57.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:01:57.083" endtime="20210618 20:01:57.083"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 20:01:57.083" endtime="20210618 20:01:57.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:01:57.084" endtime="20210618 20:01:57.084"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 20:01:57.084" endtime="20210618 20:01:57.084"/>
</kw>
<status status="FAIL" starttime="20210618 19:59:00.241" endtime="20210618 20:01:57.084"/>
</kw>
<status status="FAIL" starttime="20210618 19:58:37.796" endtime="20210618 20:01:57.085">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t46" name="Verify setting 5GHz ChannelID 128 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:01:57.089" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:01:57.117" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-161.log</msg>
<status status="PASS" starttime="20210618 20:01:57.089" endtime="20210618 20:02:07.315"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:02:07.316" endtime="20210618 20:02:07.761"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:02:09.769" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:02:07.761" endtime="20210618 20:02:09.770"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:02:09.772" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:02:10.063" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:02:09.770" endtime="20210618 20:02:10.094"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:02:12.098" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:02:10.094" endtime="20210618 20:02:12.098"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:02:12.099" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:02:12.099" endtime="20210618 20:02:13.943"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:02:18.958" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:02:13.943" endtime="20210618 20:02:18.958"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:02:18.958" endtime="20210618 20:02:18.968"/>
</kw>
<status status="PASS" starttime="20210618 20:01:57.088" endtime="20210618 20:02:18.968"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>128</arg>
<arg>17</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:02:18.970" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:02:18.969" endtime="20210618 20:02:19.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:02:24.025" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:02:19.024" endtime="20210618 20:02:24.025"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:02:24.025" endtime="20210618 20:02:24.031"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:02:24.032" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:02:24.032" endtime="20210618 20:02:24.042"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:02:24.048" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:02:24.042" endtime="20210618 20:02:24.048"/>
</kw>
<status status="PASS" starttime="20210618 20:02:18.969" endtime="20210618 20:02:24.048"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:02:24.049" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:02:24.049" endtime="20210618 20:02:24.288"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:02:24.289" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[17]/a'.</msg>
<status status="PASS" starttime="20210618 20:02:24.288" endtime="20210618 20:02:24.525"/>
</kw>
<status status="PASS" starttime="20210618 20:02:24.049" endtime="20210618 20:02:24.525"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:02:24.526" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:02:24.526" endtime="20210618 20:02:24.753"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:02:24.754" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 20:02:24.754" endtime="20210618 20:02:24.981"/>
</kw>
<status status="PASS" starttime="20210618 20:02:24.525" endtime="20210618 20:02:24.981"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:02:24.982" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:02:24.982" endtime="20210618 20:02:25.243"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:02:25.384" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20128%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20128%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:02:25.244" endtime="20210618 20:02:25.385"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:02:40.395" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:02:25.386" endtime="20210618 20:02:40.395"/>
</kw>
<status status="PASS" starttime="20210618 20:02:24.982" endtime="20210618 20:02:40.395"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:02:40.396" endtime="20210618 20:02:40.400"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:02:40.402" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:02:40.401" endtime="20210618 20:02:40.653"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:02:42.662" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:02:40.653" endtime="20210618 20:02:42.662"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:02:42.662" endtime="20210618 20:02:43.867"/>
</kw>
<status status="PASS" starttime="20210618 20:02:40.395" endtime="20210618 20:02:43.868"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:02:43.869" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:02:43.868" endtime="20210618 20:02:43.870"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:02:44.014" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:09:21 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:02:43.871" endtime="20210618 20:02:44.014"/>
</kw>
<status status="PASS" starttime="20210618 20:02:43.868" endtime="20210618 20:02:44.015"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:02:44.018" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:02:44.122" level="INFO">ARC_WLAN_5G_Channel=128
#</msg>
<msg timestamp="20210618 20:02:44.123" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=128
#</msg>
<status status="PASS" starttime="20210618 20:02:44.015" endtime="20210618 20:02:44.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:02:44.123" level="INFO">ARC_WLAN_5G_Channel=128
#</msg>
<status status="PASS" starttime="20210618 20:02:44.123" endtime="20210618 20:02:44.123"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:02:44.124" level="INFO">${result_5Ghz} = ['128']</msg>
<status status="PASS" starttime="20210618 20:02:44.124" endtime="20210618 20:02:44.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:02:44.125" level="INFO">5Ghz Channel ID from console is 128</msg>
<status status="PASS" starttime="20210618 20:02:44.124" endtime="20210618 20:02:44.125"/>
</kw>
<msg timestamp="20210618 20:02:44.126" level="INFO">${5Ghz_ChannelID_Console} = 128</msg>
<status status="PASS" starttime="20210618 20:02:44.015" endtime="20210618 20:02:44.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:02:44.126" level="INFO">Channel ID from Console is 128</msg>
<status status="PASS" starttime="20210618 20:02:44.126" endtime="20210618 20:02:44.127"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:02:44.127" endtime="20210618 20:02:44.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:02:44.127" endtime="20210618 20:02:44.128"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:02:44.128" endtime="20210618 20:02:44.128"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:02:44.128" endtime="20210618 20:02:44.128"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:05:14.134" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 20:02:44.128" endtime="20210618 20:05:14.134"/>
</kw>
<status status="PASS" starttime="20210618 20:02:44.128" endtime="20210618 20:05:14.134"/>
</branch>
<status status="PASS" starttime="20210618 20:02:44.128" endtime="20210618 20:05:14.134"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:05:14.135" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:05:14.140" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:05:14.752" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:05:14.135" endtime="20210618 20:05:14.752"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:05:14.753" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:05:14.758" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:05:15.346" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:05:15.347" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:05:14.753" endtime="20210618 20:05:15.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:05:15.348" level="INFO">
  
&gt; SSID 7 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 8 : Schanshoek9
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 84:9c:a6:6c:23:ff
           Signal             : 80%  

</msg>
<status status="PASS" starttime="20210618 20:05:15.347" endtime="20210618 20:05:15.348"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:05:15.349" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 20:05:15.348" endtime="20210618 20:05:15.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:05:15.352" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 20:05:15.350" endtime="20210618 20:05:15.352"/>
</kw>
<status status="FAIL" starttime="20210618 20:05:14.134" endtime="20210618 20:05:15.352"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 20:05:15.352" endtime="20210618 20:05:15.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:05:15.352" endtime="20210618 20:05:15.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 20:05:15.352" endtime="20210618 20:05:15.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:05:15.353" endtime="20210618 20:05:15.353"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 20:05:15.353" endtime="20210618 20:05:15.353"/>
</kw>
<status status="FAIL" starttime="20210618 20:02:18.969" endtime="20210618 20:05:15.353"/>
</kw>
<status status="FAIL" starttime="20210618 20:01:57.087" endtime="20210618 20:05:15.354">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t47" name="Verify setting 5GHz ChannelID 132 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:05:15.360" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:05:15.387" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-162.log</msg>
<status status="PASS" starttime="20210618 20:05:15.360" endtime="20210618 20:05:25.454"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:05:25.455" endtime="20210618 20:05:25.737"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:05:27.752" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:05:25.737" endtime="20210618 20:05:27.752"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:05:27.753" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:05:28.045" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:05:27.753" endtime="20210618 20:05:28.064"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:05:30.071" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:05:28.064" endtime="20210618 20:05:30.071"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:05:30.072" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:05:30.071" endtime="20210618 20:05:31.932"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:05:36.941" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:05:31.932" endtime="20210618 20:05:36.941"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:05:36.941" endtime="20210618 20:05:36.951"/>
</kw>
<status status="PASS" starttime="20210618 20:05:15.359" endtime="20210618 20:05:36.951"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>132</arg>
<arg>18</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:05:36.953" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:05:36.953" endtime="20210618 20:05:37.008"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:05:42.021" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:05:37.009" endtime="20210618 20:05:42.021"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:05:42.021" endtime="20210618 20:05:42.027"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:05:42.028" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:05:42.027" endtime="20210618 20:05:42.038"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:05:42.046" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:05:42.038" endtime="20210618 20:05:42.047"/>
</kw>
<status status="PASS" starttime="20210618 20:05:36.952" endtime="20210618 20:05:42.047"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:05:42.050" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:05:42.049" endtime="20210618 20:05:42.280"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:05:42.281" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[18]/a'.</msg>
<status status="PASS" starttime="20210618 20:05:42.281" endtime="20210618 20:05:42.506"/>
</kw>
<status status="PASS" starttime="20210618 20:05:42.048" endtime="20210618 20:05:42.506"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:05:42.507" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:05:42.507" endtime="20210618 20:05:42.734"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:05:42.735" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 20:05:42.735" endtime="20210618 20:05:42.958"/>
</kw>
<status status="PASS" starttime="20210618 20:05:42.506" endtime="20210618 20:05:42.959"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:05:42.959" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:05:42.959" endtime="20210618 20:05:43.199"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:05:43.382" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20132%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20132%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:05:43.199" endtime="20210618 20:05:43.382"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:05:58.394" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:05:43.383" endtime="20210618 20:05:58.394"/>
</kw>
<status status="PASS" starttime="20210618 20:05:42.959" endtime="20210618 20:05:58.394"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:05:58.395" endtime="20210618 20:05:58.399"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:05:58.400" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:05:58.400" endtime="20210618 20:05:58.824"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:06:00.839" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:05:58.825" endtime="20210618 20:06:00.839"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:06:00.839" endtime="20210618 20:06:02.154"/>
</kw>
<status status="PASS" starttime="20210618 20:05:58.394" endtime="20210618 20:06:02.154"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:06:02.155" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:06:02.155" endtime="20210618 20:06:02.156"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:06:02.295" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:12:39 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:06:02.156" endtime="20210618 20:06:02.295"/>
</kw>
<status status="PASS" starttime="20210618 20:06:02.154" endtime="20210618 20:06:02.296"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:06:02.341" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:06:02.387" level="INFO">ARC_WLAN_5G_Channel=132
#</msg>
<msg timestamp="20210618 20:06:02.387" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=132
#</msg>
<status status="PASS" starttime="20210618 20:06:02.296" endtime="20210618 20:06:02.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:06:02.388" level="INFO">ARC_WLAN_5G_Channel=132
#</msg>
<status status="PASS" starttime="20210618 20:06:02.388" endtime="20210618 20:06:02.389"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:06:02.390" level="INFO">${result_5Ghz} = ['132']</msg>
<status status="PASS" starttime="20210618 20:06:02.389" endtime="20210618 20:06:02.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:06:02.392" level="INFO">5Ghz Channel ID from console is 132</msg>
<status status="PASS" starttime="20210618 20:06:02.390" endtime="20210618 20:06:02.392"/>
</kw>
<msg timestamp="20210618 20:06:02.394" level="INFO">${5Ghz_ChannelID_Console} = 132</msg>
<status status="PASS" starttime="20210618 20:06:02.296" endtime="20210618 20:06:02.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:06:02.394" level="INFO">Channel ID from Console is 132</msg>
<status status="PASS" starttime="20210618 20:06:02.394" endtime="20210618 20:06:02.394"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:06:02.395" endtime="20210618 20:06:02.395"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:06:02.395" endtime="20210618 20:06:02.396"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:06:02.397" endtime="20210618 20:06:02.397"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:06:02.396" endtime="20210618 20:06:02.397"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:08:32.411" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 20:06:02.397" endtime="20210618 20:08:32.411"/>
</kw>
<status status="PASS" starttime="20210618 20:06:02.397" endtime="20210618 20:08:32.411"/>
</branch>
<status status="PASS" starttime="20210618 20:06:02.396" endtime="20210618 20:08:32.411"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:08:32.412" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:08:32.415" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:08:33.047" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:08:32.412" endtime="20210618 20:08:33.047"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:08:33.048" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:08:33.052" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:08:33.627" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:08:33.627" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:08:33.048" endtime="20210618 20:08:33.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:08:33.628" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 9 : Ziggo1451113
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 48:d3:43:db:40:47
           Signal             : 16%  

</msg>
<status status="PASS" starttime="20210618 20:08:33.627" endtime="20210618 20:08:33.629"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:08:33.630" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 20:08:33.629" endtime="20210618 20:08:33.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:08:33.632" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 20:08:33.630" endtime="20210618 20:08:33.632"/>
</kw>
<status status="FAIL" starttime="20210618 20:08:32.411" endtime="20210618 20:08:33.632"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 20:08:33.632" endtime="20210618 20:08:33.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:08:33.632" endtime="20210618 20:08:33.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 20:08:33.632" endtime="20210618 20:08:33.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:08:33.633" endtime="20210618 20:08:33.633"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 20:08:33.633" endtime="20210618 20:08:33.633"/>
</kw>
<status status="FAIL" starttime="20210618 20:05:36.952" endtime="20210618 20:08:33.633"/>
</kw>
<status status="FAIL" starttime="20210618 20:05:15.358" endtime="20210618 20:08:33.634">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t48" name="Verify setting 5GHz ChannelID 136 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:08:33.640" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:08:33.663" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-163.log</msg>
<status status="PASS" starttime="20210618 20:08:33.640" endtime="20210618 20:08:43.590"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:08:43.590" endtime="20210618 20:08:43.866"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:08:45.870" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:08:43.866" endtime="20210618 20:08:45.870"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:08:45.871" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:08:46.186" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:08:45.871" endtime="20210618 20:08:46.206"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:08:48.215" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:08:46.206" endtime="20210618 20:08:48.215"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:08:48.216" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:08:48.215" endtime="20210618 20:08:50.094"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:08:55.101" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:08:50.095" endtime="20210618 20:08:55.101"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:08:55.102" endtime="20210618 20:08:55.115"/>
</kw>
<status status="PASS" starttime="20210618 20:08:33.639" endtime="20210618 20:08:55.115"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>136</arg>
<arg>19</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:08:55.117" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:08:55.117" endtime="20210618 20:08:55.165"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:09:00.171" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:08:55.166" endtime="20210618 20:09:00.171"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:09:00.171" endtime="20210618 20:09:00.177"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:09:00.177" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:09:00.177" endtime="20210618 20:09:00.186"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:09:00.192" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:09:00.186" endtime="20210618 20:09:00.192"/>
</kw>
<status status="PASS" starttime="20210618 20:08:55.117" endtime="20210618 20:09:00.192"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:09:00.193" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:09:00.193" endtime="20210618 20:09:00.417"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:09:00.419" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[19]/a'.</msg>
<status status="PASS" starttime="20210618 20:09:00.418" endtime="20210618 20:09:00.641"/>
</kw>
<status status="PASS" starttime="20210618 20:09:00.192" endtime="20210618 20:09:00.642"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:09:00.643" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:09:00.642" endtime="20210618 20:09:00.869"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:09:00.869" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 20:09:00.869" endtime="20210618 20:09:01.096"/>
</kw>
<status status="PASS" starttime="20210618 20:09:00.642" endtime="20210618 20:09:01.096"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:09:01.098" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:09:01.097" endtime="20210618 20:09:01.355"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:09:01.510" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20136%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20136%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:09:01.355" endtime="20210618 20:09:01.510"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:09:16.522" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:09:01.510" endtime="20210618 20:09:16.522"/>
</kw>
<status status="PASS" starttime="20210618 20:09:01.097" endtime="20210618 20:09:16.522"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:09:16.523" endtime="20210618 20:09:16.526"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:09:16.527" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:09:16.526" endtime="20210618 20:09:16.953"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:09:18.959" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:09:16.954" endtime="20210618 20:09:18.959"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:09:18.959" endtime="20210618 20:09:20.176"/>
</kw>
<status status="PASS" starttime="20210618 20:09:16.522" endtime="20210618 20:09:20.176"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:09:20.177" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:09:20.176" endtime="20210618 20:09:20.178"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:09:20.328" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:15:57 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:09:20.178" endtime="20210618 20:09:20.328"/>
</kw>
<status status="PASS" starttime="20210618 20:09:20.176" endtime="20210618 20:09:20.329"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:09:20.373" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:09:20.419" level="INFO">ARC_WLAN_5G_Channel=136
#</msg>
<msg timestamp="20210618 20:09:20.419" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=136
#</msg>
<status status="PASS" starttime="20210618 20:09:20.330" endtime="20210618 20:09:20.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:09:20.420" level="INFO">ARC_WLAN_5G_Channel=136
#</msg>
<status status="PASS" starttime="20210618 20:09:20.420" endtime="20210618 20:09:20.420"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:09:20.421" level="INFO">${result_5Ghz} = ['136']</msg>
<status status="PASS" starttime="20210618 20:09:20.420" endtime="20210618 20:09:20.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:09:20.422" level="INFO">5Ghz Channel ID from console is 136</msg>
<status status="PASS" starttime="20210618 20:09:20.421" endtime="20210618 20:09:20.422"/>
</kw>
<msg timestamp="20210618 20:09:20.423" level="INFO">${5Ghz_ChannelID_Console} = 136</msg>
<status status="PASS" starttime="20210618 20:09:20.329" endtime="20210618 20:09:20.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:09:20.423" level="INFO">Channel ID from Console is 136</msg>
<status status="PASS" starttime="20210618 20:09:20.423" endtime="20210618 20:09:20.423"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:09:20.423" endtime="20210618 20:09:20.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:09:20.423" endtime="20210618 20:09:20.424"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:09:20.424" endtime="20210618 20:09:20.424"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:09:20.424" endtime="20210618 20:09:20.424"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:11:50.425" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 20:09:20.424" endtime="20210618 20:11:50.425"/>
</kw>
<status status="PASS" starttime="20210618 20:09:20.424" endtime="20210618 20:11:50.425"/>
</branch>
<status status="PASS" starttime="20210618 20:09:20.424" endtime="20210618 20:11:50.425"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:11:50.427" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:11:50.432" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:11:51.198" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:11:50.426" endtime="20210618 20:11:51.198"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:11:51.199" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:11:51.204" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:11:52.047" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:11:52.047" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:11:51.198" endtime="20210618 20:11:52.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:11:52.048" level="INFO">
  
&gt; SSID 3 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 4 : moppaccino
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : c0:c9:e3:50:d5:fa
           Signal             : 26%  

</msg>
<status status="PASS" starttime="20210618 20:11:52.047" endtime="20210618 20:11:52.049"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:11:52.050" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 20:11:52.049" endtime="20210618 20:11:52.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:11:52.055" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 20:11:52.050" endtime="20210618 20:11:52.055"/>
</kw>
<status status="FAIL" starttime="20210618 20:11:50.425" endtime="20210618 20:11:52.055"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 20:11:52.055" endtime="20210618 20:11:52.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:11:52.056" endtime="20210618 20:11:52.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 20:11:52.056" endtime="20210618 20:11:52.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:11:52.056" endtime="20210618 20:11:52.056"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 20:11:52.056" endtime="20210618 20:11:52.057"/>
</kw>
<status status="FAIL" starttime="20210618 20:08:55.116" endtime="20210618 20:11:52.057"/>
</kw>
<status status="FAIL" starttime="20210618 20:08:33.638" endtime="20210618 20:11:52.058">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t49" name="Verify setting 5GHz ChannelID 140 with Bandwith 20/40/80 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:11:52.062" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:11:52.092" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-164.log</msg>
<status status="PASS" starttime="20210618 20:11:52.062" endtime="20210618 20:12:03.324"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:12:03.325" endtime="20210618 20:12:03.598"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:12:05.605" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:12:03.599" endtime="20210618 20:12:05.605"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:12:05.607" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:12:05.907" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:12:05.605" endtime="20210618 20:12:05.933"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:12:07.936" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:12:05.933" endtime="20210618 20:12:07.936"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:12:07.937" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:12:07.937" endtime="20210618 20:12:09.566"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:12:14.570" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:12:09.566" endtime="20210618 20:12:14.570"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:12:14.570" endtime="20210618 20:12:14.579"/>
</kw>
<status status="PASS" starttime="20210618 20:11:52.061" endtime="20210618 20:12:14.579"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>140</arg>
<arg>20</arg>
<arg>3</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:12:14.581" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:12:14.581" endtime="20210618 20:12:14.633"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:12:19.643" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:12:14.633" endtime="20210618 20:12:19.643"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:12:19.643" endtime="20210618 20:12:19.653"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:12:19.653" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:12:19.653" endtime="20210618 20:12:19.664"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:12:19.671" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:12:19.665" endtime="20210618 20:12:19.671"/>
</kw>
<status status="PASS" starttime="20210618 20:12:14.581" endtime="20210618 20:12:19.672"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:12:19.673" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:12:19.672" endtime="20210618 20:12:19.904"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:12:19.905" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[20]/a'.</msg>
<status status="PASS" starttime="20210618 20:12:19.905" endtime="20210618 20:12:20.130"/>
</kw>
<status status="PASS" starttime="20210618 20:12:19.672" endtime="20210618 20:12:20.131"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:12:20.132" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:12:20.132" endtime="20210618 20:12:20.358"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:12:20.359" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 20:12:20.358" endtime="20210618 20:12:20.583"/>
</kw>
<status status="PASS" starttime="20210618 20:12:20.131" endtime="20210618 20:12:20.583"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:12:20.584" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:12:20.584" endtime="20210618 20:12:20.827"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:12:21.012" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%20140%20with%20Bandwith%2020/40/80%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%20140%20with%20Bandwith%2020/40/80%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:12:20.827" endtime="20210618 20:12:21.012"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:12:36.025" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:12:21.012" endtime="20210618 20:12:36.025"/>
</kw>
<status status="PASS" starttime="20210618 20:12:20.583" endtime="20210618 20:12:36.026"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:12:36.027" endtime="20210618 20:12:36.032"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:12:36.033" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:12:36.032" endtime="20210618 20:12:36.269"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:12:38.276" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:12:36.269" endtime="20210618 20:12:38.276"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:12:38.276" endtime="20210618 20:12:39.464"/>
</kw>
<status status="PASS" starttime="20210618 20:12:36.026" endtime="20210618 20:12:39.464"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:12:39.467" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:12:39.466" endtime="20210618 20:12:39.468"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:12:39.614" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:19:17 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:12:39.468" endtime="20210618 20:12:39.614"/>
</kw>
<status status="PASS" starttime="20210618 20:12:39.465" endtime="20210618 20:12:39.615"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:12:39.618" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:12:39.719" level="INFO">ARC_WLAN_5G_Channel=140
#</msg>
<msg timestamp="20210618 20:12:39.719" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=140
#</msg>
<status status="PASS" starttime="20210618 20:12:39.615" endtime="20210618 20:12:39.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:12:39.720" level="INFO">ARC_WLAN_5G_Channel=140
#</msg>
<status status="PASS" starttime="20210618 20:12:39.719" endtime="20210618 20:12:39.720"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:12:39.720" level="INFO">${result_5Ghz} = ['140']</msg>
<status status="PASS" starttime="20210618 20:12:39.720" endtime="20210618 20:12:39.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:12:39.721" level="INFO">5Ghz Channel ID from console is 140</msg>
<status status="PASS" starttime="20210618 20:12:39.720" endtime="20210618 20:12:39.721"/>
</kw>
<msg timestamp="20210618 20:12:39.722" level="INFO">${5Ghz_ChannelID_Console} = 140</msg>
<status status="PASS" starttime="20210618 20:12:39.615" endtime="20210618 20:12:39.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:12:39.722" level="INFO">Channel ID from Console is 140</msg>
<status status="PASS" starttime="20210618 20:12:39.722" endtime="20210618 20:12:39.722"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:12:39.723" endtime="20210618 20:12:39.723"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:12:39.723" endtime="20210618 20:12:39.723"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:12:39.724" endtime="20210618 20:12:39.724"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:12:39.723" endtime="20210618 20:12:39.724"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:15:09.726" level="INFO">Slept 2 minutes 30 seconds</msg>
<status status="PASS" starttime="20210618 20:12:39.724" endtime="20210618 20:15:09.726"/>
</kw>
<status status="PASS" starttime="20210618 20:12:39.724" endtime="20210618 20:15:09.726"/>
</branch>
<status status="PASS" starttime="20210618 20:12:39.723" endtime="20210618 20:15:09.726"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:15:09.727" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:15:09.731" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:15:10.390" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:15:09.727" endtime="20210618 20:15:10.390"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:15:10.391" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:15:10.394" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:15:10.971" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:15:10.971" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:15:10.391" endtime="20210618 20:15:10.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:15:10.973" level="INFO">
  
&gt; SSID 1 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 2 : KPN Fon
      Network type            : Infrastructure
      Authentication          : Open
      Encryption              : None 
      BSSID 1                 : 72:6a:b0:0d:03:64
           Signal             : 99%  

</msg>
<status status="PASS" starttime="20210618 20:15:10.972" endtime="20210618 20:15:10.973"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:15:10.974" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 20:15:10.973" endtime="20210618 20:15:10.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:15:10.976" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 20:15:10.974" endtime="20210618 20:15:10.976"/>
</kw>
<status status="FAIL" starttime="20210618 20:15:09.726" endtime="20210618 20:15:10.976"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 20:15:10.976" endtime="20210618 20:15:10.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:15:10.976" endtime="20210618 20:15:10.976"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 20:15:10.976" endtime="20210618 20:15:10.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:15:10.976" endtime="20210618 20:15:10.977"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 20:15:10.977" endtime="20210618 20:15:10.977"/>
</kw>
<status status="FAIL" starttime="20210618 20:12:14.580" endtime="20210618 20:15:10.977"/>
</kw>
<status status="FAIL" starttime="20210618 20:11:52.060" endtime="20210618 20:15:10.978">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t50" name="Verify setting 5GHz ChannelID 36 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:15:10.981" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:15:11.010" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-165.log</msg>
<status status="PASS" starttime="20210618 20:15:10.981" endtime="20210618 20:15:21.667"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:15:21.667" endtime="20210618 20:15:21.950"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:15:23.962" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:15:21.951" endtime="20210618 20:15:23.962"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:15:23.964" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:15:24.258" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:15:23.962" endtime="20210618 20:15:24.277"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:15:26.285" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:15:24.277" endtime="20210618 20:15:26.285"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:15:26.286" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:15:26.285" endtime="20210618 20:15:28.114"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:15:33.116" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:15:28.114" endtime="20210618 20:15:33.116"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:15:33.116" endtime="20210618 20:15:33.124"/>
</kw>
<status status="PASS" starttime="20210618 20:15:10.980" endtime="20210618 20:15:33.124"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>36</arg>
<arg>2</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:15:33.127" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:15:33.127" endtime="20210618 20:15:33.171"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:15:38.174" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:15:33.172" endtime="20210618 20:15:38.174"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:15:38.174" endtime="20210618 20:15:38.182"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:15:38.183" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:15:38.183" endtime="20210618 20:15:38.191"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:15:38.199" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:15:38.191" endtime="20210618 20:15:38.200"/>
</kw>
<status status="PASS" starttime="20210618 20:15:33.125" endtime="20210618 20:15:38.200"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:15:38.201" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:15:38.200" endtime="20210618 20:15:38.434"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:15:38.435" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[2]/a'.</msg>
<status status="PASS" starttime="20210618 20:15:38.434" endtime="20210618 20:15:38.659"/>
</kw>
<status status="PASS" starttime="20210618 20:15:38.200" endtime="20210618 20:15:38.659"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:15:38.660" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:15:38.660" endtime="20210618 20:15:38.884"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:15:38.884" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 20:15:38.884" endtime="20210618 20:15:39.123"/>
</kw>
<status status="PASS" starttime="20210618 20:15:38.659" endtime="20210618 20:15:39.123"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:15:39.124" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:15:39.124" endtime="20210618 20:15:39.367"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:15:39.535" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2036%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2036%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:15:39.368" endtime="20210618 20:15:39.535"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:15:54.547" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:15:39.535" endtime="20210618 20:15:54.547"/>
</kw>
<status status="PASS" starttime="20210618 20:15:39.123" endtime="20210618 20:15:54.548"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:15:54.548" endtime="20210618 20:15:54.551"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:15:54.552" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:15:54.552" endtime="20210618 20:15:54.790"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:15:56.795" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:15:54.790" endtime="20210618 20:15:56.795"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:15:56.796" endtime="20210618 20:15:58.140"/>
</kw>
<status status="PASS" starttime="20210618 20:15:54.548" endtime="20210618 20:15:58.140"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:15:58.141" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:15:58.141" endtime="20210618 20:15:58.142"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:15:58.285" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:22:35 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:15:58.142" endtime="20210618 20:15:58.285"/>
</kw>
<status status="PASS" starttime="20210618 20:15:58.140" endtime="20210618 20:15:58.285"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:15:58.291" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:15:58.406" level="INFO">ARC_WLAN_5G_Channel=36
#</msg>
<msg timestamp="20210618 20:15:58.407" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=36
#</msg>
<status status="PASS" starttime="20210618 20:15:58.286" endtime="20210618 20:15:58.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:15:58.407" level="INFO">ARC_WLAN_5G_Channel=36
#</msg>
<status status="PASS" starttime="20210618 20:15:58.407" endtime="20210618 20:15:58.407"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:15:58.408" level="INFO">${result_5Ghz} = ['36']</msg>
<status status="PASS" starttime="20210618 20:15:58.407" endtime="20210618 20:15:58.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:15:58.409" level="INFO">5Ghz Channel ID from console is 36</msg>
<status status="PASS" starttime="20210618 20:15:58.408" endtime="20210618 20:15:58.409"/>
</kw>
<msg timestamp="20210618 20:15:58.410" level="INFO">${5Ghz_ChannelID_Console} = 36</msg>
<status status="PASS" starttime="20210618 20:15:58.286" endtime="20210618 20:15:58.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:15:58.410" level="INFO">Channel ID from Console is 36</msg>
<status status="PASS" starttime="20210618 20:15:58.410" endtime="20210618 20:15:58.410"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:15:58.410" endtime="20210618 20:15:58.411"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:15:58.411" endtime="20210618 20:15:58.411"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:16:58.417" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 20:15:58.412" endtime="20210618 20:16:58.417"/>
</kw>
<status status="PASS" starttime="20210618 20:15:58.412" endtime="20210618 20:16:58.417"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:16:58.417" endtime="20210618 20:16:58.417"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:16:58.417" endtime="20210618 20:16:58.417"/>
</branch>
<status status="PASS" starttime="20210618 20:15:58.411" endtime="20210618 20:16:58.417"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:16:58.418" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:16:58.422" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:16:59.063" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:16:58.418" endtime="20210618 20:16:59.064"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:16:59.065" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:16:59.069" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:16:59.639" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:16:59.640" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:16:59.064" endtime="20210618 20:16:59.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:16:59.641" level="INFO">
  
&gt; SSID 4 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 36 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 20:16:59.640" endtime="20210618 20:16:59.641"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:16:59.644" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '36']</msg>
<status status="PASS" starttime="20210618 20:16:59.641" endtime="20210618 20:16:59.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:16:59.646" level="INFO">Analyser Channel IDs are 4 and 36</msg>
<status status="PASS" starttime="20210618 20:16:59.644" endtime="20210618 20:16:59.646"/>
</kw>
<msg timestamp="20210618 20:16:59.648" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '36']</msg>
<status status="PASS" starttime="20210618 20:16:58.418" endtime="20210618 20:16:59.648"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 20:16:59.649" level="INFO">Length is 2</msg>
<msg timestamp="20210618 20:16:59.649" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 20:16:59.648" endtime="20210618 20:16:59.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:16:59.649" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 20:16:59.649" endtime="20210618 20:16:59.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 20:16:59.650" endtime="20210618 20:16:59.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:16:59.650" level="INFO">['4', '36']</msg>
<status status="PASS" starttime="20210618 20:16:59.650" endtime="20210618 20:16:59.650"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 20:16:59.650" endtime="20210618 20:16:59.651"/>
</kw>
<status status="PASS" starttime="20210618 20:15:33.125" endtime="20210618 20:16:59.651"/>
</kw>
<status status="PASS" starttime="20210618 20:15:10.979" endtime="20210618 20:16:59.652"/>
</test>
<test id="s1-t51" name="Verify setting 5GHz ChannelID 40 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:16:59.655" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:16:59.683" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-166.log</msg>
<status status="PASS" starttime="20210618 20:16:59.655" endtime="20210618 20:17:09.574"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:17:09.574" endtime="20210618 20:17:09.856"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:17:11.865" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:17:09.857" endtime="20210618 20:17:11.865"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:17:11.866" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:17:12.163" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:17:11.865" endtime="20210618 20:17:12.184"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:17:14.193" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:17:12.184" endtime="20210618 20:17:14.193"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:17:14.194" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:17:14.193" endtime="20210618 20:17:16.045"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:17:21.058" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:17:16.045" endtime="20210618 20:17:21.058"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:17:21.058" endtime="20210618 20:17:21.068"/>
</kw>
<status status="PASS" starttime="20210618 20:16:59.654" endtime="20210618 20:17:21.068"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>40</arg>
<arg>3</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:17:21.071" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:17:21.070" endtime="20210618 20:17:21.124"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:17:26.124" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:17:21.124" endtime="20210618 20:17:26.124"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:17:26.125" endtime="20210618 20:17:26.131"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:17:26.132" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:17:26.131" endtime="20210618 20:17:26.141"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:17:26.148" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:17:26.141" endtime="20210618 20:17:26.148"/>
</kw>
<status status="PASS" starttime="20210618 20:17:21.070" endtime="20210618 20:17:26.148"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:17:26.149" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:17:26.149" endtime="20210618 20:17:26.382"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:17:26.383" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[3]/a'.</msg>
<status status="PASS" starttime="20210618 20:17:26.382" endtime="20210618 20:17:26.609"/>
</kw>
<status status="PASS" starttime="20210618 20:17:26.148" endtime="20210618 20:17:26.609"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:17:26.611" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:17:26.610" endtime="20210618 20:17:26.850"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:17:26.851" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 20:17:26.851" endtime="20210618 20:17:27.078"/>
</kw>
<status status="PASS" starttime="20210618 20:17:26.610" endtime="20210618 20:17:27.079"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:17:27.079" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:17:27.079" endtime="20210618 20:17:27.334"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:17:27.503" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2040%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2040%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:17:27.334" endtime="20210618 20:17:27.503"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:17:42.514" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:17:27.504" endtime="20210618 20:17:42.514"/>
</kw>
<status status="PASS" starttime="20210618 20:17:27.079" endtime="20210618 20:17:42.514"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:17:42.515" endtime="20210618 20:17:42.519"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:17:42.520" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:17:42.519" endtime="20210618 20:17:42.758"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:17:44.766" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:17:42.758" endtime="20210618 20:17:44.766"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:17:44.766" endtime="20210618 20:17:46.023"/>
</kw>
<status status="PASS" starttime="20210618 20:17:42.514" endtime="20210618 20:17:46.023"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:17:46.025" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:17:46.024" endtime="20210618 20:17:46.026"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:17:46.161" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:24:23 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:17:46.026" endtime="20210618 20:17:46.162"/>
</kw>
<status status="PASS" starttime="20210618 20:17:46.023" endtime="20210618 20:17:46.162"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:17:46.164" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:17:46.284" level="INFO">ARC_WLAN_5G_Channel=40
#</msg>
<msg timestamp="20210618 20:17:46.284" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=40
#</msg>
<status status="PASS" starttime="20210618 20:17:46.162" endtime="20210618 20:17:46.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:17:46.285" level="INFO">ARC_WLAN_5G_Channel=40
#</msg>
<status status="PASS" starttime="20210618 20:17:46.285" endtime="20210618 20:17:46.285"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:17:46.286" level="INFO">${result_5Ghz} = ['40']</msg>
<status status="PASS" starttime="20210618 20:17:46.285" endtime="20210618 20:17:46.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:17:46.287" level="INFO">5Ghz Channel ID from console is 40</msg>
<status status="PASS" starttime="20210618 20:17:46.286" endtime="20210618 20:17:46.287"/>
</kw>
<msg timestamp="20210618 20:17:46.287" level="INFO">${5Ghz_ChannelID_Console} = 40</msg>
<status status="PASS" starttime="20210618 20:17:46.162" endtime="20210618 20:17:46.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:17:46.288" level="INFO">Channel ID from Console is 40</msg>
<status status="PASS" starttime="20210618 20:17:46.288" endtime="20210618 20:17:46.288"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:17:46.288" endtime="20210618 20:17:46.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:17:46.288" endtime="20210618 20:17:46.289"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:18:46.291" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 20:17:46.290" endtime="20210618 20:18:46.291"/>
</kw>
<status status="PASS" starttime="20210618 20:17:46.289" endtime="20210618 20:18:46.291"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:18:46.291" endtime="20210618 20:18:46.291"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:18:46.291" endtime="20210618 20:18:46.291"/>
</branch>
<status status="PASS" starttime="20210618 20:17:46.289" endtime="20210618 20:18:46.292"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:18:46.292" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:18:46.296" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:18:46.936" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:18:46.292" endtime="20210618 20:18:46.936"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:18:46.937" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:18:46.941" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:18:47.536" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:18:47.536" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:18:46.937" endtime="20210618 20:18:47.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:18:47.537" level="INFO">
  
&gt; SSID 1 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 98%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 40 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 20:18:47.536" endtime="20210618 20:18:47.537"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:18:47.538" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '40']</msg>
<status status="PASS" starttime="20210618 20:18:47.537" endtime="20210618 20:18:47.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:18:47.540" level="INFO">Analyser Channel IDs are 4 and 40</msg>
<status status="PASS" starttime="20210618 20:18:47.538" endtime="20210618 20:18:47.540"/>
</kw>
<msg timestamp="20210618 20:18:47.542" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '40']</msg>
<status status="PASS" starttime="20210618 20:18:46.292" endtime="20210618 20:18:47.542"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 20:18:47.542" level="INFO">Length is 2</msg>
<msg timestamp="20210618 20:18:47.542" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 20:18:47.542" endtime="20210618 20:18:47.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:18:47.543" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 20:18:47.542" endtime="20210618 20:18:47.543"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 20:18:47.543" endtime="20210618 20:18:47.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:18:47.543" level="INFO">['4', '40']</msg>
<status status="PASS" starttime="20210618 20:18:47.543" endtime="20210618 20:18:47.544"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 20:18:47.544" endtime="20210618 20:18:47.544"/>
</kw>
<status status="PASS" starttime="20210618 20:17:21.069" endtime="20210618 20:18:47.544"/>
</kw>
<status status="PASS" starttime="20210618 20:16:59.653" endtime="20210618 20:18:47.545"/>
</test>
<test id="s1-t52" name="Verify setting 5GHz ChannelID 44 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:18:47.548" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:18:47.575" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-167.log</msg>
<status status="PASS" starttime="20210618 20:18:47.548" endtime="20210618 20:18:58.621"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:18:58.621" endtime="20210618 20:18:58.918"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:19:00.923" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:18:58.918" endtime="20210618 20:19:00.923"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:19:00.924" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:19:01.222" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:19:00.923" endtime="20210618 20:19:01.241"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:19:03.248" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:19:01.241" endtime="20210618 20:19:03.248"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:19:03.249" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:19:03.248" endtime="20210618 20:19:05.164"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:19:10.173" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:19:05.164" endtime="20210618 20:19:10.173"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:19:10.174" endtime="20210618 20:19:10.183"/>
</kw>
<status status="PASS" starttime="20210618 20:18:47.548" endtime="20210618 20:19:10.183"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>44</arg>
<arg>4</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:19:10.185" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:19:10.185" endtime="20210618 20:19:10.238"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:19:15.240" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:19:10.238" endtime="20210618 20:19:15.240"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:19:15.240" endtime="20210618 20:19:15.251"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:19:15.251" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:19:15.251" endtime="20210618 20:19:15.261"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:19:15.272" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:19:15.261" endtime="20210618 20:19:15.272"/>
</kw>
<status status="PASS" starttime="20210618 20:19:10.184" endtime="20210618 20:19:15.272"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:19:15.273" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:19:15.272" endtime="20210618 20:19:15.500"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:19:15.500" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[4]/a'.</msg>
<status status="PASS" starttime="20210618 20:19:15.500" endtime="20210618 20:19:15.728"/>
</kw>
<status status="PASS" starttime="20210618 20:19:15.272" endtime="20210618 20:19:15.729"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:19:15.731" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:19:15.731" endtime="20210618 20:19:15.956"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:19:15.956" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 20:19:15.956" endtime="20210618 20:19:16.183"/>
</kw>
<status status="PASS" starttime="20210618 20:19:15.729" endtime="20210618 20:19:16.184"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:19:16.184" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:19:16.184" endtime="20210618 20:19:16.442"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:19:16.612" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2044%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2044%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:19:16.442" endtime="20210618 20:19:16.612"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:19:31.620" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:19:16.613" endtime="20210618 20:19:31.620"/>
</kw>
<status status="PASS" starttime="20210618 20:19:16.184" endtime="20210618 20:19:31.621"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:19:31.622" endtime="20210618 20:19:31.627"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:19:31.629" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:19:31.628" endtime="20210618 20:19:31.876"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:19:33.878" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:19:31.877" endtime="20210618 20:19:33.878"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:19:33.878" endtime="20210618 20:19:35.104"/>
</kw>
<status status="PASS" starttime="20210618 20:19:31.621" endtime="20210618 20:19:35.104"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:19:35.105" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:19:35.105" endtime="20210618 20:19:35.106"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:19:35.248" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:26:12 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:19:35.106" endtime="20210618 20:19:35.248"/>
</kw>
<status status="PASS" starttime="20210618 20:19:35.104" endtime="20210618 20:19:35.249"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:19:35.252" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:19:35.354" level="INFO">ARC_WLAN_5G_Channel=44
#</msg>
<msg timestamp="20210618 20:19:35.354" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=44
#</msg>
<status status="PASS" starttime="20210618 20:19:35.250" endtime="20210618 20:19:35.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:19:35.355" level="INFO">ARC_WLAN_5G_Channel=44
#</msg>
<status status="PASS" starttime="20210618 20:19:35.355" endtime="20210618 20:19:35.355"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:19:35.356" level="INFO">${result_5Ghz} = ['44']</msg>
<status status="PASS" starttime="20210618 20:19:35.355" endtime="20210618 20:19:35.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:19:35.357" level="INFO">5Ghz Channel ID from console is 44</msg>
<status status="PASS" starttime="20210618 20:19:35.356" endtime="20210618 20:19:35.357"/>
</kw>
<msg timestamp="20210618 20:19:35.358" level="INFO">${5Ghz_ChannelID_Console} = 44</msg>
<status status="PASS" starttime="20210618 20:19:35.249" endtime="20210618 20:19:35.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:19:35.359" level="INFO">Channel ID from Console is 44</msg>
<status status="PASS" starttime="20210618 20:19:35.358" endtime="20210618 20:19:35.359"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:19:35.359" endtime="20210618 20:19:35.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:19:35.359" endtime="20210618 20:19:35.360"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:20:35.372" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 20:19:35.360" endtime="20210618 20:20:35.372"/>
</kw>
<status status="PASS" starttime="20210618 20:19:35.360" endtime="20210618 20:20:35.372"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:20:35.372" endtime="20210618 20:20:35.372"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:20:35.372" endtime="20210618 20:20:35.372"/>
</branch>
<status status="PASS" starttime="20210618 20:19:35.360" endtime="20210618 20:20:35.372"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:20:35.373" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:20:35.378" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:20:36.007" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:20:35.373" endtime="20210618 20:20:36.007"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:20:36.008" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:20:36.013" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:20:36.601" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:20:36.602" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:20:36.007" endtime="20210618 20:20:36.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:20:36.604" level="INFO">
  
&gt; SSID 7 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 44 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 98%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 20:20:36.603" endtime="20210618 20:20:36.604"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:20:36.605" level="INFO">${Analyser_ChannelID_5Ghz} = ['44', '4']</msg>
<status status="PASS" starttime="20210618 20:20:36.604" endtime="20210618 20:20:36.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:20:36.607" level="INFO">Analyser Channel IDs are 44 and 4</msg>
<status status="PASS" starttime="20210618 20:20:36.605" endtime="20210618 20:20:36.607"/>
</kw>
<msg timestamp="20210618 20:20:36.609" level="INFO">${5Ghz_ChannelID_Analyser} = ['44', '4']</msg>
<status status="PASS" starttime="20210618 20:20:35.373" endtime="20210618 20:20:36.609"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 20:20:36.612" level="INFO">Length is 2</msg>
<msg timestamp="20210618 20:20:36.612" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 20:20:36.610" endtime="20210618 20:20:36.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:20:36.613" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 20:20:36.612" endtime="20210618 20:20:36.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 20:20:36.614" endtime="20210618 20:20:36.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:20:36.616" level="INFO">['44', '4']</msg>
<status status="PASS" starttime="20210618 20:20:36.615" endtime="20210618 20:20:36.616"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 20:20:36.617" endtime="20210618 20:20:36.618"/>
</kw>
<status status="PASS" starttime="20210618 20:19:10.184" endtime="20210618 20:20:36.618"/>
</kw>
<status status="PASS" starttime="20210618 20:18:47.546" endtime="20210618 20:20:36.632"/>
</test>
<test id="s1-t53" name="Verify setting 5GHz ChannelID 48 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:20:36.651" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:20:36.686" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-168.log</msg>
<status status="PASS" starttime="20210618 20:20:36.651" endtime="20210618 20:20:47.637"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:20:47.638" endtime="20210618 20:20:47.927"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:20:49.942" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:20:47.927" endtime="20210618 20:20:49.942"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:20:49.946" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:20:50.250" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:20:49.942" endtime="20210618 20:20:50.269"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:20:52.281" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:20:50.269" endtime="20210618 20:20:52.281"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:20:52.282" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:20:52.282" endtime="20210618 20:20:54.244"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:20:59.251" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:20:54.245" endtime="20210618 20:20:59.251"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:20:59.251" endtime="20210618 20:20:59.260"/>
</kw>
<status status="PASS" starttime="20210618 20:20:36.650" endtime="20210618 20:20:59.260"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>48</arg>
<arg>5</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:20:59.262" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:20:59.262" endtime="20210618 20:20:59.308"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:21:04.321" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:20:59.308" endtime="20210618 20:21:04.322"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:21:04.322" endtime="20210618 20:21:04.331"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:21:04.332" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:21:04.331" endtime="20210618 20:21:04.342"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:21:04.349" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:21:04.342" endtime="20210618 20:21:04.349"/>
</kw>
<status status="PASS" starttime="20210618 20:20:59.261" endtime="20210618 20:21:04.349"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:21:04.351" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:21:04.350" endtime="20210618 20:21:04.579"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:21:04.580" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[5]/a'.</msg>
<status status="PASS" starttime="20210618 20:21:04.579" endtime="20210618 20:21:04.807"/>
</kw>
<status status="PASS" starttime="20210618 20:21:04.350" endtime="20210618 20:21:04.807"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:21:04.808" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:21:04.808" endtime="20210618 20:21:05.032"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:21:05.033" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 20:21:05.032" endtime="20210618 20:21:05.261"/>
</kw>
<status status="PASS" starttime="20210618 20:21:04.807" endtime="20210618 20:21:05.262"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:21:05.262" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:21:05.262" endtime="20210618 20:21:05.506"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:21:05.677" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2048%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2048%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:21:05.507" endtime="20210618 20:21:05.678"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:21:20.689" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:21:05.678" endtime="20210618 20:21:20.689"/>
</kw>
<status status="PASS" starttime="20210618 20:21:05.262" endtime="20210618 20:21:20.689"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:21:20.690" endtime="20210618 20:21:20.693"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:21:20.693" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:21:20.693" endtime="20210618 20:21:20.936"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:21:22.939" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:21:20.937" endtime="20210618 20:21:22.941"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:21:22.942" endtime="20210618 20:21:24.285"/>
</kw>
<status status="PASS" starttime="20210618 20:21:20.689" endtime="20210618 20:21:24.285"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:21:24.286" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:21:24.286" endtime="20210618 20:21:24.287"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:21:24.428" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:28:02 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:21:24.287" endtime="20210618 20:21:24.429"/>
</kw>
<status status="PASS" starttime="20210618 20:21:24.285" endtime="20210618 20:21:24.429"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:21:24.432" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:21:24.534" level="INFO">ARC_WLAN_5G_Channel=48
#</msg>
<msg timestamp="20210618 20:21:24.535" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=48
#</msg>
<status status="PASS" starttime="20210618 20:21:24.429" endtime="20210618 20:21:24.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:21:24.535" level="INFO">ARC_WLAN_5G_Channel=48
#</msg>
<status status="PASS" starttime="20210618 20:21:24.535" endtime="20210618 20:21:24.535"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:21:24.536" level="INFO">${result_5Ghz} = ['48']</msg>
<status status="PASS" starttime="20210618 20:21:24.535" endtime="20210618 20:21:24.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:21:24.537" level="INFO">5Ghz Channel ID from console is 48</msg>
<status status="PASS" starttime="20210618 20:21:24.536" endtime="20210618 20:21:24.537"/>
</kw>
<msg timestamp="20210618 20:21:24.538" level="INFO">${5Ghz_ChannelID_Console} = 48</msg>
<status status="PASS" starttime="20210618 20:21:24.429" endtime="20210618 20:21:24.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:21:24.538" level="INFO">Channel ID from Console is 48</msg>
<status status="PASS" starttime="20210618 20:21:24.538" endtime="20210618 20:21:24.539"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:21:24.539" endtime="20210618 20:21:24.539"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:21:24.539" endtime="20210618 20:21:24.539"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:22:24.542" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 20:21:24.540" endtime="20210618 20:22:24.542"/>
</kw>
<status status="PASS" starttime="20210618 20:21:24.540" endtime="20210618 20:22:24.542"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:22:24.542" endtime="20210618 20:22:24.542"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:22:24.542" endtime="20210618 20:22:24.542"/>
</branch>
<status status="PASS" starttime="20210618 20:21:24.539" endtime="20210618 20:22:24.542"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:22:24.543" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:22:24.550" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:22:25.182" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:22:24.543" endtime="20210618 20:22:25.183"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:22:25.183" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:22:25.189" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:22:25.770" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:22:25.770" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:22:25.183" endtime="20210618 20:22:25.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:22:25.771" level="INFO">
  
&gt; SSID 8 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:66
           Signal             : 98%  
           Radio type         : 802.11ac
           Channel            : 48 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
      BSSID 2                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  

</msg>
<status status="PASS" starttime="20210618 20:22:25.770" endtime="20210618 20:22:25.771"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:22:25.773" level="INFO">${Analyser_ChannelID_5Ghz} = ['48', '4']</msg>
<status status="PASS" starttime="20210618 20:22:25.771" endtime="20210618 20:22:25.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:22:25.775" level="INFO">Analyser Channel IDs are 48 and 4</msg>
<status status="PASS" starttime="20210618 20:22:25.774" endtime="20210618 20:22:25.775"/>
</kw>
<msg timestamp="20210618 20:22:25.777" level="INFO">${5Ghz_ChannelID_Analyser} = ['48', '4']</msg>
<status status="PASS" starttime="20210618 20:22:24.543" endtime="20210618 20:22:25.777"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 20:22:25.777" level="INFO">Length is 2</msg>
<msg timestamp="20210618 20:22:25.777" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 20:22:25.777" endtime="20210618 20:22:25.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:22:25.778" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 20:22:25.777" endtime="20210618 20:22:25.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 20:22:25.778" endtime="20210618 20:22:25.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:22:25.778" level="INFO">['48', '4']</msg>
<status status="PASS" starttime="20210618 20:22:25.778" endtime="20210618 20:22:25.779"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 20:22:25.779" endtime="20210618 20:22:25.779"/>
</kw>
<status status="PASS" starttime="20210618 20:20:59.261" endtime="20210618 20:22:25.779"/>
</kw>
<status status="PASS" starttime="20210618 20:20:36.642" endtime="20210618 20:22:25.780"/>
</test>
<test id="s1-t54" name="Verify setting 5GHz ChannelID 52 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:22:25.783" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:22:25.815" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-169.log</msg>
<status status="PASS" starttime="20210618 20:22:25.783" endtime="20210618 20:22:35.659"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:22:35.660" endtime="20210618 20:22:36.101"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:22:38.110" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:22:36.102" endtime="20210618 20:22:38.110"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:22:38.111" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:22:38.406" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:22:38.110" endtime="20210618 20:22:38.427"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:22:40.428" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:22:38.427" endtime="20210618 20:22:40.428"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:22:40.429" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:22:40.428" endtime="20210618 20:22:41.887"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:22:46.900" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:22:41.888" endtime="20210618 20:22:46.900"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:22:46.900" endtime="20210618 20:22:46.913"/>
</kw>
<status status="PASS" starttime="20210618 20:22:25.782" endtime="20210618 20:22:46.913"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>52</arg>
<arg>6</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:22:46.916" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:22:46.915" endtime="20210618 20:22:46.991"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:22:52.002" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:22:46.991" endtime="20210618 20:22:52.002"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:22:52.002" endtime="20210618 20:22:52.009"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:22:52.009" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:22:52.009" endtime="20210618 20:22:52.019"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:22:52.026" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:22:52.019" endtime="20210618 20:22:52.026"/>
</kw>
<status status="PASS" starttime="20210618 20:22:46.914" endtime="20210618 20:22:52.026"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:22:52.027" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:22:52.027" endtime="20210618 20:22:52.260"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:22:52.261" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[6]/a'.</msg>
<status status="PASS" starttime="20210618 20:22:52.260" endtime="20210618 20:22:52.487"/>
</kw>
<status status="PASS" starttime="20210618 20:22:52.026" endtime="20210618 20:22:52.487"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:22:52.489" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:22:52.488" endtime="20210618 20:22:52.727"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:22:52.727" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 20:22:52.727" endtime="20210618 20:22:52.955"/>
</kw>
<status status="PASS" starttime="20210618 20:22:52.487" endtime="20210618 20:22:52.956"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:22:52.957" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:22:52.956" endtime="20210618 20:22:53.228"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:22:53.428" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2052%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2052%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:22:53.229" endtime="20210618 20:22:53.428"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:23:08.433" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:22:53.428" endtime="20210618 20:23:08.433"/>
</kw>
<status status="PASS" starttime="20210618 20:22:52.956" endtime="20210618 20:23:08.433"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:23:08.434" endtime="20210618 20:23:08.438"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:23:08.438" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:23:08.438" endtime="20210618 20:23:08.677"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:23:10.687" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:23:08.677" endtime="20210618 20:23:10.687"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:23:10.687" endtime="20210618 20:23:11.922"/>
</kw>
<status status="PASS" starttime="20210618 20:23:08.433" endtime="20210618 20:23:11.922"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:23:11.923" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:23:11.923" endtime="20210618 20:23:11.924"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:23:12.070" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:29:49 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:23:11.924" endtime="20210618 20:23:12.070"/>
</kw>
<status status="PASS" starttime="20210618 20:23:11.922" endtime="20210618 20:23:12.071"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:23:12.074" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:23:12.192" level="INFO">ARC_WLAN_5G_Channel=52
#</msg>
<msg timestamp="20210618 20:23:12.192" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=52
#</msg>
<status status="PASS" starttime="20210618 20:23:12.071" endtime="20210618 20:23:12.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:23:12.193" level="INFO">ARC_WLAN_5G_Channel=52
#</msg>
<status status="PASS" starttime="20210618 20:23:12.193" endtime="20210618 20:23:12.193"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:23:12.194" level="INFO">${result_5Ghz} = ['52']</msg>
<status status="PASS" starttime="20210618 20:23:12.193" endtime="20210618 20:23:12.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:23:12.195" level="INFO">5Ghz Channel ID from console is 52</msg>
<status status="PASS" starttime="20210618 20:23:12.194" endtime="20210618 20:23:12.195"/>
</kw>
<msg timestamp="20210618 20:23:12.195" level="INFO">${5Ghz_ChannelID_Console} = 52</msg>
<status status="PASS" starttime="20210618 20:23:12.071" endtime="20210618 20:23:12.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:23:12.196" level="INFO">Channel ID from Console is 52</msg>
<status status="PASS" starttime="20210618 20:23:12.196" endtime="20210618 20:23:12.196"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:23:12.196" endtime="20210618 20:23:12.196"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:23:12.196" endtime="20210618 20:23:12.197"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:24:12.206" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 20:23:12.197" endtime="20210618 20:24:12.206"/>
</kw>
<status status="PASS" starttime="20210618 20:23:12.197" endtime="20210618 20:24:12.206"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:24:12.207" endtime="20210618 20:24:12.207"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:24:12.206" endtime="20210618 20:24:12.207"/>
</branch>
<status status="PASS" starttime="20210618 20:23:12.197" endtime="20210618 20:24:12.207"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:24:12.211" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:24:12.215" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:24:12.852" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:24:12.210" endtime="20210618 20:24:12.852"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:24:12.853" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:24:12.856" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:24:13.457" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:24:13.457" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:24:12.853" endtime="20210618 20:24:13.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:24:13.458" level="INFO">
  
&gt; SSID 4 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 6 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 52 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 20:24:13.457" endtime="20210618 20:24:13.459"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:24:13.462" level="INFO">${Analyser_ChannelID_5Ghz} = ['6', '52']</msg>
<status status="PASS" starttime="20210618 20:24:13.459" endtime="20210618 20:24:13.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:24:13.464" level="INFO">Analyser Channel IDs are 6 and 52</msg>
<status status="PASS" starttime="20210618 20:24:13.462" endtime="20210618 20:24:13.464"/>
</kw>
<msg timestamp="20210618 20:24:13.466" level="INFO">${5Ghz_ChannelID_Analyser} = ['6', '52']</msg>
<status status="PASS" starttime="20210618 20:24:12.207" endtime="20210618 20:24:13.466"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 20:24:13.466" level="INFO">Length is 2</msg>
<msg timestamp="20210618 20:24:13.466" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 20:24:13.466" endtime="20210618 20:24:13.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:24:13.467" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 20:24:13.466" endtime="20210618 20:24:13.467"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 20:24:13.467" endtime="20210618 20:24:13.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:24:13.468" level="INFO">['6', '52']</msg>
<status status="PASS" starttime="20210618 20:24:13.468" endtime="20210618 20:24:13.468"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 20:24:13.468" endtime="20210618 20:24:13.469"/>
</kw>
<status status="PASS" starttime="20210618 20:22:46.914" endtime="20210618 20:24:13.469"/>
</kw>
<status status="PASS" starttime="20210618 20:22:25.781" endtime="20210618 20:24:13.469"/>
</test>
<test id="s1-t55" name="Verify setting 5GHz ChannelID 56 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:24:13.473" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:24:13.504" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-170.log</msg>
<status status="PASS" starttime="20210618 20:24:13.473" endtime="20210618 20:24:22.924"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:24:22.925" endtime="20210618 20:24:23.359"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:24:25.373" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:24:23.360" endtime="20210618 20:24:25.373"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:24:25.374" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:24:25.668" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:24:25.373" endtime="20210618 20:24:25.702"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:24:27.715" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:24:25.702" endtime="20210618 20:24:27.715"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:24:27.716" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:24:27.715" endtime="20210618 20:24:30.009"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:24:35.024" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:24:30.010" endtime="20210618 20:24:35.024"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:24:35.024" endtime="20210618 20:24:35.033"/>
</kw>
<status status="PASS" starttime="20210618 20:24:13.472" endtime="20210618 20:24:35.033"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>56</arg>
<arg>7</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:24:35.036" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:24:35.035" endtime="20210618 20:24:35.082"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:24:40.088" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:24:35.083" endtime="20210618 20:24:40.088"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:24:40.089" endtime="20210618 20:24:40.097"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:24:40.097" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:24:40.097" endtime="20210618 20:24:40.107"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:24:40.113" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:24:40.107" endtime="20210618 20:24:40.114"/>
</kw>
<status status="PASS" starttime="20210618 20:24:35.035" endtime="20210618 20:24:40.114"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:24:40.115" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:24:40.114" endtime="20210618 20:24:40.347"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:24:40.348" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[7]/a'.</msg>
<status status="PASS" starttime="20210618 20:24:40.347" endtime="20210618 20:24:40.574"/>
</kw>
<status status="PASS" starttime="20210618 20:24:40.114" endtime="20210618 20:24:40.575"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:24:40.576" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:24:40.575" endtime="20210618 20:24:40.815"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:24:40.816" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 20:24:40.816" endtime="20210618 20:24:41.043"/>
</kw>
<status status="PASS" starttime="20210618 20:24:40.575" endtime="20210618 20:24:41.043"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:24:41.044" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:24:41.044" endtime="20210618 20:24:41.300"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:24:41.458" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2056%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2056%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:24:41.301" endtime="20210618 20:24:41.459"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:24:56.462" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:24:41.460" endtime="20210618 20:24:56.462"/>
</kw>
<status status="PASS" starttime="20210618 20:24:41.043" endtime="20210618 20:24:56.463"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:24:56.464" endtime="20210618 20:24:56.468"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:24:56.470" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:24:56.469" endtime="20210618 20:24:56.705"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:24:58.709" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:24:56.705" endtime="20210618 20:24:58.709"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:24:58.709" endtime="20210618 20:24:59.955"/>
</kw>
<status status="PASS" starttime="20210618 20:24:56.463" endtime="20210618 20:24:59.955"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:24:59.958" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:24:59.957" endtime="20210618 20:24:59.959"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:25:00.108" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:31:37 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:24:59.960" endtime="20210618 20:25:00.108"/>
</kw>
<status status="PASS" starttime="20210618 20:24:59.956" endtime="20210618 20:25:00.109"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:25:00.112" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:25:00.213" level="INFO">ARC_WLAN_5G_Channel=56
#</msg>
<msg timestamp="20210618 20:25:00.213" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=56
#</msg>
<status status="PASS" starttime="20210618 20:25:00.109" endtime="20210618 20:25:00.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:25:00.214" level="INFO">ARC_WLAN_5G_Channel=56
#</msg>
<status status="PASS" starttime="20210618 20:25:00.214" endtime="20210618 20:25:00.214"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:25:00.215" level="INFO">${result_5Ghz} = ['56']</msg>
<status status="PASS" starttime="20210618 20:25:00.214" endtime="20210618 20:25:00.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:25:00.217" level="INFO">5Ghz Channel ID from console is 56</msg>
<status status="PASS" starttime="20210618 20:25:00.216" endtime="20210618 20:25:00.217"/>
</kw>
<msg timestamp="20210618 20:25:00.217" level="INFO">${5Ghz_ChannelID_Console} = 56</msg>
<status status="PASS" starttime="20210618 20:25:00.109" endtime="20210618 20:25:00.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:25:00.218" level="INFO">Channel ID from Console is 56</msg>
<status status="PASS" starttime="20210618 20:25:00.218" endtime="20210618 20:25:00.218"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:25:00.218" endtime="20210618 20:25:00.218"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:25:00.218" endtime="20210618 20:25:00.219"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:26:00.220" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 20:25:00.219" endtime="20210618 20:26:00.220"/>
</kw>
<status status="PASS" starttime="20210618 20:25:00.219" endtime="20210618 20:26:00.220"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:26:00.220" endtime="20210618 20:26:00.220"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:26:00.220" endtime="20210618 20:26:00.220"/>
</branch>
<status status="PASS" starttime="20210618 20:25:00.219" endtime="20210618 20:26:00.220"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:26:00.221" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:26:00.225" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:26:00.823" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:26:00.221" endtime="20210618 20:26:00.823"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:26:00.823" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:26:00.827" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:26:01.415" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:26:01.416" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:26:00.823" endtime="20210618 20:26:01.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:26:01.417" level="INFO">
  
&gt; SSID 3 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 56 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 20:26:01.416" endtime="20210618 20:26:01.417"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:26:01.420" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '56']</msg>
<status status="PASS" starttime="20210618 20:26:01.417" endtime="20210618 20:26:01.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:26:01.422" level="INFO">Analyser Channel IDs are 4 and 56</msg>
<status status="PASS" starttime="20210618 20:26:01.420" endtime="20210618 20:26:01.422"/>
</kw>
<msg timestamp="20210618 20:26:01.424" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '56']</msg>
<status status="PASS" starttime="20210618 20:26:00.221" endtime="20210618 20:26:01.424"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 20:26:01.425" level="INFO">Length is 2</msg>
<msg timestamp="20210618 20:26:01.425" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 20:26:01.424" endtime="20210618 20:26:01.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:26:01.425" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 20:26:01.425" endtime="20210618 20:26:01.425"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 20:26:01.425" endtime="20210618 20:26:01.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:26:01.426" level="INFO">['4', '56']</msg>
<status status="PASS" starttime="20210618 20:26:01.426" endtime="20210618 20:26:01.426"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 20:26:01.426" endtime="20210618 20:26:01.426"/>
</kw>
<status status="PASS" starttime="20210618 20:24:35.034" endtime="20210618 20:26:01.427"/>
</kw>
<status status="PASS" starttime="20210618 20:24:13.471" endtime="20210618 20:26:01.427"/>
</test>
<test id="s1-t56" name="Verify setting 5GHz ChannelID 60 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:26:01.431" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:26:01.462" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-171.log</msg>
<status status="PASS" starttime="20210618 20:26:01.430" endtime="20210618 20:26:11.445"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:26:11.446" endtime="20210618 20:26:11.921"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:26:13.937" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:26:11.922" endtime="20210618 20:26:13.937"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:26:13.938" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:26:14.245" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:26:13.937" endtime="20210618 20:26:14.264"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:26:16.268" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:26:14.264" endtime="20210618 20:26:16.268"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:26:16.269" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:26:16.268" endtime="20210618 20:26:18.130"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:26:23.145" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:26:18.131" endtime="20210618 20:26:23.145"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:26:23.145" endtime="20210618 20:26:23.153"/>
</kw>
<status status="PASS" starttime="20210618 20:26:01.430" endtime="20210618 20:26:23.153"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>60</arg>
<arg>8</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:26:23.155" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:26:23.155" endtime="20210618 20:26:23.205"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:26:28.213" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:26:23.206" endtime="20210618 20:26:28.213"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:26:28.213" endtime="20210618 20:26:28.220"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:26:28.220" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:26:28.220" endtime="20210618 20:26:28.238"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:26:28.248" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:26:28.238" endtime="20210618 20:26:28.248"/>
</kw>
<status status="PASS" starttime="20210618 20:26:23.155" endtime="20210618 20:26:28.249"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:26:28.250" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:26:28.249" endtime="20210618 20:26:28.487"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:26:28.488" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[8]/a'.</msg>
<status status="PASS" starttime="20210618 20:26:28.487" endtime="20210618 20:26:28.714"/>
</kw>
<status status="PASS" starttime="20210618 20:26:28.249" endtime="20210618 20:26:28.715"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:26:28.716" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:26:28.716" endtime="20210618 20:26:28.942"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:26:28.942" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 20:26:28.942" endtime="20210618 20:26:29.170"/>
</kw>
<status status="PASS" starttime="20210618 20:26:28.715" endtime="20210618 20:26:29.170"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:26:29.171" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:26:29.171" endtime="20210618 20:26:29.425"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:26:29.604" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2060%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2060%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:26:29.426" endtime="20210618 20:26:29.604"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:26:44.616" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:26:29.605" endtime="20210618 20:26:44.616"/>
</kw>
<status status="PASS" starttime="20210618 20:26:29.170" endtime="20210618 20:26:44.617"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:26:44.618" endtime="20210618 20:26:44.623"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:26:44.624" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:26:44.623" endtime="20210618 20:26:44.860"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:26:46.870" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:26:44.860" endtime="20210618 20:26:46.870"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:26:46.870" endtime="20210618 20:26:48.125"/>
</kw>
<status status="PASS" starttime="20210618 20:26:44.617" endtime="20210618 20:26:48.126"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:26:48.126" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:26:48.126" endtime="20210618 20:26:48.127"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:26:48.266" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:33:25 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:26:48.127" endtime="20210618 20:26:48.266"/>
</kw>
<status status="PASS" starttime="20210618 20:26:48.126" endtime="20210618 20:26:48.267"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:26:48.311" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:26:48.356" level="INFO">ARC_WLAN_5G_Channel=60
#</msg>
<msg timestamp="20210618 20:26:48.356" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=60
#</msg>
<status status="PASS" starttime="20210618 20:26:48.267" endtime="20210618 20:26:48.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:26:48.357" level="INFO">ARC_WLAN_5G_Channel=60
#</msg>
<status status="PASS" starttime="20210618 20:26:48.357" endtime="20210618 20:26:48.357"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:26:48.359" level="INFO">${result_5Ghz} = ['60']</msg>
<status status="PASS" starttime="20210618 20:26:48.357" endtime="20210618 20:26:48.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:26:48.360" level="INFO">5Ghz Channel ID from console is 60</msg>
<status status="PASS" starttime="20210618 20:26:48.359" endtime="20210618 20:26:48.360"/>
</kw>
<msg timestamp="20210618 20:26:48.361" level="INFO">${5Ghz_ChannelID_Console} = 60</msg>
<status status="PASS" starttime="20210618 20:26:48.267" endtime="20210618 20:26:48.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:26:48.361" level="INFO">Channel ID from Console is 60</msg>
<status status="PASS" starttime="20210618 20:26:48.361" endtime="20210618 20:26:48.361"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:26:48.361" endtime="20210618 20:26:48.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:26:48.362" endtime="20210618 20:26:48.362"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:27:48.366" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 20:26:48.363" endtime="20210618 20:27:48.366"/>
</kw>
<status status="PASS" starttime="20210618 20:26:48.362" endtime="20210618 20:27:48.366"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:27:48.366" endtime="20210618 20:27:48.367"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:27:48.366" endtime="20210618 20:27:48.367"/>
</branch>
<status status="PASS" starttime="20210618 20:26:48.362" endtime="20210618 20:27:48.367"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:27:48.368" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:27:48.371" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:27:48.998" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:27:48.367" endtime="20210618 20:27:48.998"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:27:48.999" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:27:49.003" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:27:49.598" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:27:49.598" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:27:48.998" endtime="20210618 20:27:49.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:27:49.599" level="INFO">
  
&gt; SSID 3 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
  
  SSID 4 : AndrewWiFi
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 96:6a:b0:c9:65:e1
           Signal             : 36%  

</msg>
<status status="PASS" starttime="20210618 20:27:49.598" endtime="20210618 20:27:49.599"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:27:49.601" level="INFO">${Analyser_ChannelID_5Ghz} = ['4']</msg>
<status status="PASS" starttime="20210618 20:27:49.600" endtime="20210618 20:27:49.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:27:49.603" level="FAIL">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</msg>
<status status="FAIL" starttime="20210618 20:27:49.601" endtime="20210618 20:27:49.603"/>
</kw>
<status status="FAIL" starttime="20210618 20:27:48.367" endtime="20210618 20:27:49.603"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20210618 20:27:49.603" endtime="20210618 20:27:49.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:27:49.604" endtime="20210618 20:27:49.604"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20210618 20:27:49.604" endtime="20210618 20:27:49.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210618 20:27:49.604" endtime="20210618 20:27:49.604"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" starttime="20210618 20:27:49.604" endtime="20210618 20:27:49.604"/>
</kw>
<status status="FAIL" starttime="20210618 20:26:23.154" endtime="20210618 20:27:49.604"/>
</kw>
<status status="FAIL" starttime="20210618 20:26:01.429" endtime="20210618 20:27:49.605">Resolving variable '${Analyser_ChannelID_5Ghz[1]}' failed: IndexError: list index out of range</status>
</test>
<test id="s1-t57" name="Verify setting 5GHz ChannelID 64 with Bandwith 20 MHz">
<kw name="Login to DUT" library="CommonFunction" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${HOME_PAGE}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210618 20:27:49.612" level="INFO">Opening browser 'firefox' to base url 'https://mijnmodem.kpn/login.htm'.</msg>
<msg timestamp="20210618 20:27:49.636" level="INFO">Firefox driver log is always forced to to: D:\Personal\Automation\KPN\WiFi\result\geckodriver-172.log</msg>
<status status="PASS" starttime="20210618 20:27:49.612" endtime="20210618 20:27:59.789"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210618 20:27:59.790" endtime="20210618 20:28:00.090"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:28:02.095" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:28:00.091" endtime="20210618 20:28:02.095"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${Password}</arg>
<arg>${Password_value}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20210618 20:28:02.096" level="INFO">Sending key(s) ('Qwerty1!',) to //input[@name='ui_pws'] element.</msg>
<msg timestamp="20210618 20:28:02.397" level="INFO">Sending keys Qwerty1!</msg>
<status status="PASS" starttime="20210618 20:28:02.095" endtime="20210618 20:28:02.417"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:28:04.433" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:28:02.417" endtime="20210618 20:28:04.433"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Login_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:28:04.434" level="INFO">Clicking element '//tbody/tr[5]/td[1]'.</msg>
<status status="PASS" starttime="20210618 20:28:04.433" endtime="20210618 20:28:06.629"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:28:11.636" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:28:06.629" endtime="20210618 20:28:11.636"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Topology Overview}</arg>
<arg>15s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:28:11.636" endtime="20210618 20:28:11.644"/>
</kw>
<status status="PASS" starttime="20210618 20:27:49.608" endtime="20210618 20:28:11.644"/>
</kw>
<kw name="Verify 5Ghz ChannelID scenarios">
<arg>64</arg>
<arg>9</arg>
<arg>1</arg>
<tag>5GhzChannelIDSet</tag>
<tag>Funtional</tag>
<tag>WiFi</tag>
<doc>This Test case is to verify setting different channel and Bandwith</doc>
<kw name="Go to WLAN Page" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_Tab}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:28:11.647" level="INFO">Clicking element '//a[normalize-space()='WLAN']'.</msg>
<status status="PASS" starttime="20210618 20:28:11.646" endtime="20210618 20:28:11.705"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:28:16.715" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20210618 20:28:11.705" endtime="20210618 20:28:16.715"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>Access Points</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20210618 20:28:16.715" endtime="20210618 20:28:16.724"/>
</kw>
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:frm_main2</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20210618 20:28:16.725" level="INFO">Selecting frame 'id:frm_main2'.</msg>
<status status="PASS" starttime="20210618 20:28:16.724" endtime="20210618 20:28:16.734"/>
</kw>
<kw name="Current Frame Should Contain" library="SeleniumLibrary">
<arg>${wlan_page}</arg>
<doc>Verifies that the current frame contains ``text``.</doc>
<msg timestamp="20210618 20:28:16.742" level="INFO">Current frame contains text 'Restore WiFi Defaults'.</msg>
<status status="PASS" starttime="20210618 20:28:16.734" endtime="20210618 20:28:16.742"/>
</kw>
<status status="PASS" starttime="20210618 20:28:11.646" endtime="20210618 20:28:16.743"/>
</kw>
<kw name="Set 5Ghz Channel ID with value" library="WLANPage">
<arg>${ChannelID5_index}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_ChannelID_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:28:16.744" level="INFO">Clicking element '//tbody/tr[@id='tr_wchan_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:28:16.743" endtime="20210618 20:28:16.976"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:28:16.976" level="INFO">Clicking element '//*[@id="tr_wchan_both"]/td[2]/div[2]/ul/li[9]/a'.</msg>
<status status="PASS" starttime="20210618 20:28:16.976" endtime="20210618 20:28:17.203"/>
</kw>
<status status="PASS" starttime="20210618 20:28:16.743" endtime="20210618 20:28:17.203"/>
</kw>
<kw name="Set 5Ghz Bandwith with value" library="WLANPage">
<arg>${5GHz_Bandwidth}</arg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${5Ghz_Bandwidth_dropdown}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:28:17.206" level="INFO">Clicking element '//tbody/tr[@id='tr_bandwidth_both']/td[@class='tdText']/div[2]'.</msg>
<status status="PASS" starttime="20210618 20:28:17.205" endtime="20210618 20:28:17.428"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[${item label}]/a</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:28:17.429" level="INFO">Clicking element '//*[@id="tr_bandwidth_both"]/td[2]/div[2]/ul/li[1]/a'.</msg>
<status status="PASS" starttime="20210618 20:28:17.428" endtime="20210618 20:28:17.658"/>
</kw>
<status status="PASS" starttime="20210618 20:28:17.204" endtime="20210618 20:28:17.658"/>
</kw>
<kw name="Save the WiFi setting" library="WLANPage">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${WLAN_save_setting}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:28:17.659" level="INFO">Clicking element '//*[@id="save"]/span[2]'.</msg>
<status status="PASS" starttime="20210618 20:28:17.659" endtime="20210618 20:28:17.918"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>${TEST_NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210618 20:28:18.118" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Verify%20setting%205GHz%20ChannelID%2064%20with%20Bandwith%2020%20MHz.png"&gt;&lt;img src="Verify%20setting%205GHz%20ChannelID%2064%20with%20Bandwith%2020%20MHz.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210618 20:28:17.918" endtime="20210618 20:28:18.118"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:28:33.131" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20210618 20:28:18.118" endtime="20210618 20:28:33.131"/>
</kw>
<status status="PASS" starttime="20210618 20:28:17.658" endtime="20210618 20:28:33.131"/>
</kw>
<kw name="Logout from DUT" library="CommonFunction">
<kw name="Unselect Frame" library="SeleniumLibrary">
<doc>Sets the main frame as the current frame.</doc>
<status status="PASS" starttime="20210618 20:28:33.132" endtime="20210618 20:28:33.135"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Logout_button}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210618 20:28:33.138" level="INFO">Clicking element 'btn_logout'.</msg>
<status status="PASS" starttime="20210618 20:28:33.136" endtime="20210618 20:28:33.375"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:28:35.390" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210618 20:28:33.375" endtime="20210618 20:28:35.390"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210618 20:28:35.390" endtime="20210618 20:28:36.720"/>
</kw>
<status status="PASS" starttime="20210618 20:28:33.132" endtime="20210618 20:28:36.720"/>
</kw>
<kw name="Telnet to DUT Console" library="Telnet">
<kw name="Open Connection" library="Telnet">
<arg>192.168.2.254</arg>
<arg>prompt_is_regexp=yes</arg>
<arg>prompt=#</arg>
<doc>Opens a new Telnet connection to the given host and port.</doc>
<msg timestamp="20210618 20:28:36.721" level="INFO">Opening connection to 192.168.2.254:23 with prompt: # (regexp)</msg>
<status status="PASS" starttime="20210618 20:28:36.720" endtime="20210618 20:28:36.724"/>
</kw>
<kw name="Login" library="Telnet">
<arg>ls</arg>
<arg>date</arg>
<arg>login_prompt=#</arg>
<arg>password_prompt=#</arg>
<doc>Logs in to the Telnet server with the given user information.</doc>
<msg timestamp="20210618 20:28:36.866" level="INFO">BusyBox v1.26.2 (2020-06-23 18:38:50 CST) built-in shell (ash)
Enter 'help' for a list of built-in commands.

# ls
[1;34mbin[0m      [1;34mdev[0m      [1;36mmnt[0m      [1;34mproc[0m     [1;34msys[0m      [1;36mvar[0m
[1;34mbootfs[0m   [1;36metc[0m      [1;36mopt[0m      [1;34mramdisk[0m  [1;34mtmp[0m      [1;34mwww[0m
[1;34mdata[0m     [1;34mlib[0m      [1;34mowl[0m      [1;34msbin[0m     [1;34musr[0m
# date
Thu Jan  1 11:35:14 UTC 1970
#</msg>
<status status="PASS" starttime="20210618 20:28:36.725" endtime="20210618 20:28:36.866"/>
</kw>
<status status="PASS" starttime="20210618 20:28:36.720" endtime="20210618 20:28:36.867"/>
</kw>
<kw name="Get the 5Ghz channel id from console" library="Telnet">
<var>${5Ghz_ChannelID_Console}</var>
<kw name="Execute Command" library="Telnet">
<var>${out_5Ghz}</var>
<arg>cat /etc/config/.glbcfg |grep 5G_Channel=</arg>
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<msg timestamp="20210618 20:28:36.870" level="INFO">cat /etc/config/.glbcfg |grep 5G_Channel=</msg>
<msg timestamp="20210618 20:28:36.958" level="INFO">ARC_WLAN_5G_Channel=64
#</msg>
<msg timestamp="20210618 20:28:36.959" level="INFO">${out_5Ghz} = ARC_WLAN_5G_Channel=64
#</msg>
<status status="PASS" starttime="20210618 20:28:36.867" endtime="20210618 20:28:36.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${out_5Ghz}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:28:36.959" level="INFO">ARC_WLAN_5G_Channel=64
#</msg>
<status status="PASS" starttime="20210618 20:28:36.959" endtime="20210618 20:28:36.960"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${result_5Ghz}</var>
<arg>${out_5Ghz}</arg>
<arg>=(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:28:36.961" level="INFO">${result_5Ghz} = ['64']</msg>
<status status="PASS" starttime="20210618 20:28:36.960" endtime="20210618 20:28:36.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>5Ghz Channel ID from console is ${result_5Ghz[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:28:36.963" level="INFO">5Ghz Channel ID from console is 64</msg>
<status status="PASS" starttime="20210618 20:28:36.961" endtime="20210618 20:28:36.963"/>
</kw>
<msg timestamp="20210618 20:28:36.965" level="INFO">${5Ghz_ChannelID_Console} = 64</msg>
<status status="PASS" starttime="20210618 20:28:36.867" endtime="20210618 20:28:36.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Channel ID from Console is ${5Ghz_ChannelID_Console}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:28:36.965" level="INFO">Channel ID from Console is 64</msg>
<status status="PASS" starttime="20210618 20:28:36.965" endtime="20210618 20:28:36.965"/>
</kw>
<kw name="Close All Connections" library="Telnet">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20210618 20:28:36.966" endtime="20210618 20:28:36.966"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${5Ghz_ChannelID_Console}</arg>
<arg>${5GHz_Channel}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210618 20:28:36.966" endtime="20210618 20:28:36.967"/>
</kw>
<if>
<branch type="IF" condition="${5GHz_Channel} &lt; 100">
<kw name="Sleep" library="BuiltIn">
<arg>60s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210618 20:29:36.978" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20210618 20:28:36.968" endtime="20210618 20:29:36.978"/>
</kw>
<status status="PASS" starttime="20210618 20:28:36.967" endtime="20210618 20:29:36.978"/>
</branch>
<branch type="ELSE">
<kw name="Sleep" library="BuiltIn">
<arg>150s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20210618 20:29:36.978" endtime="20210618 20:29:36.979"/>
</kw>
<status status="NOT RUN" starttime="20210618 20:29:36.978" endtime="20210618 20:29:36.979"/>
</branch>
<status status="PASS" starttime="20210618 20:28:36.967" endtime="20210618 20:29:36.979"/>
</if>
<kw name="Fetch the Channel IDs from Windows Analyser" library="CommonWindowsFunction">
<var>${5Ghz_ChannelID_Analyser}</var>
<kw name="Run Process" library="Process">
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:29:36.980" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:29:36.985" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:29:37.591" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20210618 20:29:36.979" endtime="20210618 20:29:37.592"/>
</kw>
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</arg>
<arg>${cmd}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20210618 20:29:37.592" level="INFO">Starting process:
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "netsh wlan show network mode=bssid | Select-String -Pattern \"jacques\" -Context 1,16"</msg>
<msg timestamp="20210618 20:29:37.596" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210618 20:29:38.191" level="INFO">Process completed.</msg>
<msg timestamp="20210618 20:29:38.192" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20210618 20:29:37.592" endtime="20210618 20:29:38.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:29:38.193" level="INFO">
  
&gt; SSID 2 : jacques
      Network type            : Infrastructure
      Authentication          : WPA2-Personal
      Encryption              : CCMP 
      BSSID 1                 : 94:6a:b0:0d:03:65
           Signal             : 99%  
           Radio type         : 802.11n
           Channel            : 4 
           Basic rates (Mbps) : 6.5 16 19.5 117
           Other rates (Mbps) : 18 19.5 24 36 39 48 54 156
      BSSID 2                 : 94:6a:b0:0d:03:66
           Signal             : 99%  
           Radio type         : 802.11ac
           Channel            : 64 
           Basic rates (Mbps) : 12 24 58.5
           Other rates (Mbps) : 18 36 48 54 526.5
  

</msg>
<status status="PASS" starttime="20210618 20:29:38.192" endtime="20210618 20:29:38.193"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${Analyser_ChannelID_5Ghz}</var>
<arg>${result.stdout}</arg>
<arg>Channel.*: (\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210618 20:29:38.194" level="INFO">${Analyser_ChannelID_5Ghz} = ['4', '64']</msg>
<status status="PASS" starttime="20210618 20:29:38.193" endtime="20210618 20:29:38.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Analyser Channel IDs are ${Analyser_ChannelID_5Ghz[0]} and ${Analyser_ChannelID_5Ghz[1]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:29:38.197" level="INFO">Analyser Channel IDs are 4 and 64</msg>
<status status="PASS" starttime="20210618 20:29:38.195" endtime="20210618 20:29:38.197"/>
</kw>
<msg timestamp="20210618 20:29:38.199" level="INFO">${5Ghz_ChannelID_Analyser} = ['4', '64']</msg>
<status status="PASS" starttime="20210618 20:29:36.979" endtime="20210618 20:29:38.199"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${5Ghz_ChannelID_Analyser_Length}</var>
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210618 20:29:38.199" level="INFO">Length is 2</msg>
<msg timestamp="20210618 20:29:38.199" level="INFO">${5Ghz_ChannelID_Analyser_Length} = 2</msg>
<status status="PASS" starttime="20210618 20:29:38.199" endtime="20210618 20:29:38.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>length of ChannelID from Analyser ${5Ghz_ChannelID_Analyser_Length}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:29:38.200" level="INFO">length of ChannelID from Analyser 2</msg>
<status status="PASS" starttime="20210618 20:29:38.199" endtime="20210618 20:29:38.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser_Length} &lt; 2</arg>
<arg>${5Ghz_ChannelID_Analyser}=</arg>
<arg>Fetch the Channel IDs from Windows Analyser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210618 20:29:38.200" endtime="20210618 20:29:38.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210618 20:29:38.201" level="INFO">['4', '64']</msg>
<status status="PASS" starttime="20210618 20:29:38.200" endtime="20210618 20:29:38.201"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${5Ghz_ChannelID_Analyser}</arg>
<arg>${5Ghz_ChannelID_Console}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20210618 20:29:38.201" endtime="20210618 20:29:38.202"/>
</kw>
<status status="PASS" starttime="20210618 20:28:11.645" endtime="20210618 20:29:38.202"/>
</kw>
<status status="PASS" starttime="20210618 20:27:49.607" endtime="20210618 20:29:38.204"/>
</test>
<status status="FAIL" starttime="20210618 17:32:20.364" endtime="20210618 20:29:38.229"/>
</suite>
<statistics>
<total>
<stat pass="36" fail="21" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="36" fail="21" skip="0" id="s1" name="WLAN 5GHzChannelID">WLAN 5GHzChannelID</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
